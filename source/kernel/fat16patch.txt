;MSXDOS2 kernel version 2.30
;1999/8/10

;kernel version 2.30を基にしているため、version 2.31のアドレスに変換するには、
 0〜17D5hまではそのまま、17D6h以降はアドレス＋0Ahしてください。
 
;「FAT16」で検索すると、パッチをあてた場所がわかります。

; DPBという単語が出てきますが、ページ3の物ではなくページ2のドライブ情報のことです。


;ブートセクタに'FAT16'の文字列があるときはFAT16フォーマット
;それ以外はFAT12フォーマットと判定する 


;FAT16ドライブ登録時、DPB+1Eh 〜 1FhをFF,FF（ルートディレクトリ）にする
;BBE4hがFFxxhの時、BBE8hがFFFFhかどうかをチェックする 
;BBDEh〜　Dirのセクタ番号を24bitでコピー	
;BBDEh〜　FIBにコピーするときも24bit copy	
;データセグメント内のFile handleは38hbytes 確保する（Bit16-23のため）


	ORG	00h

	JP	0095h		;0  Reboot
	DB	0,0		;3
	JP	026Dh		;5  Entry to DOS2 function calls
	DB	0,0,0,0		;8
	JP	0F1E8h		;C  RDSLT
	DB	0,0,0,0,0	;F 
	JP	0F1EBh		;14 WRSLT
	DB	0,0,0,0,0	;17
	JP	0F1EEh		;1C CALSLT
	DB	0,0,0,0,0	;1F
	JP	0F1F1h		;24 ENASLT
	NOP			;27
	JP	0C206h		;28 RST28
	DB	0,0,0,0,0	;2B
	JP	0F1F4h		;30 CALLF
	DB	0,0,0,0,0	;33
	JP	0F1E5h		;38 INT
	OUT	(0A8h),A	;3B Change to expansion slot
	LD	A,(0FFFFh)	;3D
	CPL			;40
	LD	L,A		;41
	AND	H		;42
	OR	D		;43
	JR	Z0002		;44
	OUT	(0A8h),A	;46
	LD	A,L		;48
	JR	Z0002		;49
	OUT	(0A8h),A	;4B
	LD	A,E		;4D
Z0002:	LD	(0FFFFh),A	;4E
	LD	A,B		;51
	OUT	(0A8h),A	;52
	RET			;54
	DB	0,0,0,0,0,0,0	;55
	JP	011A6h		;5C
	JP	01256h		;5F
	DB	0,0,0,0,0,0,0,0,0,0	;62
	DB	0,0,0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0,0,0
	
	JP	0A2Dh		;80 Entry CHGET 009Fh
	JP	0A6Bh		;83 	  CHPUT 00A2h
	JP	0A42h		;86 	  CHSNS 009Ch
	JP	0B25h		;89 	  LPTOUT 00A5h
	JP	0B37h		;8C 	  LPTSTT 00A8h
	JP	0B50h		;8F
	JP	0B46h		;92

;Reboot
	LD	IY,0BB80h	;95 Top of work area
	LD	DE,0F353h	;99 
	LD	A,(0F348h)	;9C Master slot
	LD	C,A		;9F
	LD	L,080h		;A0 RAMDISKのためにドライブ情報エリアを確保
	LD	B,01h		;A2
	CALL	017Eh		;A4
	JR	NZ,Z0004	;A7
	LD	HL,0FB21h	;A9
	LD	DE,0F355h	;AC Top of DPB
	LD	B,04h		;AF
Z0005:	LD	A,(HL)		;B1
	INC	HL		;B2
	LD	C,(HL)		;B3
	INC	HL		;B4
	OR	A		;B5
	PUSh	HL		;B6
	PUSh	BC		;B7
	LD	B,A		;B8
	LD	L,010h		;B9 ドライブ情報エリアを確保
	CALL	NZ,017Eh	;BB
	POP	BC		;BE
	POP	HL		;BF
	JR	NZ,Z0004	;C0 エラー
	DJNZ	Z0005		;C2
	LD	D,B		;C4
	CALL	0E8Bh		;C5
	LD	HL,012Ch	;C8
Z0010:	LD	A,(HL)		;CB
	OR	A		;CC
	JR	Z,Z0006		;CD
	INC	HL		;CF
	PUSh	HL		;D0
	LD	HL,02Bh		;D1
	CALL	01CBh		;D4 Reserve 2Bh bytes for device files
	POP	DE		;D7
Z0004:	JR	NZ,Z0008	;D8
	LD	BC,(0BBF4h)	;DA
	LD	(0BBF4h),HL	;DE
	LD	(HL),C		;E1
	INC	HL		;E2
	LD	(HL),B		;E3
	INC	HL		;E4
	EX	DE,HL		;E5
	LDI			;E6
	LDI			;E8
	EX	DE,HL		;EA
	LD	BC,06h		;EB
	ADD	HL,BC		;EE
	EX	DE,HL		;EF
	LD	BC,0Ch		;F0
	LDIR			;F3
	LD	A,080h		;F5
	LD	(DE),A		;F7
	LD	B,014h		;F8
	XOR	A		;FA
Z0009:	INC	DE		;FB
	LD	(DE),A		;FC
	DJNZ	Z0009		;FD
	JR	Z0010		;FF



Z0006:	LD	B,05h		;101 Buffers = 5
	CALL	0E44h		;103 Reserve #20B bytes for Buffer
	LD	B,00h		;106
	CALL	02066h		;108
	CALL	0E35h		;10B Clear with 0 from #BC00 to #BFFF 
	CALL	0384h		;10E
	LD	HL,0178h	;111
	LD	DE,0B066h	;114
	LD	BC,06h		;117
	LDIR			;11A
	LD	A,01h		;11C
	LD	(0F2BDh),A	;11E
	LD	(IY+10h),0FFh	;121
	CALL	010CAh		;125
	OR	A		;128
	RET			;129
Z0008:	SCF			;12A
	RET			;12B
	
	DB	0FFh		;12C
	DB	32h,09h,0A3h	;12D
	DB	'CON'		;130
	DB	20h,20h,20h	;133
	DB	20h,20h,20h	;136
	DB	20h,20h		;139
	DB	0FFh		;13B
	DB	0E2h,09h,0A0h	;13C
	DB	'LST'		;13F
	DB	20h,20h,20h	;142
	DB	20h,20h,20h	;145
	DB	20h,20h		;148
	DB	0FFh		;14A
	DB	0E2h,09h,0A0h	;14B
	DB	'PRN'		;14E
	DB	20h,20h,20h	;151
	DB	20h,20h,20h	;154
	DB	20h,20h		;157
	DB	0FFh		;159
	DB	30h,0Ah,0A0h	;15A
	DB	'NUL'		;15D
	DB	20h,20h,20h	;160
	DB	20h,20h,20h	;163
	DB	20h,20h		;166
	DB	0FFh		;168
	DB	0BFh,09h,0A0h	;169
	DB	'AUX'		;16C
	DB	20h,20h,20h	;16F
	DB	20h,20h,20h	;172
	DB	20h,20h		;175
	NOP			;177
;-----------------------------------------
;B066hへ6バイト転送
	DEC	DE		;178
	LD	A,C		;179
	DEC	(HL)		;17A
	DEC	DE		;17B
	LD	A,B		;17C
	DEC	(HL)		;17D
	
;-----------------------------------------
	XOR	A		;17E 
Z0028:	EX	AF,AF'		;17F
	PUSh	HL		;180
	LD	HL,060h		;181
Z0023:	CALL	01CBh		;184 ドライブ情報のために60hバイト確保
	JR	NZ,Z0026	;187
	EX	DE,HL		;189
	PUSh	DE		;18A
	POP	IX		;18B
	PUSh	BC		;18D
	LD	C,(HL)		;18E
	INC	HL		;18F
	LD	B,(HL)		;190
Z0024:	INC	HL		;191
	PUSh	HL		;192
Z0025:	LD	(IX+2h)C	;193 DPB address
	LD	(IX+3h)B	;196
	LD	A,(BC)		;199 Drive
	INC	A		;19A
	LD	(IX+8h)A	;19B 論理ドライブ
	LD	L,A		;19E
	LD	H,00h		;19F
	INC	BC		;1A1
	LD	A,(BC)		;1A2 Media ID
	LD	(IX+1Dh)A	;1A3
	LD	BC,0BBFBh	;1A6 RAM disk
	JR	Z,Z0027		;1A9
	LD	BC,0BA23h	;1AB 
Z0027:	ADD	HL,HL		;1AE 
	ADD	HL,BC		;1AF
	LD	(HL),E		;1B0
	INC	HL		;1B1
	LD	(HL),D		;1B2
	POP	DE		;1B3
	POP	BC		;1B4
	POP	HL		;1B5
	LD	(IX+0h)C	;1B6 DISK ROM slot 
	LD	(IX+1h)L	;1B9 10h
	EX	AF,AF'		;1BC
	LD	(IX+6h)A	;1BD ローカルドライブ	;FAT16*済  call  3FE9h	;in bank2/kinit.mac INIT_UNITS
	INC	A		;1C0
	LD	(IX+1Fh),0FFh	;1C1 00h,FFhはルートディレクトリ
	DJNZ	Z0028		;1C5 
	XOR	A		;1C7
	RET			;1C8	
Z0026:	POP	HL		;1C9
	RET			;1CA
	
	PUSh	DE		;1CB 
	PUSh	BC		;1CC
	INC	HL		;1CD
	RES	0,L		;1CE
	LD	B,H		;1D0
	LD	C,L		;1D1
	LD	HL,(0B064h)	;1D2
Z0032:	LD	E,(HL)		;1D5
	INC	HL		;1D6
	LD	D,(HL)		;1D7
	INC	HL		;1D8
	LD	A,D		;1D9
	OR	E		;1DA
	JR	Z,Z0029		;1DB
	BIT	0,E		;1DD
	JR	NZ,Z0030	;1DF
	EX	DE,HL		;1E1
	SBC	HL,BC		;1E2
	JR	NC,Z0031	;1E4
	ADD	HL,BC		;1E6
	EX	DE,HL		;1E7
Z0030:	RES	0,E		;1E8
	ADD	HL,DE		;1EA
	JR	Z0032		;1EB
Z0031:	EX	DE,HL		;1ED
	DEC	HL		;1EE
	DEC	HL		;1EF
	JR	Z,Z0033		;1F0
	DEC	DE		;1F2
	DEC	DE		;1F3
	LD	A,D		;1F4
	OR	E		;1F5
	JR	Z,Z0034		;1F6
	LD	(HL),E		;1F8
	INC	HL		;1F9
	LD	(HL),D		;1FA
	INC	HL		;1FB
	ADD	HL,DE		;1FC
	JR	Z0033		;1FD
Z0034:	INC	BC		;1FF
	INC	BC		;200
	JR	Z0033		;201
Z0029:	LD	A,0DEh		;203
	INC	BC		;205
	INC	BC		;206
	LD	HL,(0B064h)	;207
	OR	A		;20A
	SBC	HL,BC		;20B
	JR	C,Z0035		;20D
	JP	P,Z0035		;20F
	LD	(0B064h),HL	;212
	DEC	BC		;215
	DEC	BC		;216
Z0033:	LD	(HL),C		;217 BC=bytes of reserved memory
	SET	0,(HL)		;218
	INC	HL		;21A
	LD	(HL),B		;21B
	INC	HL		;21C
	PUSh	HL		;21D
Z0036:	LD	(HL),00h	;21E clear with 0
	INC	HL		;220
	DEC	BC		;221
	LD	A,B		;222
	OR	C		;223
	JR	NZ,Z0036	;224
	POP	HL		;226
Z0035:	POP	BC		;227
	POP	DE		;228
	OR	A		;229
	RET			;22A
	
	DEC	HL		;22B
	DEC	HL		;22C
	RES	0,(HL)		;22D
	PUSh	DE		;22F
	PUSh	BC		;230
	LD	HL,(0B064h)	;231
Z0038:	LD	C,(HL)		;234
	BIT	0,C		;235
	JR	NZ,Z0037	;237
	INC	HL		;239
	LD	B,(HL)		;23A
	INC	HL		;23B
	ADD	HL,BC		;23C
	JR	Z0038		;23D
Z0037:	LD	(0B064h),HL	;23F
Z0043:	LD	E,(HL)		;242
	INC	HL		;243
	LD	D,(HL)		;244
	INC	HL		;245
	LD	A,D		;246
	OR	E		;247
	JR	Z,Z0039		;248
	BIT	0,E		;24A
	JR	NZ,Z0040	;24C
Z0042:	PUSh	HL		;24E
	ADD	HL,DE		;24F
	LD	C,(HL)		;250
	INC	HL		;251
	LD	B,(HL)		;252
	POP	HL		;253
	BIT	0,C		;254
Z0046:	JR	NZ,Z0041	;256
	INC	BC		;258
	INC	BC		;259
	EX	DE,HL		;25A
	ADD	HL,BC		;25B
	EX	DE,HL		;25C
	JR	Z0042		;25D
Z0041:	DEC	HL		;25F
	LD	(HL),D		;260
	DEC	HL		;261
	LD	(HL),E		;262
	INC	HL		;263
	INC	HL		;264
Z0040:	RES	0,E		;265
	ADD	HL,DE		;267
	JR	Z0043		;268
Z0039:	POP	BC		;26A
	POP	DE		;26B
	RET			;26C
	
Z0001:	EI			;26D Entry to function call
	CALL	0F252h		;26E
	CALL	Z0044		;271
	LD	(0BBFDh),A	;274 error code
	RET			;277
Z0044:	PUSh	HL		;278
	PUSh	BC		;279
	EX	AF,AF'		;27A
	LD	A,(0F2BEh)	;27B
	DEC	A		;27E
	CALL	Z,0AB9h		;27F
	LD	A,C		;282
	CP	071h		;283
	JR	C,Z0045		;285
	LD	C,09h		;287
Z0045:	EX	AF,AF'		;289
	LD	B,00h		;28A
	LD	HL,02A2h	;28C
	ADD	HL,BC		;28F
	ADD	HL,BC		;290
	LD	C,(HL)		;291
	INC	HL		;292
Z0047:	LD	H,(HL)		;293
	LD	L,C		;294
	LD	IY,0BB80h	;295
	POP	BC		;299
	EX	(SP),HL		;29A
	RET			;29B

;#09,1C-20,25,29,32-3F,63,64
	LD	A,0DCh		;29C error #DC 'Invalid MSX-DOS call'
Z0049:	LD	HL,00h		;29E
	RET			;2A1

;Entry each of DOS function call
	DW	0CFBh		;2A2	#00
	DW	03A8h		;2A4	#01
	DW	03B6h		;2A6	#02
	DW	042Eh		;2A8	#03
	DW	043Dh		;2AA	#04
	DW	0441h		;2AC	#05
	DW	03D4h		;2AE	#06
	DW	03FEh		;2B0	#07
	DW	03BEh		;2B2	#08
	DW	029Ch		;2B4	#09
	DW	0456h		;2B6	#0A
	DW	03CDh		;2B8	#0B
	DW	0B90h		;2BB	#0C
	DW	0B95h		;2BC	#0D
	DW	0BABh		;2BE	#0E
	DW	3767h		;2C0	#0F
	DW	37ABh		;2C2	#10
	DW	37C5h		;2C4	#11
	DW	37DFh		;2C6	#12
	DW	38DCh		;2C8	#13
	DW	3842h		;2CA	#14
	DW	3889h		;2CC	#15
	DW	38C4h		;2CE	#16
	DW	3909h		;2D0	#17
	DW	0BC6h		;2D2	#18
	DW	0BDCh		;2D4	#19
	DW	0BE4h		;2D6	#1A
	DW	0BECh		;2D8	#1B
	DW	029Ch		;2DA	#1C
	DW	029Ch		;2DC	#1D
	DW	029Ch		;2DE	#1E
	DW	029Ch		;2E0	#1F
	DW	029Ch		;2E2	#20
	DW	3949h		;2E4	#21
	DW	395Dh		;2E6	#22
	DW	3977h		;2E8	#23
	DW	39B0h		;2EA	#24
	DW	029Ch		;2EC	#25
	DW	3D35h		;2EE	#26
	DW	3D31h		;2F0	#27
	DW	395Fh		;2F2	#28
	DW	029Ch		;2F4	#29
	DW	1024h		;2F6	#2A
	DW	1059h		;2F8	#2B
	DW	10A3h		;2FA	#2C
	DW	10ADh		;2FC	#2D
	DW	0C48h		;2FE	#2E
	DW	256Ch		;300	#2F
	DW	256Fh		;302	#30
	DW	0C50h		;304	#31
	DW	029Ch		;306	#32
	DW	029Ch		;308	#33
	DW	029Ch		;30A	#34
	DW	029Ch		;30C	#35
	DW	029Ch		;30E	#36
	DW	029Ch		;310	#37
	DW	029Ch		;312	#38
	DW	029Ch		;314	#39
	DW	029Ch		;316	#3A
	DW	029Ch		;318	#3B
	DW	029Ch		;31A	#3C
	DW	029Ch		;31C	#3D
	DW	029Ch		;31E	#3E
	DW	029Ch		;320	#3F
	DW	18BCh		;322	#40
	DW	196Fh		;324	#41
	DW	18C0h		;326	#42
	DW	1D9Ch		;328	#43
	DW	1D8Ah		;32A	#44
	DW	1DE1h		;32C	#45
	DW	01DEEh		;32E	#46
	DW	01DFEh		;330	#47
	DW	01E13h		;332	#48
	DW	01E23h		;334	#49
	DW	01E33h		;336	#4A
	DW	01E77h		;338	#4B
	DW	02003h		;33A	#4C
	DW	01F0Ah		;33C	#4D
	DW	01F31h		;33E	#4E
	DW	01F56h		;340	#4F
	DW	01F7Bh		;342	#50
	DW	01FB4h		;344	#51
	DW	01F14h		;346	#52
	DW	01F3Bh		;348	#53
	DW	01F60h		;34A	#54
	DW	01F93h		;34C	#55
	DW	01FD6h		;34E	#56
	DW	00CCFh		;350	#57
	DW	00CD5h		;352	#58
	DW	0182Dh		;354	#59
	DW	01843h		;356	#5A
	DW	01863h		;358	#5B
	DW	01878h		;35A	#5C
	DW	0188Ah		;35C	#5D
	DW	01893h		;35E	#5E
	DW	00CE0h		;360	#5F
	DW	0201Fh		;362	#60
	DW	02066h		;364	#61
	DW	00CFDh		;366	#62
	DW	0029Ch		;368	#63
	DW	0029Ch		;36A	#64
	DW	00D05h		;36C	#65
	DW	00D0Ah		;36E	#66
	DW	00D39h		;370	#67	;FAT16*無 029Ch	RAMDISK/FORMATを潰す必要がないので不要
	DW	00D93h		;372	#68	;FAT16*無 029Ch	RAMDISK/FORMATを潰す必要がないので不要
	DW	00E44h		;374	#69
	DW	00E8Bh		;376	#6A
	DW	00EDEh		;378	#6B
	DW	00EFFh		;37A	#6C
	DW	00F55h		;37C	#6D
	DW	00EB6h		;37E	#6E
	DW	00EC8h		;380	#6F
	DW	00ED2h		;382	#70

;-------------
	LD	HL,0B0D0h	;384	
	LD	(0BB82h),HL	;387
	LD	(0BB80h),HL	;38A
	LD	DE,0B1D0h	;38D
	EX	DE,HL		;390
	OR	A		;391
	SBC	HL,DE		;392
Z0052:	EX	DE,HL		;394
Z0060:	LD	(HL),0Dh	;395
	INC	HL		;397
	DEC	DE		;398
	LD	A,D		;399
Z0054:	OR	E		;39A
	JR	NZ,Z0060	;39B
	LD	(0BB7Fh),A	;39D
	XOR	A		;3A0
	LD	(0BB8Dh),A	;3A1
	LD	(0BB8Ah),A	;3A4
	RET			;3A7
;#01(_CONIN)
	CALL	03BEh		;3A8
	PUSh	HL		;3AB
	LD	A,L		;3AC
	CALL	085Ah		;3AD
	CALL	NC,Z0063	;3B0
	POP	HL		;3B3
	XOR	A		;3B4
	RET			;3B5

;#02(_CONOUT)
	LD	A,E		;3B6
	CALL	Z0064		;3B7
	XOR	A		;3BA
	LD	H,A		;3BB
Z0055:	LD	L,A		;3BC
	RET			;3BD

;#08(_INNOE)
	BIT	0,(IY+9D)	;3BE
	LD	C,0FFh		;3C2
	JR	NZ,Z0065	;3C4
	CALL	Z0066		;3C6
	LD	L,A		;3C9
	XOR	A		;3CA
Z0059:	LD	H,A		;3CB
	RET			;3CC

;#0B(_CONST)
	CALL	Z0067		;3CD
	LD	L,A		;3D0
	XOR	A		;3D1
	LD	H,A		;3D2
Z0056:	RET			;3D3

;#06(_DIRIO)
	LD	A,E		;3D4
	INC	A		;3D5
	JR	Z,Z0068		;3D6
	BIT	1,(IY+9h)	;3D8
	LD	A,E		;3DC
	LD	C,00h		;3DD
	JR	NZ,Z0069	;3DF
	CALL	0A6Ch		;3E1
	XOR	A		;3E4
	LD	H,A		;3E5
	LD	L,A		;3E6
	RET			;3E7
Z0068:	BIT	0,(IY+9h)	;3E8
	LD	C,00h		;3EC
	JR	NZ,Z0065	;3EE
	LD	HL,0BB8Dh	;3F0
	CP	(HL)		;3F3
	JR	NZ,Z0070	;3F4
	CALL	0A42h		;3F6
	JR	NZ,Z0070	;3F9
	LD	L,A		;3FB
	LD	H,A		;3FC
	RET			;3FD

;#07(_DIRIN)
	BIT	0,(IY+9h)	;3FE
	LD	C,00h		;402
	JR	NZ,Z0065	;404
Z0070:	LD	A,(0BB8Dh)	;406
	OR	A		;409
	CALL	Z,0A2Dh		;40A
	LD	L,A		;40D
	XOR	A		;40E
	LD	H,A		;40F
	LD	(0BB8Dh),A	;410
	RET			;413
Z0065:	LD	B,00h		;414
	PUSh	BC		;416
	CALL	01D47h		;417
	POP	DE		;41A
	OR	A		;41B
	JR	NZ,Z0071	;41C
	OR	E		;41E
	JR	Z,Z0072		;41F
	LD	A,B		;421
	SUB	03h		;422
	JR	Z,Z0071		;424
Z0072:	LD	L,B		;426
	XOR	A		;427
	LD	H,A		;428
	RET			;429
Z0069:	LD	B,01h		;42A
	JR	Z0073		;42C

;#03(_AUXIN)
	LD	B,03h		;42E
	LD	C,0FFh		;430
	CALL	01D47h		;432
	OR	A		;435
	LD	L,B		;436
	LD	H,A		;437
	RET	Z		;438
Z0071:	LD	C,09Bh		;439
	JR	Z0074		;43B

;#04(_AUXOUT)
	LD	B,03h		;43D
	JR	Z0075		;43F

;#05(_LSTOUT)
Z0175:	LD	B,04h		;441
Z0075:	LD	C,0FFh		;443
	LD	A,E		;445
Z0073:	CALL	01D22h		;446
	OR	A		;449
	LD	L,A		;44A
	LD	H,A		;44B
	RET	Z		;44C
	LD	C,09Ch		;44D
Z0074:	LD	B,A		;44F
	LD	A,C		;450
	CALL	0373Fh		;451
Z0076:	JR	Z0076		;454

;#0A(_BUFIN)
	PUSh	DE		;456
	BIT	0,(IY+9h)	;457
	JR	NZ,Z0077	;45B
	XOR	A		;45D
	CALL	Z0078		;45E
	JR	Z0079		;461
Z0077:	EX	DE,HL		;463
	LD	B,(HL)		;464
	LD	C,00h		;465
	INC	HL		;467
	PUSh	HL		;468
Z0080:	PUSh	HL		;469
	PUSh	BC		;46A
	LD	C,0FFh		;46B
	CALL	Z0065		;46D
	LD	A,L		;470
	POP	BC		;471
	POP	HL		;472
	OR	A		;473
	JR	Z,Z0080		;474
	CP	0Ah		;476
	JR	Z,Z0080		;478
	CP	0Dh		;47A
	JR	Z,Z0081		;47C
	LD	E,A		;47E
	LD	A,B		;47F
	CP	C		;480
	JR	Z,Z0082		;481
	INC	C		;483
	INC	HL		;484
	LD	(HL),E		;485
	LD	A,E		;486
	PUSh	HL		;487
	PUSh	BC		;488
	CALL	Z0064		;489
	JR	Z0083		;48C
Z0082:	PUSh	HL		;48E
	PUSh	BC		;48F
	LD	A,07h		;490
	CALL	0A6Ch		;492
Z0083:	POP	BC		;495
	POP	HL		;496
	JR	Z0080		;497
Z0081:	POP	HL		;499
	LD	(HL),C		;49A
	CALL	Z0064		;49B
Z0079:	POP	HL		;49E
	PUSh	HL		;49F
	LD	A,(HL)		;4A0
	INC	HL		;4A1
	CP	(HL)		;4A2
	JR	Z,Z0084		;4A3
	LD	E,(HL)		;4A5
	LD	D,00h		;4A6
	ADD	HL,DE		;4A8
	INC	HL		;4A9
	LD	(HL),0Dh	;4AA
Z0084:	POP	DE		;4AC
	XOR	A		;4AD
	LD	L,A		;4AE
	LD	H,A		;4AF
	RET			;4B0
Z0078:	LD	(0BB7Ah),A	;4B1
	INC	DE		;4B4
	XOR	A		;4B5
	LD	(DE),A		;4B6
	DEC	DE		;4B7
	LD	(0BB7Ch),A	;4B8
Z0095:	PUSh	DE		;4BB
	CALL	Z0085		;4BC
	POP	DE		;4BF
	DEC	A		;4C0
	JR	Z,Z0086		;4C1
	DEC	A		;4C3
	JR	Z,Z0087		;4C4
	INC	DE		;4C6
	LD	A,(DE)		;4C7
	OR	A		;4C8
	RET	Z		;4C9
	LD	B,A		;4CA
	LD	(0BB7Fh),A	;4CB
	LD	A,(0BB7Ch)	;4CE
	OR	A		;4D1
	JR	Z,Z0088		;4D2
	PUSh	DE		;4D4
	PUSh	BC		;4D5
	LD	HL,(0BB82h)	;4D6
Z0091:	INC	DE		;4D9
	LD	A,(DE)		;4DA
	CP	(HL)		;4DB
	JR	NZ,Z0089	;4DC
	CALL	Z0090		;4DE
	DJNZ	Z0091		;4E1
	LD	A,(HL)		;4E3
	CP	0Dh		;4E4
Z0089:	POP	BC		;4E6
	POP	DE		;4E7
	JR	Z,Z0092		;4E8
Z0088:	LD	HL,(0BB80h)	;4EA
Z0093:	INC	DE		;4ED
	LD	A,(DE)		;4EE
	LD	(HL),A		;4EF
	CALL	Z0090		;4F0
	DJNZ	Z0093		;4F3
	LD	A,(HL)		;4F5
	LD	(HL),0Dh	;4F6
	CALL	Z0090		;4F8
	LD	(0BB80h),HL	;4FB
Z0092:	LD	(0BB82h),HL	;4FE
Z0094:	CP	0Dh		;501
	RET	Z		;503
	LD	A,(HL)		;504
	LD	(HL),0Dh	;505
	CALL	Z0090		;507
	JR	Z0094		;50A
Z0086:	LD	A,(0BB7Fh)	;50C
	OR	A		;50F
	JR	Z,Z0095		;510
	LD	HL,(0BB82h)	;512
Z0097:	CALL	Z0096		;515
	LD	A,(HL)		;518
	CP	0Dh		;519
	JR	Z,Z0097		;51B
Z0098:	CALL	Z0096		;51D
	LD	A,(HL)		;520
	CP	0Dh		;521
	JR	NZ,Z0098	;523
	CALL	Z0090		;525
	JR	Z0099		;528
Z0087:	LD	A,(0BB7Fh)	;52A
	OR	A		;52D
	JR	Z,Z0095		;52E
	LD	HL,(0BB82h)	;530
Z0100:	LD	A,(HL)		;533
	CP	0Dh		;534
	CALL	Z0090		;536
	JR	NZ,Z0100	;539
	SCF			;53B
Z0101:	CALL	NC,Z0090	;53C
	LD	A,(HL)		;53F
	CP	0Dh		;540
	JR	Z,Z0101		;542
Z0099:	LD	(0BB82h),HL	;544
	PUSh	DE		;547
	LD	A,(DE)		;548
	LD	B,A		;549
	INC	DE		;54A
	INC	DE		;54B
	LD	C,0FFh		;54C
Z0103:	LD	A,(HL)		;54E
	LD	(DE),A		;54F
	INC	C		;550
	CALL	Z0090		;551
	CP	0Dh		;554
	INC	DE		;556
	JR	Z,Z0102		;557
	DJNZ	Z0103		;559
	INC	C		;55B
Z0102:	POP	DE		;55C
	INC	DE		;55D
	LD	A,C		;55E
	LD	(DE),A		;55F
	DEC	DE		;560
	LD	(0BB7Ch),A	;561
	JP	Z0095		;564
Z0090:	PUSh	AF		;567
	PUSh	DE		;568
	LD	DE,0B1CFh	;569
	OR	A		;56C
	SBC	HL,DE		;56D
	ADD	HL,DE		;56F
	INC	HL		;570
	JR	NZ,Z0104	;571
	LD	HL,0B0D0h	;573
Z0104:	POP	DE		;576
	POP	AF		;577
	RET			;578
Z0096:	PUSh	AF		;579
	PUSh	DE		;57A
	LD	DE,0B0D0h	;57B
	OR	A		;57E
	SBC	HL,DE		;57F
	ADD	HL,DE		;581
	DEC	HL		;582
	JR	NZ,Z0105	;583
	LD	HL,0B1CFh	;585
Z0105:	POP	DE		;588
	POP	AF		;589
	RET			;58A
Z0085:	LD	HL,(0BB8Bh)	;58B
	LD	(0BB87h),HL	;58E
	LD	(0BB7Dh),HL	;591
	EX	DE,HL		;594
Z0153:	LD	C,(HL)		;595
	INC	HL		;596
	LD	(0BB84h),HL	;597
	LD	A,(HL)		;59A
	OR	A		;59B
	LD	B,A		;59C
	JR	Z,Z0106		;59D
	INC	HL		;59F
	CALL	Z0107		;5A0
	DEC	HL		;5A3
	LD	A,B		;5A4
Z0106:	LD	(0BB86h),A	;5A5
	XOR	A		;5A8
	CALL	Z0108		;5A9
	LD	DE,05ACh	;5AC
	PUSh	DE		;5AF
	PUSh	HL		;5B0
	LD	HL,0BB86h	;5B1
	LD	A,(HL)		;5B4
	CP	B		;5B5
	JR	NC,Z0109	;5B6
	LD	(HL),B		;5B8
Z0109:	POP	HL		;5B9
	CALL	Z0066		;5BA
	OR	A		;5BD
	RET	Z		;5BE
	CP	0Ah		;5BF
	RET	Z		;5C1
	CP	0Dh		;5C2
	JP	Z,Z0110		;5C4
	CP	01Dh		;5C7
	JP	Z,Z0111		;5C9
	CP	01Ch		;5CC
	JP	Z,Z0112		;5CE
	CP	07Fh		;5D1
	JP	Z,Z0113		;5D3
	CP	08h		;5D6
	JP	Z,Z0114		;5D8
	CP	012h		;5DB
	JP	Z,Z0115		;5DD
	CP	01Bh		;5E0
	JR	Z,Z0116		;5E2
	CP	018h		;5E4
	JR	Z,Z0116		;5E6
	CP	015h		;5E8
Z0116:	JP	Z,Z0117		;5EA
	CP	01Eh		;5ED
	JP	Z,Z0118		;5EF
	CP	01Fh		;5F2
	JP	Z,Z0119		;5F4
	CP	0Bh		;5F7
	JP	Z,Z0120		;5F9
	LD	E,A		;5FC
	LD	A,(0BB7Bh)	;5FD
	OR	A		;600
	JP	NZ,Z0121	;601
	LD	A,(0BB86h)	;604
	CP	B		;607
	JR	Z,Z0122		;608
	INC	HL		;60A
	LD	A,E		;60B
	CALL	017D6h		;60C
	JR	NC,Z0123	;60F
	LD	A,(0BB86h)	;611
	DEC	A		;614
	CP	B		;615
	JR	NZ,Z0124	;616
	INC	A		;618
	CP	C		;619
	DEC	HL		;61A
	JP	NC,Z0125	;61B
	INC	HL		;61E
	INC	A		;61F
	LD	(0BB86h),A	;620
Z0124:	LD	A,(HL)		;623
	CALL	017D6h		;624
	INC	HL		;627
	CALL	NC,Z0126	;628
	DEC	HL		;62B
	JR	Z0127		;62C
Z0123:	CALL	Z0126		;62E
	JR	C,Z0128		;631
	LD	A,(HL)		;633
	CP	020h		;634
	JR	C,Z0128		;636
	LD	A,E		;638
	CP	020h		;639
	JR	C,Z0128		;63B
	JR	Z0129		;63D
Z0122:	CP	C		;63F
	JR	NC,Z0130	;640
	LD	A,E		;642
	CALL	017D6h		;643
	JR	C,Z0131		;646
	INC	HL		;648
Z0129:	LD	(HL),E		;649
	LD	A,E		;64A
	INC	B		;64B
	CALL	Z0132		;64C
	CALL	Z0133		;64F
	RET			;652
Z0121:	LD	A,E		;653
	CALL	017D6h		;654
	JR	NC,Z0134	;657
Z0131:	LD	A,(0BB86h)	;659
	INC	A		;65C
	CP	C		;65D
	JR	NC,Z0125	;65E
	INC	A		;660
	LD	(0BB86h),A	;661
	DEC	A		;664
	DEC	A		;665
	SUB	B		;666
	JR	Z,Z0135		;667
	PUSh	DE		;669
	PUSh	BC		;66A
	LD	C,A		;66B
	LD	B,00h		;66C
	ADD	HL,BC		;66E
	LD	D,H		;66F
	LD	E,L		;670
	INC	DE		;671
	INC	DE		;672
	LDDR			;673
	POP	BC		;675
	POP	DE		;676
Z0135:	INC	HL		;677
Z0127:	LD	(HL),E		;678
	INC	HL		;679
	CALL	Z0066		;67A
	LD	(HL),A		;67D
	DEC	HL		;67E
	CALL	Z0136		;67F
	INC	B		;682
	INC	B		;683
	JP	Z0137		;684
Z0134:	LD	A,(0BB86h)	;687
	CP	C		;68A
	JR	NC,Z0130	;68B
	INC	A		;68D
	LD	(0BB86h),A	;68E
	DEC	A		;691
	SUB	B		;692
	JR	Z,Z0138		;693
	PUSh	DE		;695
	PUSh	BC		;696
	LD	C,A		;697
	LD	B,00h		;698
	ADD	HL,BC		;69A
	LD	D,H		;69B
	LD	E,L		;69C
	INC	DE		;69D
	LDDR			;69E
	POP	BC		;6A0
	POP	DE		;6A1
Z0138:	INC	HL		;6A2
Z0128:	LD	(HL),E		;6A3
	CALL	Z0136		;6A4
	INC	B		;6A7
	JP	Z0137		;6A8
Z0125:	CALL	Z0066		;6AB
Z0130:	LD	A,07h		;6AE
	PUSh	BC		;6B0
	PUSh	HL		;6B1
	CALL	0A6Ch		;6B2
	POP	HL		;6B5
	POP	BC		;6B6
	RET			;6B7
Z0115:	LD	A,(0BB7Bh)	;6B8
	CPL			;6BB
Z0108:	LD	(0BB7Bh),A	;6BC
	OR	A		;6BF
	LD	A,079h		;6C0
	JR	NZ,Z0139	;6C2
	DEC	A		;6C4
Z0139:	PUSh	BC		;6C5
	PUSh	HL		;6C6
	PUSh	DE		;6C7
	PUSh	AF		;6C8
	LD	A,01Bh		;6C9
	CALL	0A6Ch		;6CB
	POP	AF		;6CE
	CALL	0A6Ch		;6CF
	LD	A,034h		;6D2
	CALL	0A6Ch		;6D4
	POP	DE		;6D7
	POP	HL		;6D8
	POP	BC		;6D9
	RET			;6DA
Z0112:	LD	A,(0BB86h)	;6DB
	CP	B		;6DE
	RET	Z		;6DF
	INC	HL		;6E0
	INC	B		;6E1
	LD	A,(HL)		;6E2
	CALL	017D6h		;6E3
	JP	NC,Z0132	;6E6
	CALL	Z0132		;6E9
	INC	HL		;6EC
	INC	B		;6ED
	LD	A,(HL)		;6EE
	JP	Z0132		;6EF
Z0120:	LD	A,B		;6F2
	OR	A		;6F3
	RET	Z		;6F4
	LD	B,00h		;6F5
	JR	Z0137		;6F7
Z0111:	LD	A,B		;6F9
	OR	A		;6FA
	RET	Z		;6FB
	DEC	B		;6FC
Z0137:	LD	HL,(0BB84h)	;6FD
	LD	DE,(0BB87h)	;700
	PUSh	BC		;704
	INC	B		;705
	JR	Z0140		;706
Z0146:	INC	HL		;708
	LD	A,(HL)		;709
	CALL	017D6h		;70A
	JR	NC,Z0141	;70D
	INC	HL		;70F
	DJNZ	Z0142		;710
	DEC	HL		;712
	DEC	HL		;713
	POP	BC		;714
	DEC	B		;715
	PUSh	BC		;716
	JR	Z0143		;717
Z0141:	CP	09h		;719
	JR	NZ,Z0144	;71B
	LD	A,E		;71D
	OR	07h		;71E
	LD	E,A		;720
	JR	Z0145		;721
Z0144:	CP	020h		;723
	JR	NC,Z0145	;725
Z0142:	INC	DE		;727
Z0145:	INC	DE		;728
Z0140:	DJNZ	Z0146		;729
Z0143:	PUSh	HL		;72B
	LD	HL,(0BB8Bh)	;72C
	OR	A		;72F
	SBC	HL,DE		;730
	JR	Z,Z0147		;732
Z0148:	LD	A,08h		;734
	CALL	Z0132		;736
	DEC	HL		;739
	LD	A,H		;73A
	OR	L		;73B
	JR	NZ,Z0148	;73C
Z0147:	POP	HL		;73E
	POP	BC		;73F
	RET			;740
Z0114:	LD	A,B		;741
	OR	A		;742
	RET	Z		;743
	DEC	B		;744
	CALL	Z0137		;745
Z0113:	LD	A,(0BB86h)	;748
	CP	B		;74B
	RET	Z		;74C
	DEC	A		;74D
	LD	(0BB86h),A	;74E
	SUB	B		;751
	JR	Z,Z0149		;752
	LD	E,A		;754
	INC	HL		;755
	LD	A,(HL)		;756
	DEC	HL		;757
	CALL	017D6h		;758
	LD	A,E		;75B
	JR	NC,Z0150	;75C
	PUSh	HL		;75E
	LD	HL,0BB86h	;75F
	DEC	(HL)		;762
	POP	HL		;763
	DEC	A		;764
	JR	Z,Z0149		;765
	PUSh	BC		;767
	PUSh	HL		;768
	LD	C,A		;769
	LD	B,00h		;76A
	INC	HL		;76C
	LD	D,H		;76D
	LD	E,L		;76E
	INC	HL		;76F
	INC	HL		;770
	LDIR			;771
	POP	HL		;773
	POP	BC		;774
	JR	Z0149		;775
Z0150:	PUSh	BC		;777
	PUSh	HL		;778
	LD	C,A		;779
	LD	B,00h		;77A
	INC	HL		;77C
	LD	D,H		;77D
	LD	E,L		;77E
	INC	HL		;77F
	LDIR			;780
	POP	HL		;782
	POP	BC		;783
Z0149:	INC	HL		;784
	CALL	Z0136		;785
	DEC	HL		;788
	JP	Z0137		;789
Z0152:	XOR	A		;78C
	CP	B		;78D
	LD	B,A		;78E
	CALL	NZ,Z0137	;78F
	CALL	Z0151		;792
	LD	B,00h		;795
	CALL	Z0137		;797
	LD	HL,(0BB84h)	;79A
	LD	(HL),00h	;79D
	DEC	HL		;79F
	RET			;7A0
Z0117:	CALL	Z0152		;7A1
	POP	DE		;7A4
	JP	Z0153		;7A5
Z0110:	INC	HL		;7A8
	CALL	Z0136		;7A9
	LD	HL,(0BB84h)	;7AC
	LD	A,(0BB86h)	;7AF
	LD	(HL),A		;7B2
	XOR	A		;7B3
	CALL	Z0108		;7B4
	LD	A,0Dh		;7B7
	CALL	Z0132		;7B9
	POP	HL		;7BC
	XOR	A		;7BD
	RET			;7BE
Z0118:	POP	HL		;7BF
	CALL	Z0152		;7C0
	LD	A,01h		;7C3
	RET			;7C5
Z0119:	POP	HL		;7C6
	CALL	Z0152		;7C7
	LD	A,02h		;7CA
	RET			;7CC
Z0126:	LD	A,(HL)		;7CD
	CALL	017D6h		;7CE
	RET	NC		;7D1
	INC	HL		;7D2
	LD	(HL),020h	;7D3
	DEC	HL		;7D5
	RET			;7D6
Z0151:	PUSh	BC		;7D7
	PUSh	DE		;7D8
	PUSh	HL		;7D9
	JR	Z0154		;7DA
Z0136:	PUSh	BC		;7DC
	PUSh	DE		;7DD
	PUSh	HL		;7DE
	LD	A,(0BB86h)	;7DF
	SUB	B		;7E2
	LD	B,A		;7E3
	CALL	Z0107		;7E4
Z0154:	LD	DE,(0BB8Bh)	;7E7
	LD	HL,(0BB7Dh)	;7EB
	OR	A		;7EE
	SBC	HL,DE		;7EF
	JR	Z,Z0155		;7F1
	JR	C,Z0155		;7F3
Z0156:	LD	A,020h		;7F5
	CALL	Z0132		;7F7
	DEC	HL		;7FA
	LD	A,H		;7FB
	OR	L		;7FC
	JR	NZ,Z0156	;7FD
	LD	(0BB7Dh),DE	;7FF
Z0155:	LD	A,01Bh		;803
	CALL	0A6Ch		;805
	LD	A,04Bh		;808
	CALL	0A6Ch		;80A
	POP	HL		;80D
	POP	DE		;80E
	POP	BC		;80F
	RET			;810
Z0107:	PUSh	BC		;811
	INC	B		;812
	JR	Z0157		;813
Z0158:	LD	A,(HL)		;815
	CALL	Z0132		;816
	CALL	Z0133		;819
	INC	HL		;81C
Z0157:	DJNZ	Z0158		;81D
	POP	BC		;81F
	RET			;820
Z0133:	PUSh	HL		;821
	PUSh	BC		;822
	LD	HL,(0BB7Dh)	;823
	LD	BC,(0BB8Bh)	;826
	OR	A		;82A
	SBC	HL,BC		;82B
	JR	NC,Z0159	;82D
	LD	(0BB7Dh),BC	;82F
Z0159:	POP	BC		;833
	POP	HL		;834
	RET			;835
Z0132:	PUSh	BC		;836
	PUSh	DE		;837
	PUSh	HL		;838
	CALL	085Ah		;839
	JR	NC,Z0160	;83C
	PUSh	AF		;83E
	LD	A,05Eh		;83F
	CALL	Z0161		;841
	POP	AF		;844
	ADD	A,040h		;845
Z0160:	CALL	Z0161		;847
	POP	HL		;84A
	POP	DE		;84B
	POP	BC		;84C
	RET			;84D
Z0161:	LD	B,A		;84E
	LD	A,(0BB7Ah)	;84F
	OR	A		;852
	LD	A,B		;853
	JP	Z,Z0063		;854
	JP	Z0162		;857
	CP	0Dh		;85A
	RET	Z		;85C
	CP	0Ah		;85D
	RET	Z		;85F
	CP	09h		;860
	RET	Z		;862
	CP	08h		;863
	RET	Z		;865
	CP	07Fh		;866
	RET	Z		;868
	CP	020h		;869
	RET			;86B
Z0064:	PUSh	AF		;86C
	CALL	Z0067		;86D
	POP	AF		;870
Z0063:	CP	09h		;871
	JR	NZ,Z0163	;873
Z0164:	LD	A,020h		;875
	CALL	Z0163		;877
	LD	A,(0BB8Bh)	;87A
	AND	07h		;87D
	JR	NZ,Z0164	;87F
	RET			;881
Z0163:	LD	HL,(0BB8Bh)	;882
	CALL	Z0165		;885
	LD	(0BB8Bh),HL	;888
	BIT	1,(IY+9h)	;88B
	JP	Z,Z0166		;88F
	LD	C,0FFh		;892
	JP	Z0069		;894
Z0067:	CALL	0A42h		;897
	LD	B,A		;89A
	LD	A,(0BB8Dh)	;89B
	OR	A		;89E
	JR	NZ,Z0167	;89F
	LD	A,B		;8A1
	OR	A		;8A2
	RET	Z		;8A3
	CALL	0A2Dh		;8A4
	CALL	Z0168		;8A7
	OR	A		;8AA
	RET	Z		;8AB
	LD	(0BB8Dh),A	;8AC
Z0167:	XOR	A		;8AF
	DEC	A		;8B0
	RET			;8B1
Z0066:	LD	A,(0BB8Dh)	;8B2
	LD	(IY+0Dh),00h	;8B5
	OR	A		;8B9
	RET	NZ		;8BA
Z0169:	CALL	0A2Dh		;8BB
	CALL	Z0168		;8BE
	OR	A		;8C1
	JR	Z,Z0169		;8C2
	RET			;8C4
Z0168:	CP	010h		;8C5
	JR	Z,Z0170		;8C7
	CP	0Eh		;8C9
	JR	Z,08E8h		;8CB
	CP	03h		;8CD
	JR	Z,Z0171		;8CF
	CP	013h		;8D1
	RET	NZ		;8D3
	CALL	0A2Dh		;8D4
	CP	03h		;8D7
	LD	A,00h		;8D9
	RET	NZ		;8DB
Z0171:	LD	A,09Eh		;8DC
	LD	B,00h		;8DE
	CALL	0373Fh		;8E0
Z0172:	JR	Z0172		;8E3
Z0170:	LD	A,0FFh		;8E5
	CP	0AFh		;8E7
	LD	(0BB8Ah),A	;8E9
	XOR	A		;8EC
	RET			;8ED
Z0162:	CP	09h		;8EE
	JR	NZ,Z0173	;8F0
Z0174:	LD	A,020h		;8F2
	CALL	Z0173		;8F4
	LD	A,(0BB8Bh)	;8F7
	AND	07h		;8FA
	JR	NZ,Z0174	;8FC
	RET			;8FE
Z0173:	LD	HL,(0BB8Bh)	;8FF
	CALL	Z0165		;902
	LD	(0BB8Bh),HL	;905
Z0166:	CALL	0A6Ch		;908
	LD	HL,0BB8Ah	;90B
	BIT	0,(HL)		;90E
	RET	Z		;910
	LD	E,A		;911
	JP	Z0175		;912
Z0165:	INC	HL		;915
	CP	07Fh		;916
	JR	Z,Z0176		;918
	CP	020h		;91A
	RET	NC		;91C
Z0176:	DEC	HL		;91D
	LD	B,A		;91E
	LD	A,H		;91F
	OR	L		;920
	LD	A,B		;921
	RET	Z		;922
	DEC	HL		;923
	CP	08h		;924
	RET	Z		;926
	CP	07Fh		;927
	RET	Z		;929
	INC	HL		;92A
	CP	0Dh		;92B
	RET	NZ		;92D
	LD	HL,00h		;92E
	RET			;931
	JP	Z0177		;932
	JP	098Eh		;935
	JP	09A1h		;938
	JP	0A1Ch		;93B
	JP	09B1h		;93E
Z0177:	BIT	5,C		;941
	JR	NZ,Z0178	;943
	CALL	0A2Dh		;945
	LD	B,A		;948
	XOR	A		;949
	RET			;94A
Z0178:	LD	HL,(0BB78h)	;94B
	LD	A,(HL)		;94E
	OR	A		;94F
	JR	NZ,0979h	;950
	LD	DE,0B1D0h	;952
	LD	A,0FFh		;955
	LD	(DE),A		;957
	LD	A,0FFh		;958
	CALL	Z0078		;95A
	LD	A,0Ah		;95D
	CALL	Z0162		;95F
	LD	HL,0B1D1h	;962
	LD	E,(HL)		;965
	LD	D,00h		;966
	INC	HL		;968
	EX	DE,HL		;969
	ADD	HL,DE		;96A
	LD	(HL),0Dh	;96B
	INC	HL		;96D
	LD	(HL),0Ah	;96E
	INC	HL		;970
	LD	(HL),00h	;971
	EX	DE,HL		;973
	LD	A,(HL)		;974
	CP	01Ah		;975
	JR	Z,0985h		;977
	INC	HL		;979
	LD	(0BB78h),HL	;97A
	LD	B,A		;97D
	CP	0Ah		;97E
	LD	A,0B9h		;980
	RET	Z		;982
	XOR	A		;983
	RET			;984
	LD	B,A		;985
	LD	(HL),00h	;986
	LD	(0BB78h),HL	;988
	LD	A,0C7h		;98B
	RET			;98D
	BIT	5,C		;98E
	JR	NZ,0997h	;990
	CALL	0A6Ch		;992
	XOR	A		;995
	RET			;996
	PUSh	AF		;997
	CALL	0897h		;998
	POP	AF		;99B
	CALL	08EEh		;99C
	XOR	A		;99F
	RET			;9A0
	BIT	5,C		;9A1
	JR	NZ,09ABh	;9A3
	CALL	0A42h		;9A5
	LD	E,A		;9A8
	XOR	A		;9A9
	RET			;9AA
	CALL	0897h		;9AB
	LD	E,A		;9AE
	XOR	A		;9AF
	RET			;9B0
	CALL	0A20h		;9B1
	XOR	A		;9B4
	RET			;9B5
	LD	HL,0B1D2h	;9B6
	LD	(0BB78h),HL	;9B9
	LD	(HL),00h	;9BC
	RET			;9BE
	JP	09CEh		;9BF
	JP	09DDh		;9C2
	JP	0A1Ch		;9C5
	JP	0A1Ch		;9C8
	JP	0A17h		;9CB
	CALL	0B46h		;9CE
	LD	B,A		;9D1
	CP	01Ah		;9D2
	JR	Z,0A14h		;9D4
	CP	0Dh		;9D6
	LD	A,0B9h		;9D8
	RET	Z		;9DA
	XOR	A		;9DB
	RET			;9DC
	CALL	0B51h		;9DD
	XOR	A		;9E0
	RET			;9E1
	JP	0A12h		;9E2
	JP	09F1h		;9E5
	JP	0A1Ch		;9E8
	JP	09FDh		;9EB
	JP	0A17h		;9EE
	CALL	0B25h		;9F1
	JR	NC,0A1Ah	;9F4
	RES	0,(IY+0Ah)	;9F6
	LD	A,09Fh		;9FA
	RET			;9FC
	CALL	0B37h		;9FD
	LD	E,A		;A00
	XOR	A		;A01
	RET			;A02
	JP	0A12h		;A03
	JP	0A1Ah		;A06
	JP	0A1Ch		;A09
	JP	0A1Ch		;A0C
	JP	0A17h		;A0F
	LD	B,01Ah		;A12
	LD	A,0C7h		;A14
	RET			;A16
	LD	DE,00h		;A17
	XOR	A		;A1A
	RET			;A1B
	LD	E,0FFh		;A1C
	XOR	A		;A1E
	RET			;A1F
	LD	A,(0F3B0h)	;A20 LINLEN
	LD	E,A		;A23
	LD	A,(0F3B1h)	;A24 CRTCNT
	LD	HL,0F3DEh	;A27 CNSDFG
	ADD	A,(HL)		;A2A
	LD	D,A		;A2B
	RET			;A2C
	
	CALL	0F25Bh		;A2D
	CALL	0AB9h		;A30
	PUSh	IX		;A33
	LD	IX,009Fh	;A35 call CHGET
	CALL	0B78h		;A39
	CALL	0B5Bh		;A3C
	POP	IX		;A3F
	RET			;A41
	
	CALL	0F261h		;A42
	LD	HL,0F2BDh	;A45
	DEC	(HL)		;A48
	JR	NZ,0A69h	;A49
	INC	(HL)		;A4B
	LD	A,(0F2BEh)	;A4C
	DEC	A		;A4F
	CALL	Z,0AB9h		;A50
	PUSh	IX		;A53
	LD	IX,009Ch	;A55 call CHSNS
	CALL	0B78h		;A59
	CALL	0B5Bh		;A5C
	POP	IX		;A5F
	LD	A,0FFh		;A61
	RET	NZ		;A63
	LD	A,065h		;A64
	LD	(0F2BDh),A	;A66
	XOR	A		;A69
	RET			;A6A
	LD	A,C		;A6B
	CALL	0F25Eh		;A6C
	PUSh	IX		;A6F
	LD	IX,00A2h	;A71 call CHPUT
	CALL	0B78h		;A75
	POP	IX		;A78
	RET			;A7A
	LD	E,A		;A7B
	CP	01Bh		;A7C
	CALL	Z,0AB9h		;A7E
	LD	HL,0BB76h	;A81
	BIT	0,(HL)		;A84
	RES	0,(HL)		;A86
	JR	NZ,0A91h	;A88
	CALL	017D6h		;A8A
	JR	NC,0A91h	;A8D
	SET	0,(HL)		;A8F
	LD	A,02h		;A91
	LD	(0F2BEh),A	;A93
	LD	A,(0BB77h)	;A96
	LD	C,A		;A99
	LD	B,00h		;A9A
	LD	HL,0B06Ch	;A9C
	ADD	HL,BC		;A9F
	LD	(HL),E		;AA0
	INC	A		;AA1
	LD	(0BB77h),A	;AA2
	CP	064h		;AA5
	JR	Z,0ACEh		;AA7
	LD	A,(0FCA7h)	;AA9
	OR	A		;AAC
	JR	NZ,0ACEh	;AAD
	LD	A,E		;AAF
	CP	0Ah		;AB0
	JR	Z,0ACEh		;AB2
	CP	07h		;AB4
	JR	Z,0ACEh		;AB6
	RET			;AB8
	CALL	0F264h		;AB9
	PUSh	AF		;ABC
	LD	A,(0BB77h)	;ABD
	OR	A		;AC0
	JR	Z,0ACCh		;AC1
	PUSh	BC		;AC3
	PUSh	DE		;AC4
	PUSh	HL		;AC5
	CALL	0ACEh		;AC6
	POP	HL		;AC9
	POP	DE		;ACA
	POP	BC		;ACB
	POP	AF		;ACC
	RET			;ACD
	
	EX	AF,AF'		;ACE
	EXX			;ACF
	PUSh	AF		;AD0
	PUSh	BC		;AD1
	PUSh	DE		;AD2
	PUSh	HL		;AD3
	PUSh	IX		;AD4
	PUSh	IY		;AD6
	LD	HL,0B06Ch	;AD8
	LD	A,(0BB76h)	;ADB
	BIT	0,A		;ADE
	PUSh	AF		;AE0
	LD	A,(0BB77h)	;AE1
	JR	Z,0AE9h		;AE4
	DEC	A		;AE6
	JR	Z,0B07h		;AE7
	LD	B,A		;AE9
	LD	A,(0FCA7h)	;AEA
	OR	A		;AED
	JR	NZ,0AF6h	;AEE
	LD	HL,0B069h	;AF0
	INC	B		;AF3
	INC	B		;AF4
	INC	B		;AF5
	CALL	0F1DCh		;AF6
	PUSh	HL		;AF9
	LD	HL,0B066h	;AFA
	LD	B,03h		;AFD
	LD	A,(0FCA7h)	;AFF
	OR	A		;B02
	CALL	Z,0F1DCh	;B03
	POP	HL		;B06
	XOR	A		;B07
	LD	(0BB77h),A	;B08
	LD	(0F2BEh),A	;B0B
	POP	AF		;B0E
	JR	Z,0B1Ah		;B0F
	LD	A,(HL)		;B11
	LD	(0B06Ch),A	;B12
	LD	A,01h		;B15
	LD	(0BB77h),A	;B17
	POP	IY		;B1A
	POP	IX		;B1C
	POP	HL		;B1E
	POP	DE		;B1F
	POP	BC		;B20
	POP	AF		;B21
	EXX			;B22
	EX	AF,AF'		;B23
	RET			;B24
	
	CALL	0F267h		;B25
	CALL	0AB9h		;B28
	PUSh	IX		;B2B
	LD	IX,00A5h	;B2D call LPTOUT
	CALL	0B78h		;B31
	POP	IX		;B34
	RET			;B36
	CALL	0F26Ah		;B37
	PUSh	IX		;B3A
	LD	IX,00A8h	;B3C call LPTSTT
	CALL	0B78h		;B40
	POP	IX		;B43
	RET			;B45
	CALL	0AB9h		;B46
	LD	HL,0F371h	;B49 
	CALL	03742h		;B4C Page 0,2  system RAM
	RET			;B4F
	LD	A,C		;B50
	CALL	0AB9h		;B51
	LD	HL,0F374h	;B54
	CALL	03742h		;B57
	RET			;B5A
	PUSh	AF		;B5B
	LD	A,(0FC9Bh)	;B5C
	SUB	03h		;B5F
	JR	Z,0B65h		;B61
	POP	AF		;B63
	RET			;B64
	LD	(0FC9Bh),A	;B65 
	LD	IX,0156h	;B68 Clear to keyboard buffer
	CALL	0B78h		;B6C
	LD	A,09Fh		;B6F
	LD	B,00h		;B71
	CALL	0373Fh		;B73
	JR	0B76h		;B76
	EX	AF,AF'		;B78
	EXX			;B79
	PUSh	AF		;B7A
	PUSh	BC		;B7B
	PUSh	DE		;B7C
	PUSh	HL		;B7D
	PUSh	IY		;B7E
	EXX			;B80
	EX	AF,AF'		;B81
	CALL	0F1D9h		;B82
	EX	AF,AF'		;B85
	EXX			;B86
	POP	IY		;B87
	POP	HL		;B89
	POP	DE		;B8A
	POP	BC		;B8B
	POP	AF		;B8C
	EXX			;B8D
	EX	AF,AF'		;B8E
	RET			;B8F
	
;#0C(_CPMVER) 
	LD	HL,022h		;B90 version 2.2
	XOR	A		;B93
	RET			;B94

;#0D(_DSKRST) 
	LD	B,0FFh		;B95
	LD	D,00h		;B97
	CALL	0CE0h		;B99
	LD	A,01h		;B9C
	LD	(0F23Ch),A	;B9E A: default drive
	LD	HL,080h		;BA1
	LD	(0F23Dh),HL	;BA4 DTA address
	XOR	A		;BA7
	LD	H,A		;BA8
	LD	L,A		;BA9
	RET			;BAA

;#0E(_SELDSK) 
	INC	E		;BAB
	LD	A,E		;BAC Drive  A=1 current=0
	LD	C,0DBh		;BAD
	CALL	NZ,03622h	;BAF
	JR	Z,0BBFh		;BB2
	LD	A,(HL)		;BB4
	INC	HL		;BB5
	OR	(HL)		;BB6
	JR	Z,0BBFh		;BB7
	LD	A,E		;BB9
	LD	(0F23Ch),A	;BBA set default drive
	LD	C,00h		;BBD 
	LD	HL,(0F347h)	;BBF
	LD	H,00h		;BC2
	LD	A,C		;BC4 A=error code
	RET			;BC5

;#18(_LOGIN) 
	LD	B,08h		;BC6 8 drives
	LD	HL,00h		;BC8
	ADD	HL,HL		;BCB
	PUSh	HL		;BCC
	LD	A,B		;BCD
	CALL	03622h		;BCE
	LD	A,(HL)		;BD1
	INC	HL		;BD2
	OR	(HL)		;BD3
	POP	HL		;BD4
	JR	Z,0BD8h		;BD5
	INC	HL		;BD7
	DJNZ	0BCBh		;BD8
	XOR	A		;BDA
	RET			;BDB
	
;#19(_CURDRV) 
	LD	A,(0F23Ch)	;BDC 
	DEC	A		;BDF
	LD	L,A		;BE0
	XOR	A		;BE1
	LD	H,A		;BE2
	RET			;BE3
	
;#1A(_SETDTA) 
	LD	(0F23Dh),DE	;BE4
	XOR	A		;BE8
	LD	H,A		;BE9
	LD	L,A		;BEA
	RET			;BEB
	
;#1B(_ALLOC) 
	LD	C,E		;BEC Drive
	LD	B,00h		;BED
	LD	IX,0B9DAh	;BEF
	CALL	031A1h		;BF3
	OR	A		;BF6
	LD	C,0FFh		;BF7
	RET	NZ		;BF9
	PUSh	HL		;BFA
	POP	IX		;BFB
	LD	E,(IX+16h)	;BFD number of total clusters
	LD	D,(IX+17h)	;C00
	PUSh	DE		;C03
	LD	DE,02h		;C04 cluster number ;FAT16*済 jp ALLOC (3F2Ch) ;in bank2/misc.mac F_ALLOC (patched bank2/fat.mac FAT_LOOKUP)
	LD	B,D		;C07 BC=counter
	LD	C,D		;C08
	PUSh	DE		;C09
	CALL	02D9Ah		;C0A FAT read       ;FAT16*済 call  FATRED (0D95h) ;in bank2/misc.mac F_ALLOC (patched bank2/fat.mac FAT_LOOKUP)
	LD	A,D		;C0D next cluster
	OR	E		;C0E
	JR	NZ,0C12h	;C0F
	INC	BC		;C11 空きクラスタのカウント
	POP	DE		;C12
	EX	(SP),HL		;C13 end of cluster?
	SBC	HL,DE		;C14 
	ADD	HL,DE		;C16
	EX	(SP),HL		;C17
	INC	DE		;C18 next cluster
	JR	NZ,0C09h	;C19
	PUSh	BC		;C1B
	LD	E,(IX+0Ch)	;C1C top of FAT
	LD	D,(IX+0Dh)	;C1F
	CALL	BF_FAT_SECTOR	;C22 read FATsector ;FAT16*済 call BUF_1 (3127h) ;in bank2/misc.mac F_ALLOC (pacthed bank2/buf.mac BF_FAT_SECTOR)
	LD	DE,0Bh		;C25
	ADD	HL,DE		;C28
	LD	DE,(0F34Dh)	;C29 DTA FAT
	PUSh	DE		;C2D
	LD	BC,0200h	;C2E
	LDIR			;C31
	POP	IY		;C33 pointer for top of FAT
	POP	HL		;C35 free clusters
	POP	DE		;C36 
	DEC	DE		;C37 total of cluster
	NOP			;C38
	LD	C,(IX+02h)	;C39 DPB address
	LD	B,(IX+03h)	;C3C
	PUSh	BC		;C3F
	LD	C,(IX+0Ah)	;C40
	INC	C		;C43
	POP	IX		;C44 pointer of DPB
	XOR	A		;C46
	RET			;C47
	
;#2E(_VERIFY) 
	LD	A,E		;C48
	LD	(0F30Dh),A	;C49
	XOR	A		;C4C
	LD	H,A		;C4D
	LD	L,A		;C4E
	RET			;C4F
	
;#31(_DPARM) 
	LD	IX,0B9DAh	;C50
	LD	B,00h		;C54
	LD	C,L		;C56 L=drive  0=current 1=A
	PUSh	DE		;C57
	CALL	031A1h		;C58
	POP	DE		;C5B
	OR	A		;C5C
	RET	NZ		;C5D error
	PUSh	HL		;C5E
	POP	IX		;C5F
	PUSh	DE		;C61
	LD	BC,08h		;C62
	ADD	HL,BC		;C65 DE+0 = drive
	LDI			;C66
	LD	BC,0200h	;C68
	LD	A,C		;C6B
	LD	(DE),A		;C6C DE+1,2 = sector size
	INC	DE		;C6D
	LD	A,B		;C6E
	LD	(DE),A		;C6F
	INC	DE		;C70
	INC	HL		;C71
	LD	A,(HL)		;C72
	INC	HL		;C73
	INC	A		;C74
	LD	(DE),A		;C75 DE+3  = cluster size
	INC	DE		;C76
	INC	HL		;C77
	LDI			;C78 DE+4,5 = top of FAT
	LDI			;C7A
	LDI			;C7C DE+6  = number of FAT
	LD	A,(HL)		;C7E
	INC	HL		;C7F
	PUSh	HL		;C80
	LD	L,(HL)		;C81
	LD	H,00h		;C82
	ADD	HL,HL		;C84 entry * 10h
	ADD	HL,HL		;C85
	ADD	HL,HL		;C86
	ADD	HL,HL		;C87
	ADD	A,L		;C88
	LD	(DE),A		;C89 DE+7,8 = number of directory entry
	INC	DE		;C8A
	LD	A,H		;C8B
	LD	(DE),A		;C8C
	INC	DE		;C8D
	POP	HL		;C8E
	INC	HL		;C8F
	INC	DE		;C90
	INC	DE		;C91
	PUSh	DE		;C92
	INC	DE		;C93 DE+12 = number of FAT sector
	LD	BC,0Ch		;C94 DE+13,14 top of directory
	LDIR			;C97 DE+15,16 top of data area
	PUSh	DE		;C99 DE+17,18 total of cluster
	EX	DE,HL		;C9A DE+19    flag(UNDEL
	LD	BC,0FFF9h	;C9B DE+20-23 VOL ID
	ADD	HL,BC		;C9E
	INC	(HL)		;C9F DE+17,18 total of cluster plus 1
	JR	NZ,0CA4h	;CA0
	INC	HL		;CA2
	INC	(HL)		;CA3
	EX	DE,HL		;CA4
	POP	DE		;CA5
	LD	B,08h		;CA6
	XOR	A		;CA8
	LD	(DE),A		;CA9 DE+24-31 
	INC	DE		;CAA
	DJNZ	0CA9h		;CAB
	POP	DE		;CAD DE+11    media ID
	LDI			;CAE
	LD	L,(IX+16h)	;CB0 total of cluster
	LD	H,(IX+17h)	;CB3
	DEC	HL		;CB6
	LD	B,(IX+0Bh	;CB7 cluster shift
	JR	0CBDh		;CBA		;FAT16*済 ld  c,29h  (add  hl,hl)	;in bank2/misc.mac F_DPARM
	ADD	HL,HL		;CBC		;FAT16*済 adc a,a	;in bank2/misc.mac F_DPARM
	DJNZ	0CBCh		;CBD		;FAT16*済 djnz 0FCh	;in bank2/misc.mac F_DPARM
	LD	C,(IX+14h)	;CBF top of data area
	LD	B,(IX+15h	;CC2
	ADD	HL,BC		;CC5
	EX	DE,HL		;CC6		;FAT16*済 call  ALLSEC (3405h)	;in bank2/misc.mac F_DPARM
	DEC	HL		;CC7
	DEC	HL		;CC8
	LD	(HL),D		;CC9 DE+9,10 total of sector
	DEC	HL		;CCA
	LD	(HL),E		;CCB
	POP	DE		;CCC
	XOR	A		;CCD
	RET			;CCE
	
;#57(_GETDTA) 
	LD	DE,(0F23Dh)	;CCF
	XOR	A		;CD3
	RET			;CD4
	
;#58(_GETVFY) 
	LD	A,(0F30Dh)	;CD5
	OR	A		;CD8
	JR	Z,0CDDh		;CD9
	LD	A,0FFh		;CDB
	LD	B,A		;CDD
	XOR	A		;CDE
	RET			;CDF
	
;#5F(_FLUSH) 
	LD	A,B		;CE0
	CP	0FFh		;CE1
	JR	Z,0CEBh		;CE3
	CALL	03622h		;CE5 get DPB address
	LD	B,A		;CE8
	LD	A,C		;CE9
	RET	Z		;CEA error 'Invalid drive'
	LD	A,B		;CEB A=drive
	CALL	02C5Eh		;CEC flush BUFFER
	LD	A,D		;CEF
	OR	A		;CF0
	RET	Z		;CF1
	LD	A,B		;CF2
	CALL	02C6Eh		;CF3 release BUFFER
	CALL	03607h		;CF6 
	XOR	A		;CF9
	RET			;CFA
	
;#00(_TERM0) 
	LD	B,00h		;CFB

;#62(_TERM) 
	LD	A,B		;CFD B=error code
	LD	B,00h		;CFE
	CALL	0373Fh		;D00
	JR	0D03h		;D03
	
;#65(_ERROR) 
	LD	B,(IY+7Dh)	;D05
	XOR	A		;D08
	RET			;D09
	
;#66(_EXPLAIN) 
	LD	A,B		;D0A B=error code
	PUSh	DE		;D0B
	PUSh	IY		;D0C
	LD	IY,(0F347h)	;D0E
	LD	IX,(0F2DAh)	;D12
	CALL	01Ch		;D16
	EI			;D19
	POP	IY		;D1A
	LD	B,A		;D1C
	OR	A		;D1D
	DEC	HL		;D1E
	CALL	NZ,0D26h	;D1F
	XOR	A		;D22
	LD	(HL),A		;D23
	POP	DE		;D24
	RET			;D25
	LD	C,0FFh		;D26
	INC	C		;D28
	SUB	0Ah		;D29
	JR	NC,0D28h	;D2B
	ADD	A,03Ah		;D2D
	PUSh	AF		;D2F
	LD	A,C		;D30
	OR	A		;D31
	CALL	NZ,0D26h	;D32
	POP	AF		;D35
	LD	(HL),A		;D36
	INC	HL		;D37
	RET			;D38
	
;--------------------------------------------------------------
;FAT16
;_FORMATと_RAMDの場所にパッチプログラムを置く

;#67(_FORMAT) 
	EX	AF,AF'		;D39
	PUSh	HL		;D3A
	POP	IX		;D3B
	LD	A,B		;D3D
	CALL	03622h		;D3E get DPB address
	LD	A,(HL)		;D41
	INC	HL		;D42
	LD	H,(HL)		;D43
	LD	L,A		;D44
	OR	h		;D45
	LD	A,C		;D46
	RET	Z		;D47 error 'Invalid drive'
	EX	AF,AF'		;D48
	OR	A		;D49
	JR	NZ,0D58h	;D4A read boot sector
	CALL	03027h		;D4C
	PUSh	HL		;D4F
	POP	IX		;D50
	LD	B,(IX+0h)	;D52
	EX	DE,HL		;D55
	OR	A		;D56 A=error code
	RET			;D57 
	
	EX	AF,AF'		;D58
	CALL	02C5Dh		;D59 flush BUFFER
	CALL	02C6Dh		;D5C release BUFFER
	PUSh	HL		;D5F
	PUSh	DE		;D60
	PUSh	IX		;D61
	POP	DE		;D63
	XOR	A		;D64
	CALL	02745h		;D65 get segment number of DTA
	LD	HL,04000h	;D68
	OR	A		;D6B
	SBC	HL,DE		;D6C
	EX	(SP),HL		;D6E
	POP	BC		;D6F
	SBC	HL,BC		;D70
	JR	C,0D7Eh		;D72
	SBC	HL,BC		;D74
	JR	C,0D81h		;D76
	ADD	HL,BC		;D78
	EX	DE,HL		;D79
	ADD	IX,BC		;D7A
	JR	0D60h		;D7C
	ADD	HL,BC		;D7E
	LD	B,H		;D7F
	LD	C,L		;D80
	SET	7,D		;D81
	PUSh	DE		;D83
	POP	IX		;D84
	LD	D,A		;D86
	EX	AF,AF'		;D87
	POP	HL		;D88
	CALL	03044h		;D89
	LD	BC,09h		;D8C
	ADD	HL,BC		;D8F
	LD	(HL),00h	;D90
	RET			;D92
	
;#68(_RAMDSK) 
	PUSh	BC		;D93
	LD	B,08h		;D94
	LD	D,B		;D96
	CALL	0E8Bh		;D97
	POP	BC		;D9A
	INC	B		;D9B
	JP	Z,0E2Dh		;D9C get RAMDISK size
	DEC	B		;D9F
	JP	Z,0E04h		;DA0 release RAMDISK
	LD	HL,(0BA33h)	;DA3 make RAMDISK
	LD	A,H		;DA6
	OR	L		;DA7
	LD	C,0BCh		;DA8 'RAM disk already exists'
	JP	NZ,0E2Fh	;DAA error
	CALL	0E35h		;DAD
	LD	DE,0BE02h	;DB0
	LD	HL,0BE00h	;DB3
	EXX			;DB6
	LD	A,01h		;DB7
	LD	B,030h		;DB9
	CALL	011A6h		;DBB
	JR	C,0DCAh		;DBE
	PUSh	BC		;DC0
	EXX			;DC1
	INC	(HL)		;DC2
	LD	(DE),A		;DC3
	INC	DE		;DC4
	POP	AF		;DC5
	LD	(DE),A		;DC6
	INC	DE		;DC7
	DJNZ	0DB6h		;DC8
	LD	A,(0BE00h)	;DCA
	OR	A		;DCD
	LD	A,C		;DCE
	LD	C,0DEh		;DCF 'Not enough memory'
	JP	Z,0E2Fh		;DD1
	LD	HL,(0BBFBh)	;DD4
	LD	(0BA33h),HL	;DD7
	LD	A,08h		;DDA
	PUSh	HL		;DDC
	POP	IX		;DDD
	LD	(IX+8h)A	;DDF
	LD	(IX+9h),00h	;DE2
	LD	(IX+1Fh),0FFh	;DE6	;FAT16*済 RAMDISK関連追加 ;in bank2/misc.mac F_RAMD
	LD	C,A		;DEA
	LD	IX,0B9DAh	;DEB
	LD	B,00h		;DEF
	CALL	031A1h		;DF1
	LD	A,0FFh		;DF4
	CALL	02F2Eh		;DF6 initialize FAT
	LD	DE,00h		;DF9
	CALL	02FBDh		;DFC initialize Directory
	CALL	02C5Dh		;DFF flush BUFFER
	JR	0E2Dh		;E02
	
	LD	HL,(0BA33h)	;E04 release RAMDISK
	LD	A,H		;E07
	OR	L		;E08
	JR	Z,0E2Dh		;E09
	LD	A,08h		;E0B
	CALL	02C6Eh		;E0D release BUFFER
	LD	HL,00h		;E10
	LD	(0BA33h),HL	;E13
	XOR	A		;E16
	LD	(0BE00h),A	;E17
	LD	HL,0BE02h	;E1A
	LD	C,(HL)		;E1D
	INC	HL		;E1E
	LD	B,(HL)		;E1F
	INC	HL		;E20
	LD	A,B		;E21
	OR	A		;E22
	JR	Z,0E2Dh		;E23
	PUSh	HL		;E25
	LD	A,C		;E26
	CALL	01256h		;E27
	POP	HL		;E2A
	JR	0E1Dh		;E2B
	
	LD	C,00h		;E2D RAMDISK size
	LD	A,(0BE00h)	;E2F
	LD	B,A		;E32
	LD	A,C		;E33 error code
	RET			;E34
	
	LD	HL,0BC00h	;E35
	LD	DE,0400h	;E38
	LD	(HL),00h	;E3B
	INC	HL		;E3D
	DEC	DE		;E3E
	LD	A,D		;E3F
	OR	E		;E40
	JR	NZ,0E3Bh	;E41
	RET			;E43
	
;**********************************************************************
;FAT16用に追加したコード

;CLUSTER NUMBER
0D39h:	;*済
CLST_1:
	LD	D,(HL)			;1534h  call  0D39h
	JR	CHK_C			;Check data 'FFFFh'

0D3Ch:	;*済
CLST_2:	SET  3,(IY+20h)			;158Bh  call  0E3Ch
	JR	CHK_C

0D42h:	;*済
CLST_4:	LD	DE,(DE_START)		;1C5Dh  call  0D42h
	JR	CHK_C

1D48h:	;*済
CLST_8:	POP	AF			;1B91h  call  0D48h
	POP	DE
	JR	CHK_D

0D4Ch:	;*済
CLST_5:	POP	AF			;2F8Dh  call  0D4Ch
	PUSH	BC
CHK_D:	PUSH	AF
	JR	CHK_C

0D51h:	:*済
CLST_6:	LD	DE,(0BBA3h)		;2FB9h  call  0D51h

0D55h:	;*他のパッチで使用するサブルーチン
CHK_C:	LD	A,D			;DE=FFFFh Z=0
	AND	E
	JR	CHK_A

0D59h:	;*済
CLST_7:	JR	NZ,CHK_C		;302Bh  call  0D59h
	INC	SP
	INC	SP
	RET


0D5Eh:	;*済
CLST_9:	LD	DE,(DE_START)		;1CBBh  call  0D5Eh
	CALL	CHK_C
	LD	DE,(0BBE4h)
	RET	NZ			;カレントはROOT
	JR	CHK_C

0D6Ch:	:*済
CLST_3:	LD	DE,(0BBE6h)		;1C17h  call  0D6Ch

CHECK:	LD	A,D
CHK_A:	INC	A
	JR	Z,CHK_B
	XOR	A
	RET			;z=1 
CHK_B:	DEC	A
	RET			;z=0 
	
0D78h:	;*済
CLST_A:	LD	A,(HL)			;34F0h  call  0D78h
	JR	CHK_A


;---------------------------------
0D7Bh:
CLUST:	;*済				;39F1h  jp  0D7Bh
	LD	HL,(0B9FAh)		;FCB+20h ドライブ情報エリアのアドレス
	CALL	CHKDRV
	RET	Z			;FAT16ドライブ
	LD	A,(IX+2Ah)
PAT_3A:	JP	39F4h

0D88h:
CLUST2:	;*済				;3CFAh  jp  0D88h
	LD	HL,(0B9FAh)
	CALL	CHKDRV
	RET	Z			;FAT16ドライブ
	LD	A,(IX+1Dh)
PAT_3B:	JP	3CFDh
	
;-------------------------------------------------------------------
;Get FAT address

0D95h:	;*済				; call  0D95h
FATRED:					;0C0Ah, 1CC6h, 28FAh, 299Eh, 2A68h
	PUSH	AF			;2B7Bh, 2F82h, 301Bh
	CALL	CHKDRV
	JR	Z,Z0018	 		;FAT16 ドライブ
	POP	AF
PAT_32:	CALL	2D9Ah+0Ah		;FAT12 routine
	BIT	7,D
	RET
;---------------------------------------------------
;Read 16bitFAT

Z0018:	;*他のパッチで使用するサブルーチン
	POP	AF
	CALL	FATADR			;get address & sector set
	JR	Z,Z0019			;正常終了
Z0020:	XOR	A
	LD	(0BBEAh),A
	LD	A,0F2h	
	LD	DE,0FFFFh
PAT_39:	CALL	36ACh
	JR	Z,Z0020
	JR	Z0021		;error
	
Z0019:	PUSH	HL
	LD	A,(DE)		;DE=FAT address
	LD	L,A
	INC	DE
	LD	A,(DE)
	LD	H,A
	EX	DE,HL		;DE=next cluster number
	LD	HL,0FFF7h	;HL=wrong cluster number
	OR	A
	SBC	HL,DE
	POP	HL
	JR	NC,Z1021	;not end of cluster
Z0021:	LD	DE,0FFFFh	;End of cluster
	OR	D		;Z=0
	SCF			;Cy=1
	RET
Z1021:	XOR	A		;Cy=0 Z=1
	RET
	
	
;-----------------------------------------------------------
;FATのセクタ番号を得てディスクバッファにFATを読み込む

0DD0h:
FATADR:	;*他のパッチで使用するサブルーチン
	PUSH	IX		;IX=0B9DAh
	PUSH	BC	
	PUSH	HL		;HL=ドライブ情報エリアのアドレス 
	PUSH	HL
	POP	IX
	RES	0,(IY+29h)
	LD	L,(IX+16h)
	LD	H,(IX+17h)
	XOR	A
	SBC	HL,DE
	JR	C,FATAD_	;ERROR
	LD	H,D		;DE=cluster number
	LD	L,E
	ADD	HL,HL		;cluster number * 2(16bit)
	PUSH	HL
	LD	E,D		;cluster * 2 / 200hbytes = sector
	LD	D,0
	LD	L,(IX+0Ch)	;sector number of FAT top
	LD	H,(IX+0Dh)	;
	ADD	HL,DE		;get sector number of FAT
	EX	DE,HL
	CALL	BUF_1		;get address of disk buffer
	LD	BC,0Bh
	ADD	HL,BC		;start address of FAT in disk buffer
	POP	BC
	LD	A,B
	AND	01h		;get leave from FATaddress/200h
	LD	B,A
	ADD	HL,BC		;get address
	EX	DE,HL
	CP	A		;Z=1 right
FATAD_:	POP	HL
	POP	BC
	POP	IX
	RET
	
;-------------------------------
;Z=1  FAT16 drive   Z=0  FAT12 drive
0E09h:
CHKDRV:	;*他のパッチで使用するサブルーチン
	PUSH	HL
	PUSH	DE
	LD	DE,001Dh
	ADD	HL,DE
	BIT	7,(HL)
	POP	DE
	POP	HL
	RET
	

	
	
;--------------------------------------------------------------
	
;#69(_BUFFER) 
	LD	A,B		;E44
	CP	02h		;E45
	JR	C,0E86h		;E47
	LD	A,B		;E49
	CP	(IY+7Ah)	;E4A number of DISK BUFFER
	JR	Z,0E86h		;E4D
	JR	NC,0E6Eh	;E4F
	LD	HL,(0BBF8h)	;E51
	CALL	02D23h		;E54 flush
	LD	E,(HL)		;E57
	INC	HL		;E58
	LD	D,(HL)		;E59
	DEC	HL		;E5A
	LD	(0BBF8h),DE	;E5B
	CALL	022Bh		;E5F
	LD	HL,00h		;E62
	LD	(0BBF6h),HL	;E65
	LD	HL,0BBFAh	;E68
	DEC	(HL)		;E6B
	JR	0E49h		;E6C
	LD	HL,020Bh	;E6E reserve memory for BUFFER 
	CALL	01CBh		;E71 @セクタ番号に3バイト必要 020Dhにする？
	JR	NZ,0E86h	;E74
	LD	DE,(0BBF8h)	;E76
	LD	(0BBF8h),HL	;E7A
	LD	(HL),E		;E7D
	INC	HL		;E7E
	LD	(HL),D		;E7F
	LD	HL,0BBFAh	;E80
	INC	(HL)		;E83
	JR	0E49h		;E84
	LD	B,(IY+7Ah)	;E86 number of BUFFER
	XOR	A		;E89
	RET			;E8A
	
;#6A(_ASSIGN) 
	LD	HL,0BA1Ah	;E8B
	LD	A,B		;E8E number of logical drive
	OR	A		;E8F
	JR	Z,0EACh		;E90
	CP	09h		;E92
	LD	A,0DBh		;E94 'Invalid drive'
	RET	NC		;E96 error
	LD	C,B		;E97
	LD	B,00h		;E98
	ADD	HL,BC		;E9A
	LD	A,D		;E9B drive
	INC	A		;E9C
	JR	Z,0EA9h		;E9D 
	DEC	A		;E9F
	JR	Z,0EA8h		;EA0 
	CP	09h		;EA2
	LD	A,0DBh		;EA4 'Invalid drive'
	RET	NC		;EA6 Error
	LD	C,D		;EA7
	LD	(HL),C		;EA8
	LD	D,(HL)		;EA9
	XOR	A		;EAA
	RET			;EAB
	LD	(HL),A		;EAC 
	INC	HL		;EAD
	INC	A		;EAE
	CP	09h		;EAF
	JR	NZ,0EACh	;EB1
	XOR	A		;EB3
	LD	D,A		;EB4
	RET			;EB5
	
;#6E(_DSKCHK) 
	OR	A		;EB6
	JR	Z,0EC2h		;EB7 get status of disk check
	LD	A,B		;EB9 set
	OR	A		;EBA
	JR	Z,0EBFh		;EBB A=0 ディスク検査を有効にする
	LD	A,0FFh		;EBD A=FF 無効にする
	LD	(0F2ECh),A	;EBF
	LD	A,(0F2ECh)	;EC2
	LD	B,A		;EC5
	XOR	A		;EC6
	RET			;EC7
	
;#6F(_DOSVER) 
	LD	B,02h		;EC8 BC=0230 ver 2.30
	LD	C,030h		;ECA
	XOR	A		;ECC
	LD	H,A		;ECD
	LD	L,A		;ECE
	LD	D,A		;ECF
	LD	E,A		;ED0
	RET			;ED1
	
;#70(_REDIR) 
	LD	C,(IY+09h)	;ED2
	OR	A		;ED5 
	JR	Z,0EDBh		;ED6 get status
	LD	(IY+09h)B	;ED8 set status
	LD	B,C		;EDB
	XOR	A		;EDC
	RET			;EDD
	
;#6B(_GENV) 
	XOR	A		;EDE
	LD	(0BBEDh),A	;EDF
	XOR	A		;EE2
	PUSh	BC		;EE3
	CALL	0FA2h		;EE4
	POP	BC		;EE7
	RET	NZ		;EE8
	PUSh	DE		;EE9
	PUSh	BC		;EEA
	LD	DE,0BBEEh	;EEB
	CALL	0F8Bh		;EEE
	LD	DE,0F76h	;EF1
	JR	NC,0EF8h	;EF4
	LD	D,B		;EF6
	LD	E,C		;EF7
	POP	BC		;EF8
	POP	HL		;EF9
	CALL	0FC8h		;EFA
	EX	DE,HL		;EFD
	RET			;EFE

;#6C(_SENV) 
	XOR	A		;EFF
	LD	(0BBEDh),A	;F00
	XOR	A		;F03
	CALL	0FA2h		;F04
	RET	NZ		;F07
	LD	A,B		;F08
	OR	A		;F09
	RET	Z		;F0A
	EX	AF,AF'		;F0B
	EX	DE,HL		;F0C
	LD	A,0FFh		;F0D
	CALL	0FA2h		;F0F
	RET	NZ		;F12
	LD	A,B		;F13
	OR	A		;F14
	JR	Z,0F46h		;F15
	EX	AF,AF'		;F17
	ADD	A,B		;F18
	LD	C,A		;F19
	LD	A,00h		;F1A
	ADC	A,A		;F1C
	LD	B,A		;F1D
	PUSh	HL		;F1E
	LD	HL,04h		;F1F
	ADD	HL,BC		;F22
	CALL	01CBh		;F23 resarve memory
	POP	BC		;F26
	RET	NZ		;F27
	PUSh	BC		;F28
	LD	BC,(0BBEEh)	;F29
	LD	(0BBEEh),HL	;F2D
	LD	(HL),C		;F30
	INC	HL		;F31
	LD	(HL),B		;F32
	INC	HL		;F33
	EX	DE,HL		;F34
	XOR	A		;F35
	CALL	0FDFh		;F36
	EX	(SP),HL		;F39
	LD	A,0FFh		;F3A
	CALL	0FDFh		;F3C
	POP	HL		;F3F
	LD	DE,(0BBEEh)	;F40
	JR	0F4Ah		;F44
	EX	DE,HL		;F46
	LD	DE,0BBEEh	;F47
	CALL	0F8Bh		;F4A
	LD	HL,0BBEEh	;F4D
	CALL	C,02188h	;F50
	XOR	A		;F53
	RET			;F54
	
;#6D(_FENV) 
	XOR	A		;F55
	LD	(0BBEDh),A	;F56
	PUSh	HL		;F59
	PUSh	BC		;F5A
	LD	B,D		;F5B
	LD	C,E		;F5C
	LD	HL,(0BBEEh)	;F5D
	LD	A,H		;F60
	OR	L		;F61
	LD	DE,0F76h	;F62
	JR	Z,0F71h		;F65
	LD	E,(HL)		;F67
	INC	HL		;F68
	LD	D,(HL)		;F69
	INC	HL		;F6A
	EX	DE,HL		;F6B
	DEC	BC		;F6C
	LD	A,B		;F6D
	OR	C		;F6E
	JR	NZ,0F60h	;F6F
	POP	BC		;F71
	POP	HL		;F72
	JP	0FC8h		;F73
	NOP			;F76
	NOP			;F77
	LD	HL,(0BBEEh)	;F78
	LD	A,H		;F7B
	OR	L		;F7C
	RET	Z		;F7D
	LD	E,(HL)		;F7E
	INC	HL		;F7F
	LD	D,(HL)		;F80
	DEC	HL		;F81
	CALL	022Bh		;F82
	EX	DE,HL		;F85
	LD	(0BBEEh),HL	;F86
	JR	0F7Bh		;F89
	EX	DE,HL		;F8B
	LD	A,(HL)		;F8C
	INC	HL		;F8D
	LD	H,(HL)		;F8E
	LD	L,A		;F8F
	OR	h		;F90
	EX	DE,HL		;F91
	RET	Z		;F92
	PUSh	DE		;F93
	PUSh	HL		;F94
	INC	DE		;F95
	INC	DE		;F96
	CALL	0FF1h		;F97
	LD	B,D		;F9A
	LD	C,E		;F9B
	POP	HL		;F9C
	POP	DE		;F9D
	JR	NZ,0F8Bh	;F9E
	SCF			;FA0
	RET			;FA1
	PUSh	HL		;FA2
	AND	01h		;FA3
	LD	C,A		;FA5
	LD	B,0FFh		;FA6
	CALL	01003h		;FA8
	INC	HL		;FAB
	CALL	017AEh		;FAC
	JR	Z,0FC1h		;FAF
	BIT	0,C		;FB1
	JR	NZ,0FBBh	;FB3
	BIT	4,C		;FB5
	LD	A,0C0h		;FB7
	JR	NZ,0FC5h	;FB9
	DJNZ	0FA8h		;FBB
	LD	A,0BFh		;FBD
	JR	0FC5h		;FBF
	DEC	A		;FC1
	SUB	B		;FC2
	LD	B,A		;FC3
	XOR	A		;FC4
	POP	HL		;FC5
	OR	A		;FC6
	RET			;FC7
	PUSh	HL		;FC8
	PUSh	DE		;FC9
	LD	A,B		;FCA
	DEC	B		;FCB
	OR	A		;FCC
	LD	A,0BFh		;FCD
	JR	Z,0FDBh		;FCF
	LD	A,(DE)		;FD1
	CALL	01012h		;FD2
	INC	HL		;FD5
	LD	A,(DE)		;FD6
	INC	DE		;FD7
	OR	A		;FD8
	JR	NZ,0FCAh	;FD9
	POP	DE		;FDB
	POP	HL		;FDC
	OR	A		;FDD
	RET			;FDE
	PUSh	HL		;FDF
	AND	01h		;FE0
	LD	C,A		;FE2
	CALL	01003h		;FE3
	INC	HL		;FE6
	CALL	017AEh		;FE7
	LD	(DE),A		;FEA
	INC	DE		;FEB
	OR	A		;FEC
	JR	NZ,0FE3h	;FED
	POP	HL		;FEF
	RET			;FF0
	LD	C,00h		;FF1
	CALL	01003h		;FF3
	INC	HL		;FF6
	CALL	017AEh		;FF7
	LD	B,A		;FFA
	LD	A,(DE)		;FFB
	INC	DE		;FFC
	CP	B		;FFD
	RET	NZ		;FFE
	OR	A		;FFF
	JR	NZ,0FF3h	;1000
	RET			;1002
	PUSh	HL		;1003
	EX	DE,HL		;1004
	LD	A,(0BBEDh)	;1005
	CALL	02745h		;1008
	EX	DE,HL		;100B
	CALL	0F206h		;100C
	EI			;100F
	POP	HL		;1010
	RET			;1011
	PUSh	HL		;1012
	PUSh	DE		;1013
	LD	E,A		;1014
	EX	DE,HL		;1015
	LD	A,(0BBEDh)	;1016
	CALL	02745h		;1019
	EX	DE,HL		;101C
	CALL	0F209h		;101D
	EI			;1020
	POP	DE		;1021
	POP	HL		;1022
	RET			;1023
	
;#2A(_GDATE) 
	CALL	0111Bh		;1024
	LD	C,D		;1027
	LD	B,00h		;1028
	LD	E,L		;102A
	LD	D,H		;102B
	LD	HL,07BCh	;102C
	ADD	HL,BC		;102F
	LD	A,D		;1030
	CP	03h		;1031
	LD	A,C		;1033
	SBC	A,0FCh		;1034
	AND	0FCh		;1036
	RRCA			;1038
	RRCA			;1039
	ADD	A,C		;103A
	PUSh	HL		;103B
	LD	HL,0104Ch	;103C
	LD	C,D		;103F
	ADD	HL,BC		;1040
	ADD	A,(HL)		;1041
	POP	HL		;1042
	ADD	A,E		;1043
	SUB	07h		;1044
	JR	NC,01044h	;1046
	ADD	A,07h		;1048
	LD	C,A		;104A
	XOR	A		;104B
	RET			;104C
	LD	BC,0404h	;104D
	RLCA			;1050
	ADD	HL,BC		;1051
	INC	C		;1052
	LD	C,011h		;1053
	INC	D		;1055
	LD	D,019h		;1056
	DEC	DE		;1058

;#2B(_SDATE) 
	LD	BC,0F844h	;1059
	ADD	HL,BC		;105C
	JR	NC,01091h	;105D
	LD	A,H		;105F
	OR	A		;1060
	JR	NZ,01091h	;1061
	LD	A,L		;1063
	CP	064h		;1064
	JR	NC,01091h	;1066
	LD	B,A		;1068
	LD	A,D		;1069
	DEC	A		;106A
	CP	0Ch		;106B
	JR	NC,01091h	;106D
	LD	HL,01096h	;106F
	ADD	A,L		;1072
	LD	L,A		;1073
	JR	NC,01077h	;1074
	INC	h		;1076
	CP	097h		;1077
	JR	NZ,01083h	;1079
	LD	A,B		;107B
	AND	03h		;107C
	JR	NZ,01083h	;107E
	LD	HL,010A2h	;1080
	LD	A,E		;1083
	DEC	A		;1084
	CP	(HL)		;1085
	JR	NC,01091h	;1086
	LD	L,E		;1088
	LD	H,D		;1089
	LD	D,B		;108A
	CALL	01167h		;108B
	XOR	A		;108E
	LD	C,A		;108F
	RET			;1090
	LD	C,0FFh		;1091
	LD	A,0BEh		;1093
	RET			;1095
	RRA			;1096
	INC	E		;1097
	RRA			;1098
	LD	E,01Fh		;1099
	LD	E,01Fh		;109B
	RRA			;109D
	LD	E,01Fh		;109E
	LD	E,01Fh		;10A0
	DEC	E		;10A2
	
;#2C(_GTIME) 
	CALL	0111Bh		;10A3
	LD	H,B		;10A6
	LD	L,C		;10A7
	LD	D,E		;10A8
	LD	E,00h		;10A9
	XOR	A		;10AB
	RET			;10AC

;#2D(_STIME) 
	LD	A,H		;10AD
	CP	018h		;10AE
	JR	NC,010C5h	;10B0
	LD	A,L		;10B2
	CP	03Ch		;10B3
	JR	NC,010C5h	;10B5
	LD	A,D		;10B7
	CP	03Ch		;10B8
	JR	NC,010C5h	;10BA
	LD	B,H		;10BC
	LD	C,L		;10BD
	LD	E,D		;10BE
	CALL	01155h		;10BF
	XOR	A		;10C2
	LD	C,A		;10C3
	RET			;10C4
	LD	C,0FFh		;10C5
	LD	A,0BDh		;10C7
	RET			;10C9
	
	LD	A,0Dh		;10CA access CLOCK-IC
	OUT	(0B4h),A	;10CC
	IN	A,(0B5h)	;10CE
	AND	04h		;10D0
	LD	B,A		;10D2
	INC	A		;10D3
	OUT	(0B5h),A	;10D4
	LD	A,0Ah		;10D6
	OUT	(0B4h),A	;10D8
	LD	A,01h		;10DA
	OUT	(0B5h),A	;10DC
	LD	A,0Dh		;10DE
	OUT	(0B4h),A	;10E0
	LD	A,B		;10E2
	OUT	(0B5h),A	;10E3
	LD	BC,0D00h	;10E5
	LD	A,C		;10E8
	OUT	(0B4h),A	;10E9
	IN	A,(0B5h)	;10EB
	PUSh	AF		;10ED
	INC	C		;10EE
	DJNZ	010E8h		;10EF
	LD	A,0Eh		;10F1
	OUT	(0B4h),A	;10F3
	LD	A,00h		;10F5
	OUT	(0B5h),A	;10F7
	LD	B,0Dh		;10F9
	DEC	C		;10FB
	POP	DE		;10FC
	LD	A,C		;10FD
	OUT	(0B4h),A	;10FE
	LD	A,D		;1100
	OUT	(0B5h),A	;1101
	DJNZ	010FBh		;1103
	LD	A,0Dh		;1105
	OUT	(0B4h),A	;1107
	IN	A,(0B5h)	;1109
	OR	08h		;110B
	OUT	(0B5h),A	;110D
	RET			;110F
	LD	A,0Dh		;1110
	OUT	(0B4h),A	;1112
	IN	A,(0B5h)	;1114
	AND	04h		;1116
	OUT	(0B5h),A	;1118
	RET			;111A
	CALL	01110h		;111B
	LD	E,0Dh		;111E
	CALL	0113Ch		;1120
	LD	D,A		;1123
	CALL	0113Ch		;1124
	LD	H,A		;1127
	CALL	0113Ch		;1128
	LD	L,A		;112B
	DEC	E		;112C
	CALL	0113Ch		;112D
	LD	B,A		;1130
	CALL	0113Ch		;1131
	LD	C,A		;1134
	CALL	0113Ch		;1135
	LD	E,A		;1138
	JP	01105h		;1139
	PUSh	BC		;113C
	CALL	0114Ch		;113D
	LD	B,A		;1140
	ADD	A,A		;1141
	ADD	A,A		;1142
	ADD	A,B		;1143
	ADD	A,A		;1144
	LD	B,A		;1145
	CALL	0114Ch		;1146
	ADD	A,B		;1149
	POP	BC		;114A
	RET			;114B
	DEC	E		;114C
	LD	A,E		;114D
	OUT	(0B4h),A	;114E
	IN	A,(0B5h)	;1150
	AND	0Fh		;1152
	RET			;1154
	LD	L,E		;1155
	LD	H,C		;1156
	LD	D,B		;1157
	CALL	01110h		;1158
	LD	A,0Fh		;115B
	OUT	(0B4h),A	;115D
	LD	A,02h		;115F
	OUT	(0B5h),A	;1161
	LD	E,00h		;1163
	JR	0117Dh		;1165
	CALL	01110h		;1167
	OR	01h		;116A
	OUT	(0B5h),A	;116C
	LD	A,0Bh		;116E
	OUT	(0B4h),A	;1170
	LD	A,D		;1172
	OUT	(0B5h),A	;1173
	CALL	01110h		;1175
	CALL	01110h		;1178
	LD	E,07h		;117B
	LD	A,L		;117D
	CALL	0118Ch		;117E
	LD	A,H		;1181
	CALL	0118Ch		;1182
	LD	A,D		;1185
	CALL	0118Ch		;1186
	JP	01105h		;1189
	LD	C,A		;118C
	XOR	A		;118D
	LD	B,08h		;118E
	RLC	C		;1190
	ADC	A,A		;1192
	DAA			;1193
	DJNZ	01190h		;1194
	CALL	0119Dh		;1196
	RRCA			;1199
	RRCA			;119A
	RRCA			;119B
	RRCA			;119C
	LD	B,A		;119D
	LD	A,E		;119E
	OUT	(0B4h),A	;119F
	LD	A,B		;11A1
	OUT	(0B5h),A	;11A2
	INC	E		;11A4
	RET			;11A5
	OR	A		;11A6
	LD	A,(0BBFEh)	;11A7
	JR	Z,011AEh	;11AA
	LD	A,0FFh		;11AC
	EX	AF,AF'		;11AE
	LD	C,B		;11AF
	LD	A,C		;11B0
	AND	08Fh		;11B1
	JR	NZ,011BAh	;11B3
	LD	A,(0F344h)	;11B5
	OR	C		;11B8
	LD	C,A		;11B9
	LD	A,C		;11BA
	AND	070h		;11BB
	JR	NZ,011C1h	;11BD
	JR	01206h		;11BF
	LD	B,C		;11C1
	CP	020h		;11C2
	JR	NZ,011CBh	;11C4
	CALL	01206h		;11C6
	JR	NC,011FFh	;11C9
	XOR	A		;11CB
	LD	HL,0FCC1h	;11CC
	BIT	7,(HL)		;11CF
	JR	Z,011D5h	;11D1
	SET	7,A		;11D3
	LD	C,A		;11D5
	XOR	B		;11D6
	AND	08Fh		;11D7
	JR	Z,011E2h	;11D9
	PUSh	HL		;11DB
	CALL	01206h		;11DC
	POP	HL		;11DF
	JR	NC,011FFh	;11E0
	LD	A,C		;11E2
	BIT	7,A		;11E3
	JR	Z,011EDh	;11E5
	ADD	A,04h		;11E7
	BIT	4,A		;11E9
	JR	Z,011D5h	;11EB
	INC	HL		;11ED
	INC	A		;11EE
	AND	03h		;11EF
	JR	NZ,011CFh	;11F1
	LD	A,B		;11F3
	AND	070h		;11F4
	CP	030h		;11F6
	SCF			;11F8
	JR	NZ,011FFh	;11F9
	LD	C,B		;11FB
	CALL	01206h		;11FC
	PUSh	AF		;11FF
	LD	A,C		;1200
	AND	08Fh		;1201
	LD	B,A		;1203
	POP	AF		;1204
	RET			;1205
	PUSh	BC		;1206
	LD	A,C		;1207
	AND	0Fh		;1208
	ADD	A,A		;120A
	ADD	A,A		;120B
	LD	E,A		;120C
	LD	D,00h		;120D
	LD	HL,0BA35h	;120F
	ADD	HL,DE		;1212
	LD	E,(HL)		;1213
	INC	HL		;1214
	LD	D,(HL)		;1215
	INC	HL		;1216
	LD	A,(HL)		;1217
	INC	HL		;1218
	LD	H,(HL)		;1219
	LD	L,A		;121A
	OR	h		;121B
	JR	Z,01253h	;121C
	LD	A,(DE)		;121E
	INC	DE		;121F
	LD	C,A		;1220
	EX	AF,AF'		;1221
	LD	B,A		;1222
	EX	AF,AF'		;1223
	INC	B		;1224
	JR	Z,0123Bh	;1225
	LD	B,00h		;1227
	LD	A,(HL)		;1229
	OR	A		;122A
	JR	Z,01234h	;122B
	INC	B		;122D
	INC	HL		;122E
	DEC	C		;122F
	JR	NZ,01229h	;1230
	JR	01253h		;1232
	EX	DE,HL		;1234
	DEC	(HL)		;1235
	INC	HL		;1236
	INC	HL		;1237
	INC	(HL)		;1238
	JR	0124Ch		;1239
	ADD	HL,BC		;123B
	DEC	HL		;123C
	LD	A,(HL)		;123D
	OR	A		;123E
	JR	Z,01246h	;123F
	DEC	C		;1241
	JR	NZ,0123Ch	;1242
	JR	01253h		;1244
	LD	B,C		;1246
	DEC	B		;1247
	EX	DE,HL		;1248
	DEC	(HL)		;1249
	INC	HL		;124A
	INC	(HL)		;124B
	EX	AF,AF'		;124C
	LD	(DE),A		;124D
	EX	AF,AF'		;124E
	LD	A,B		;124F
	POP	BC		;1250
	OR	A		;1251
	RET			;1252
	POP	BC		;1253
	SCF			;1254
	RET			;1255
	LD	C,A		;1256
	LD	A,B		;1257
	AND	08Fh		;1258
	JR	NZ,0125Fh	;125A
	LD	A,(0F344h)	;125C
	AND	0Fh		;125F
	ADD	A,A		;1261
	ADD	A,A		;1262
	LD	E,A		;1263
	LD	D,00h		;1264
	LD	HL,0BA35h	;1266
	ADD	HL,DE		;1269
	LD	E,(HL)		;126A
	INC	HL		;126B
	LD	D,(HL)		;126C
	INC	HL		;126D
	LD	A,(HL)		;126E
	INC	HL		;126F
	LD	H,(HL)		;1270
	LD	L,A		;1271
	OR	h		;1272
	JR	Z,0128Eh	;1273
	LD	A,(DE)		;1275
	CP	C		;1276
	JR	C,0128Eh	;1277
	JR	Z,0128Eh	;1279
	LD	B,00h		;127B
	ADD	HL,BC		;127D
	LD	A,(HL)		;127E
	OR	A		;127F
	JR	Z,0128Eh	;1280
	LD	(HL),B		;1282
	EX	DE,HL		;1283
	INC	HL		;1284
	INC	(HL)		;1285
	INC	HL		;1286
	INC	A		;1287
	JR	Z,0128Bh	;1288
	INC	HL		;128A
	DEC	(HL)		;128B
	OR	A		;128C
	RET			;128D
	SCF			;128E
	RET			;128F
	LD	C,010h		;1290
	LD	HL,0BA35h	;1292
	LD	E,(HL)		;1295
	INC	HL		;1296
	LD	D,(HL)		;1297
	PUSh	DE		;1298
	INC	HL		;1299
	LD	E,(HL)		;129A
	INC	HL		;129B
	LD	D,(HL)		;129C
	INC	HL		;129D
	EX	(SP),HL		;129E
	LD	A,H		;129F
	OR	L		;12A0
	JR	Z,012BEh	;12A1
	PUSh	BC		;12A3
	LD	C,(HL)		;12A4
	LD	A,(DE)		;12A5
	INC	A		;12A6
	JR	Z,012B9h	;12A7
	DEC	A		;12A9
	JR	Z,012B9h	;12AA
	DEC	A		;12AC
	CP	B		;12AD
	JR	C,012B9h	;12AE
	PUSh	HL		;12B0
	XOR	A		;12B1
	LD	(DE),A		;12B2
	INC	HL		;12B3
	INC	(HL)		;12B4
	INC	HL		;12B5
	INC	HL		;12B6
	DEC	(HL)		;12B7
	POP	HL		;12B8
	INC	DE		;12B9
	DEC	C		;12BA
	JR	NZ,012A5h	;12BB
	POP	BC		;12BD
	POP	HL		;12BE
	DEC	C		;12BF
	JR	NZ,01295h	;12C0
	RET			;12C2
	
;
	LD	(IX+0h),0FFh	;12C3 IX=File handle or FCB
	LD	(IX+1Fh)B	;12C7 
	LD	(IY+20h)C	;12CA 
	LD	(0BB9Eh),DE	;12CD 
	OR	A		;12D1
	JR	NZ,012D7h	;12D2
	LD	A,(0F23Ch)	;12D4 Current drive
	LD	D,A		;12D7
	CALL	013BCh		;12D8 IY+21h Flag set
	OR	A		;12DB
	JR	Z,012E9h	;12DC
	CP	D		;12DE
	JR	Z,012E9h	;12DF
	LD	D,A		;12E1
	BIT	7,(IY+20h)	;12E2
	LD	A,0DBh		;12E6 'Invalid drive'
	RET	NZ		;12E8
	LD	(IX+19h)D	;12E9 Drive number
	BIT	3,(IX+1Fh)	;12EC
	JR	NZ,012FFh	;12F0
	CALL	01782h		;12F2
	JR	Z,01304h	;12F5
	CP	05Ch		;12F7
	JR	NZ,01304h	;12F9
	SET	0,B		;12FB
	SET	1,B		;12FD
	SET	5,(IY+20h)	;12FF
	XOR	A		;1303
	CALL	NZ,0179Ch	;1304
	LD	DE,(0BB9Eh)	;1307
	LD	(0BB9Ch),DE	;130B
	CALL	016BCh		;130F
	BIT	3,(IX+1Fh)	;1312 IX=File handle 
	JR	Z,01320h	;1316
	LD	DE,0B926h	;1318
	CALL	013E9h		;131B
	JR	01391h		;131E
	LD	DE,0B926h	;1320
	CALL	013FFh		;1323
	CP	05Ch		;1326
	JR	NZ,01366h	;1328
	SET	1,B		;132A
	CALL	01782h		;132C
	LD	DE,(0BB9Eh)	;132F
	LD	(0BB9Ch),DE	;1333
	LD	DE,0B926h	;1337
	CALL	014CBh		;133A
	JR	NZ,013A6h	;133D
	LD	DE,0B926h	;133F
	CALL	016E7h		;1342
	JR	Z,01320h	;1345
	JR	013A6h		;1347
	LD	(IX+0h),0FFh	;1349
	LD	(IX+1Fh)B	;134D
	LD	(IX+19h)A	;1350
	LD	(IY+20h)C	;1353
	LD	(0BB9Eh),DE	;1356
	LD	(0BB9Ch),DE	;135A
	LD	B,00h		;135E
	LD	DE,0B926h	;1360
	CALL	013FFh		;1363
	LD	A,B		;1366
	AND	018h		;1367
	JR	NZ,01383h	;1369
	BIT	1,(IY+20h)	;136B
	JR	Z,01383h	;136F
	PUSh	HL		;1371
	PUSh	BC		;1372
	LD	HL,013B1h	;1373
	LD	DE,0B926h	;1376
	LD	BC,0Bh		;1379
	LDIR			;137C
	POP	AF		;137E
	OR	039h		;137F
	LD	B,A		;1381
	POP	HL		;1382
	XOR	A		;1383
	BIT	0,(IY+20h)	;1384
	LD	DE,0B926h	;1388
	CALL	Z,014F4h	;138B
	OR	A		;138E
	JR	NZ,0139Dh	;138F
	SET	4,(IY+20h)	;1391
	LD	DE,0B926h	;1395
	CALL	014CBh		;1398
	JR	NZ,013A6h	;139B
	LD	(IX+1Eh)A	;139D
	LD	DE,0B926h	;13A0
	CALL	016E7h		;13A3
	PUSh	AF		;13A6
	CALL	01782h		;13A7
	CALL	NZ,0179Ch	;13AA
	LD	C,A		;13AD
	POP	AF		;13AE
	OR	A		;13AF
	RET			;13B0
	DB	3Fh,3Fh,3Fh,3Fh	;13B1
	DB	3Fh,3Fh,3Fh,3Fh
	DB	3Fh,3Fh,3Fh
	
	
	LD	(IY+21h),00h	;13BC
	CALL	01782h		;13C0
	JR	Z,013E6h	;13C3
	BIT	1,(IY+21h)	;13C5
	JR	NZ,013E3h	;13C9
	SUB	041h		;13CB
	JR	C,013E3h	;13CD
	CP	01Ah		;13CF
	JR	NC,013E3h	;13D1
	INC	A		;13D3
	LD	B,A		;13D4
	CALL	01782h		;13D5
	JR	Z,013E3h	;13D8
	CP	03Ah		;13DA
	LD	A,B		;13DC
	LD	B,04h		;13DD
	RET	Z		;13DF
	CALL	0179Ch		;13E0
	CALL	0179Ch		;13E3
	XOR	A		;13E6
	LD	B,A		;13E7
	RET			;13E8
	PUSh	HL		;13E9
	EX	DE,HL		;13EA
	LD	A,B		;13EB
	AND	07h		;13EC
	LD	B,A		;13EE
	LD	(IY+21h),09h	;13EF
	LD	C,0Bh		;13F3
	CALL	0146Ch		;13F5
	DEC	D		;13F8
	JR	NZ,013FDh	;13F9
	SET	3,B		;13FB
	POP	HL		;13FD
	RET			;13FE

	PUSh	HL		;13FF
	EX	DE,HL		;1400
	LD	A,B		;1401
	AND	07h		;1402
	LD	B,A		;1404
	LD	(IY+21h),00h	;1405
	LD	C,08h		;1409
	CALL	01782h		;140B
	JR	Z,01454h	;140E
	CP	02Eh		;1410 '.'
	JR	NZ,01451h	;1412
	LD	D,01h		;1414
	CALL	01782h		;1416
	JR	Z,0143Ah	;1419
	BIT	4,(IY+21h)	;141B
	JR	Z,0144Eh	;141F
	CP	02Eh		;1421
	JR	NZ,01437h	;1423
	SET	7,B		;1425
	INC	D		;1427
	CALL	01782h		;1428
	JR	Z,0143Ah	;142B
	BIT	4,(IY+21h)	;142D
	JR	Z,01449h	;1431
	CP	02Eh		;1433
	JR	Z,01449h	;1435
	CALL	0179Ch		;1437
	LD	(HL),02Eh	;143A
	INC	HL		;143C
	DEC	C		;143D
	DEC	D		;143E
	JR	NZ,0143Ah	;143F
	SET	6,B		;1441
	SET	3,B		;1443
	SET	0,B		;1445
	JR	01454h		;1447
	RES	7,B		;1449
	CALL	0179Ch		;144B
	CALL	0179Ch		;144E
	CALL	0179Ch		;1451
	CALL	0146Ch		;1454
	DEC	D		;1457
	JR	NZ,0145Ch	;1458
	SET	3,B		;145A
	CP	02Eh		;145C
	JR	NZ,01465h	;145E
	SET	4,B		;1460
	CALL	01782h		;1462
	LD	C,03h		;1465
	CALL	0146Ch		;1467
	POP	HL		;146A
	RET			;146B
	LD	D,00h		;146C
	INC	C		;146E
	CALL	01782h		;146F
	JR	Z,014C4h	;1472
	CALL	0179Ch		;1474
	CP	020h		;1477
	JR	Z,014C4h	;1479
	DEC	C		;147B
	INC	C		;147C
	CALL	01782h		;147D
	JR	Z,014C4h	;1480
	BIT	1,(IY+21h)	;1482
	JR	Z,01490h	;1486
	DEC	C		;1488
	DEC	C		;1489
	JR	NZ,0148Eh	;148A
	LD	A,020h		;148C
	INC	C		;148E
	INC	C		;148F
	BIT	4,(IY+21h)	;1490
	JR	NZ,014C1h	;1494
	BIT	3,(IY+21h)	;1496
	JR	NZ,014ACh	;149A
	BIT	2,(IY+21h)	;149C
	JR	NZ,014ACh	;14A0
	CP	02Ah		;14A2
	JR	Z,014B7h	;14A4
	CP	03Fh		;14A6
	JR	NZ,014ACh	;14A8
	SET	5,B		;14AA
	SET	0,B		;14AC
	LD	D,01h		;14AE
	DEC	C		;14B0
	JR	Z,0147Ch	;14B1
	LD	(HL),A		;14B3
	INC	HL		;14B4
	JR	0147Dh		;14B5
	LD	A,C		;14B7
	LD	C,A		;14B8
	DEC	A		;14B9
	JR	Z,014AAh	;14BA
	LD	(HL),03Fh	;14BC
	INC	HL		;14BE
	JR	014B8h		;14BF
	CALL	0179Ch		;14C1
	DEC	C		;14C4
	RET	Z		;14C5
	LD	(HL),020h	;14C6
	INC	HL		;14C8
	JR	014C4h		;14C9
	XOR	A		;14CB
	BIT	3,(IY+20h)	;14CC
	RET	Z		;14D0
	PUSh	DE		;14D1
	BIT	6,(IY+20h)	;14D2
	SET	6,(IY+20h)	;14D6
	CALL	Z,0151Ah	;14DA  Is directory root or sub?
	POP	DE		;14DD
	OR	A		;14DE
	RET	NZ		;14DF
	BIT	4,(IY+20h)	;14E0
	JR	Z,014EFh	;14E4
	BIT	0,(IY+20h)	;14E6
	RET	Z		;14EA
	LD	A,B		;14EB
	AND	018h		;14EC
	RET	Z		;14EE
	CALL	015A6h		;14EF
	OR	A		;14F2
	RET			;14F3
	
	PUSh	BC		;14F4
	PUSh	HL		;14F5
	CALL	01698h		;14F6
	LD	A,00h		;14F9
	JR	NC,01517h	;14FB
	POP	AF		;14FD
	LD	(IX+1Ah)L	;14FE
	LD	(IX+1Bh)H	;1501
	PUSh	HL		;1504
	LD	BC,00h		;1505
	ADD	HL,BC		;1508
	LD	C,(HL)		;1509
	INC	HL		;150A
	LD	B,(HL)		;150B
	LD	(IX+1Ch)C	;150C
	LD	(IX+1Dh)B	;150F
	LD	BC,07h		;1512
	ADD	HL,BC		;1515
	LD	A,(HL)		;1516
	POP	HL		;1517
	POP	BC		;1518
	RET			;1519

	PUSh	BC		;151A
	LD	C,(IX+19h)	;151B
	LD	B,00h		;151E
	CALL	031A1h		;1520
	POP	BC		;1523
	OR	A		;1524
	RET	NZ		;1525 error 'Invalid drive'
	PUSh	BC		;1526
	PUSh	HL		;1527
	BIT	5,(IY+20h)	;1528
	JR	NZ,01597h	;152C
	LD	DE,01Eh		;152E cluster number of directory
	ADD	HL,DE		;1531
	LD	E,(HL)		;1532 root dir=00h,FFh
	INC	HL		;1533
	LD	D,(HL)		;1534          ;FAT16*済 call CLST_1 (0D39h)	;in bank2/path.mac FIRST_DIR
	BIT	7,D		;1535
	JR	NZ,01597h	;1537 root dir
;SUB DIR
	LD	BC,(0BB9Eh)	;1539
	PUSh	BC		;153D
	PUSh	HL		;153E
	LD	A,D		;153F
	OR	E		;1540
	JR	Z,01547h	;1541
	RES	3,(IY+20h)	;1543
	INC	HL		;1547
	LD	(0BB9Eh),HL	;1548 sub directory name
	LD	BC,0FFE0h	;154B
	ADD	HL,BC		;154E DPB+0
	PUSh	DE		;154F DE=cluster number of sub directory
	CALL	0159Fh		;1550
	POP	DE		;1553
	LD	B,00h		;1554
	PUSh	DE		;1556
	LD	DE,0B910h	;1557
	CALL	013FFh		;155A
	BIT	3,(IY+20h)	;155D
	JR	Z,0156Eh	;1561
	LD	DE,0B910h	;1563
	CALL	015A6h		;1566
	OR	A		;1569
	JR	NZ,0157Eh	;156A
	POP	AF		;156C
	PUSh	DE		;156D
	LD	DE,0B910h	;156E SUB DIR
	CALL	016E7h		;1571
	JR	NZ,0157Eh	;1574
	POP	DE		;1576
	CALL	01782h		;1577
	JR	NZ,01556h	;157A
	JR	01582h		;157C
	POP	DE		;157E
	LD	DE,0FFFFh	;157F
	POP	HL		;1582
	LD	(HL),D		;1583 DPB+1Eh = cluster number of current dir
	DEC	HL		;1584
	LD	(HL),E		;1585
	POP	BC		;1586
	LD	(0BB9Eh),BC	;1587
	SET	3,(IY+20h)	;158B		;FAT16*済 call CLST_2 (0D3Ch)	;in bank2/path.mac FIRST_DIR
	BIT	7,D		;158F		;FAT16*済 00,00,00	;in bank2/path.mac FIRST_DIR
	JR	Z,01597h	;1591
	INC	HL		;1593
	INC	HL		;1594
	LD	(HL),00h	;1595 DPB+20h sub directory's name
	POP	HL		;1597
	POP	BC		;1598
	JR	NZ,0159Fh	;1599
	CALL	01C40h		;159B (BBE8h),cluster of sub directory
	RET			;159E
	
	CALL	016BCh		;159F root directory
	CALL	01C3Dh		;15A2 (BBE8h),FFFFh
	RET			;15A5
	
	LD	A,0D9h		;15A6
	BIT	3,B		;15A8
	RET	Z		;15AA
	BIT	5,B		;15AB
	RET	NZ		;15AD
	PUSh	DE		;15AE
	CALL	01C53h		;15AF
	JR	Z,015C9h	;15B2
	EX	(SP),HL		;15B4
	PUSh	HL		;15B5
	PUSh	BC		;15B6
	XOR	A		;15B7
	CALL	015D2h		;15B8
	POP	BC		;15BB
	POP	HL		;15BC
	EX	(SP),HL		;15BD
	JR	NC,015C4h	;15BE
	BIT	4,A		;15C0
	JR	NZ,015CDh	;15C2
	CALL	01C8Ah		;15C4
	JR	NC,015B2h	;15C7
	POP	DE		;15C9
	LD	A,0D6h		;15CA
	RET			;15CC
	POP	AF		;15CD
	CALL	01C30h		;15CE
	RET			;15D1
	
	AND	08h		;15D2
	LD	C,A		;15D4
	LD	A,(DE)		;15D5
	OR	A		;15D6
	RET	Z		;15D7
	CP	0E5h		;15D8
	RET	Z		;15DA
	PUSh	DE		;15DB
	LD	B,0Bh		;15DC
	CP	05h		;15DE
	JR	NZ,015E4h	;15E0
	LD	A,0E5h		;15E2
	PUSh	AF		;15E4
	LD	A,(HL)		;15E5
	CALL	017AEh		;15E6
	POP	AF		;15E9
	BIT	3,C		;15EA
	JR	NZ,015FAh	;15EC
	SUB	(HL)		;15EE
	JR	Z,015FAh	;15EF
	BIT	2,C		;15F1
	JR	NZ,01609h	;15F3
	LD	A,(HL)		;15F5
	SUB	03Fh		;15F6
	JR	NZ,01609h	;15F8
	INC	HL		;15FA
	INC	DE		;15FB
	LD	A,(DE)		;15FC
	DJNZ	015E4h		;15FD
	EX	DE,HL		;15FF
	LD	A,C		;1600
	XOR	(HL)		;1601
	AND	08h		;1602
	JR	NZ,01609h	;1604
	LD	A,(HL)		;1606
	SCF			;1607
	LD	B,0B7h		;1608
	POP	DE		;160A
	RET			;160B
	PUSh	BC		;160C
	EX	(SP),IX		;160D
	LD	BC,0B00h	;160F
	LD	A,(DE)		;1612
	CP	05h		;1613
	JR	NZ,01619h	;1615
	LD	A,0E5h		;1617
	PUSh	DE		;1619
	LD	D,A		;161A
	LD	A,(HL)		;161B
	CALL	017AEh		;161C
	BIT	2,C		;161F
	JR	NZ,01628h	;1621
	CP	03Fh		;1623
	JR	NZ,01628h	;1625
	LD	A,D		;1627
	LD	(IX+0D)A	;1628
	POP	DE		;162B
	INC	DE		;162C
	INC	HL		;162D
	INC	IX		;162E
	LD	A,(DE)		;1630
	DJNZ	01619h		;1631
	EX	(SP),IX		;1633
	POP	BC		;1635
	RET			;1636
	PUSh	AF		;1637
	CALL	02549h		;1638
	POP	BC		;163B
	JR	NC,01640h	;163C
	XOR	A		;163E
	RET			;163F
	PUSh	HL		;1640
	PUSh	DE		;1641
	LD	A,B		;1642
	OR	A		;1643
	CALL	NZ,01698h	;1644
	POP	HL		;1647
	LD	A,0C1h		;1648
	JR	C,01666h	;164A
	LD	BC,0B09h	;164C
	BIT	3,(IX+1Fh)	;164F
	JR	NZ,01662h	;1653
	LD	BC,0800h	;1655
	LD	A,020h		;1658
	CALL	01669h		;165A
	JR	NZ,01666h	;165D
	LD	BC,0300h	;165F
	XOR	A		;1662
	CALL	01669h		;1663
	POP	HL		;1666
	OR	A		;1667
	RET			;1668
	CP	(HL)		;1669
	JR	Z,01694h	;166A
	LD	A,(HL)		;166C
	CALL	017AEh		;166D
	LD	(HL),A		;1670
	INC	HL		;1671
	BIT	4,C		;1672
	JR	NZ,0168Ch	;1674
	BIT	2,C		;1676
	JR	NZ,01686h	;1678
	BIT	3,C		;167A
	JR	NZ,01686h	;167C
	CP	03Fh		;167E
	JR	Z,01694h	;1680
	CP	02Ah		;1682
	JR	Z,01694h	;1684
	DJNZ	0166Ch		;1686
	JR	01692h		;1688
	LD	A,(HL)		;168A
	INC	HL		;168B
	CP	020h		;168C
	JR	NZ,01694h	;168E
	DJNZ	0168Ah		;1690
	XOR	A		;1692
	RET			;1693
	LD	A,0DAh		;1694
	OR	A		;1696
	RET			;1697
	LD	HL,(0BBF4h)	;1698
	PUSh	HL		;169B
	POP	HL		;169C
	LD	A,H		;169D
	OR	L		;169E
	RET	Z		;169F
	LD	C,(HL)		;16A0
	INC	HL		;16A1
	LD	B,(HL)		;16A2
	INC	HL		;16A3
	PUSh	BC		;16A4
	PUSh	HL		;16A5
	PUSh	DE		;16A6
	LD	BC,09h		;16A7
	ADD	HL,BC		;16AA
	LD	B,08h		;16AB
	LD	A,(DE)		;16AD
	CP	(HL)		;16AE
	JR	NZ,016B5h	;16AF
	INC	DE		;16B1
	INC	HL		;16B2
	DJNZ	016ADh		;16B3
	POP	DE		;16B5
	POP	HL		;16B6
	JR	NZ,0169Ch	;16B7
	POP	BC		;16B9
	SCF			;16BA
	RET			;16BB
	
	PUSh	HL		;16BC
	LD	HL,0B973h	;16BD
	LD	(HL),02h	;16C0
	LD	HL,0B931h	;16C2
	LD	(HL),00h	;16C5
	INC	HL		;16C7
	LD	(0BB9Ah),HL	;16C8
	POP	HL		;16CB
	LD	(IY+19h),00h	;16CC
	PUSh	HL		;16D0
	LD	A,02h		;16D1
	LD	HL,(0BB9Ah)	;16D3
	CP	(HL)		;16D6
	JR	Z,016E3h	;16D7
	LD	(HL),00h	;16D9
	INC	HL		;16DB
	CP	(HL)		;16DC
	JR	Z,016E1h	;16DD
	LD	(HL),00h	;16DF
	LD	A,02Ah		;16E1
	ADD	A,0D6h		;16E3
	POP	HL		;16E5
	RET			;16E6
	PUSh	BC		;16E7
	PUSh	HL		;16E8
	LD	HL,(0BB9Ah)	;16E9
	LD	A,B		;16EC
	AND	018h		;16ED
	JR	Z,0172Fh	;16EF
	BIT	6,B		;16F1
	JR	Z,01706h	;16F3
	BIT	7,B		;16F5
	JR	Z,01723h	;16F7
	DEC	HL		;16F9
	LD	A,(HL)		;16FA
	CP	01h		;16FB
	JR	Z,01723h	;16FD
	OR	A		;16FF
	JR	NZ,016F9h	;1700
	LD	A,0D9h		;1702
	JR	0172Bh		;1704
	PUSh	HL		;1706
	LD	HL,0B901h	;1707
	PUSh	HL		;170A
	LD	(HL),01h	;170B
	INC	HL		;170D
	LD	A,(DE)		;170E
	CALL	0173Ah		;170F
	POP	DE		;1712
	POP	HL		;1713
	LD	A,(HL)		;1714
	CP	02h		;1715
	LD	A,0D8h		;1717
	JR	Z,0172Bh	;1719
	LD	A,(DE)		;171B
	LD	(HL),A		;171C
	INC	HL		;171D
	INC	DE		;171E
	OR	A		;171F
	JR	NZ,01714h	;1720
	DEC	HL		;1722
	LD	(0BB9Ah),HL	;1723
	CALL	016D0h		;1726
	JR	Z,0172Fh	;1729
	LD	(IY+25D),0FFh	;172B
	POP	HL		;172F
	POP	BC		;1730
	BIT	2,(IY+20h)	;1731
	JR	Z,01738h	;1735
	XOR	A		;1737
	OR	A		;1738
	RET			;1739
	PUSh	BC		;173A
	PUSh	HL		;173B
	LD	B,0Dh		;173C
	LD	(HL),00h	;173E
	INC	HL		;1740
	DJNZ	0173Eh		;1741
	POP	HL		;1743
	LD	BC,0B09h	;1744
	BIT	3,(IX+1Fh)	;1747
	JR	NZ,0175Ah	;174B
	LD	BC,0800h	;174D
	CALL	0176Ah		;1750
	LD	(HL),02Eh	;1753
	INC	HL		;1755
	LD	A,(DE)		;1756
	LD	BC,0300h	;1757
	CALL	0176Ah		;175A
	BIT	7,C		;175D
	JR	NZ,01768h	;175F
	BIT	0,C		;1761
	JR	NZ,01768h	;1763
	DEC	HL		;1765
	LD	(HL),00h	;1766
	POP	BC		;1768
	RET			;1769
	INC	DE		;176A
	CALL	017AEh		;176B
	BIT	2,C		;176E
	JR	NZ,0177Ah	;1770
	BIT	3,C		;1772
	JR	NZ,0177Ah	;1774
	CP	020h		;1776
	JR	Z,0177Eh	;1778
	SET	7,C		;177A
	LD	(HL),A		;177C
	INC	HL		;177D
	LD	A,(DE)		;177E
	DJNZ	0176Ah		;177F
	RET			;1781
	PUSh	HL		;1782
	LD	HL,(0BB9Eh)	;1783
	LD	A,(HL)		;1786
	OR	A		;1787
	JR	Z,0178Eh	;1788
	INC	HL		;178A
	LD	(0BB9Eh),HL	;178B
	POP	HL		;178E
	PUSh	BC		;178F
	LD	C,(IY+21h)	;1790
	CALL	017AEh		;1793
	LD	(IY+21h)C	;1796
	POP	BC		;1799
	OR	A		;179A
	RET			;179B
	PUSh	HL		;179C
	LD	HL,(0BB9Eh)	;179D
	DEC	HL		;17A0
	LD	(0BB9Eh),HL	;17A1
	RES	1,(IY+21h)	;17A4
	RES	2,(IY+21h)	;17A8
	POP	HL		;17AC
	RET			;17AD
	RES	4,C		;17AE
	SET	2,C		;17B0
	BIT	1,C		;17B2
	RES	1,C		;17B4
	JR	NZ,017D1h	;17B6
	RES	2,C		;17B8
	SET	1,C		;17BA
	CALL	017D6h		;17BC
	JR	C,017D1h	;17BF
	RES	1,C		;17C1
	BIT	0,C		;17C3
	CALL	Z,017F3h	;17C5
	BIT	3,C		;17C8
	CALL	01803h		;17CA
	JR	NC,017D1h	;17CD
	SET	4,C		;17CF
	OR	A		;17D1
	RET	NZ		;17D2
	SET	4,C		;17D3
	RET			;17D5
	
;--------------------------------------------
;kernel version 2.31
;10バイト多い
	push	hl
	ld	hl,17DCh
	jr	17E7h
17DCh:	db	80h,0a0h,0e0h,0fdh
	
;-------------------------------------------	
	CALL	0F258h		;17D6 kernel version 2.31はこのアドレス+0Ah
	PUSh	HL		;17D9
	LD	HL,0F30Fh	;17DA
17E7h:	CP	(HL)		;17DD
	INC	HL		;17DE
	JR	C,017E4h	;17DF
	CP	(HL)		;17E1
	JR	C,017ECh	;17E2
	INC	HL		;17E4
	CP	(HL)		;17E5
	JR	C,017F0h	;17E6
	INC	HL		;17E8
	CP	(HL)		;17E9
	JR	NC,017F0h	;17EA
	OR	A		;17EC
	SCF			;17ED
	POP	HL		;17EE
	RET			;17EF
	OR	A		;17F0
	POP	HL		;17F1
	RET			;17F2
	PUSh	HL		;17F3
	LD	HL,0BA75h	;17F4
	CALL	0F255h		;17F7
	PUSh	BC		;17FA
	LD	B,00h		;17FB
	LD	C,A		;17FD
	ADD	HL,BC		;17FE
	LD	A,(HL)		;17FF
	POP	BC		;1800
	POP	HL		;1801
	RET			;1802
	PUSh	HL		;1803
	PUSh	BC		;1804
	LD	BC,011h		;1805
	LD	HL,0181Ch	;1808
	JR	Z,01810h	;180B
	LD	BC,06h		;180D
	CP	020h		;1810
	JR	C,01818h	;1812
	CPIR			;1814
	JR	NZ,01819h	;1816
	SCF			;1818 Cy=1 
	POP	BC		;1819
	POP	HL		;181A
	RET			;181B
	DB	7Fh,7Ch,3Ch,3Eh,2Fh	;181C
	DB	0FFh,20h,3Ah,3Bh,2E	;|<>/:;
	DB	2Ch,3Dh,2Bh,5Ch,22h	;.,=+\"[]
	DB	5Bh,5Dh			;deleat(7Fh)　space(20h)
	
	
	
;#59(_GETCD) 
;B=DRIVE 0-8   DE=BUFFER
	LD	A,B		;182D
	LD	B,00h		;182E
	LD	IX,0B9DAh	;1830
	LD	C,09h		;1834
	PUSh	DE		;1836
	LD	DE,01842h	;1837
	CALL	012C3h		;183A
	POP	DE		;183D
	RET	NZ		;183E
	JP	01893h		;183F
	NOP			;1842
	
;#5A(_CHDIR) 
;DE=DRIVE/ PATH/ FILE
	XOR	A		;1843
	LD	B,A		;1844
	LD	IX,0B9DAh	;1845
	LD	C,09h		;1849
	CALL	012C3h		;184B
	RET	NZ		;184E
	OR	C		;184F
	LD	A,0D9h		;1850 'Invalid pathname'
	RET	NZ		;1852 ERROR
	LD	BC,01Eh		;1853
	ADD	HL,BC		;1856
	LD	DE,(DE_START)	;1857 cluster of current dir
	LD	(HL),E		;185B (DPB+1Eh),cluster of current dir
	INC	HL		;185C
	LD	(HL),D		;185D
	INC	HL		;185E
	EX	DE,HL		;185F
	JP	01893h		;1860
	
;#5B(_PARSE) 
	LD	C,04h		;1863
	LD	IX,0B9DAh	;1865
	XOR	A		;1869
	CALL	012C3h		;186A
	LD	C,(IX+19h)	;186D C=logical drive
	LD	DE,(0BB9Eh)	;1870 
	LD	HL,(0BB9Ch)	;1874 
	RET			;1877
	
;#5C(_PFILE) 
	PUSh	HL		;1878
	LD	(0BB9Eh),DE	;1879
	EX	DE,HL		;187D
	LD	B,00h		;187E
	CALL	013FFh		;1880
	LD	DE,(0BB9Eh)	;1883
	POP	HL		;1887
	XOR	A		;1888
	RET			;1889

;#5D(_CHKCHR)
	LD	A,E		;188A
	LD	C,D		;188B
	CALL	017AEh		;188C
	LD	D,C		;188F
	LD	E,A		;1890
	XOR	A		;1891
	RET			;1892
;#5E(_WPATH)
	PUSh	DE		;1893
	LD	HL,0B933h	;1894
	LD	C,00h		;1897
	PUSh	DE		;1899
	LD	A,(0BB99h)	;189A
	OR	A		;189D
	JR	NZ,018B7h	;189E
	LD	A,(HL)		;18A0
	INC	HL		;18A1
	CP	02h		;18A2
	JR	Z,018B7h	;18A4
	CP	01h		;18A6
	JR	NZ,018B0h	;18A8
	POP	AF		;18AA
	LD	A,05Ch		;18AB
	INC	DE		;18AD
	PUSh	DE		;18AE
	DEC	DE		;18AF
	LD	(DE),A		;18B0
	INC	DE		;18B1
	OR	A		;18B2
	JR	NZ,018A0h	;18B3
	JR	018B9h		;18B5
	LD	A,0D8h		;18B7
	POP	HL		;18B9
	POP	DE		;18BA
	RET			;18BB

;#40(_FFIRST) 
	LD	A,04h		;18BC
	JR	018C1h		;18BE

;#42(_FNEW) 
	XOR	A		;18C0
	LD	(0BBAFh),A	;18C1 04=#40 00=#42
	LD	A,(DE)		;18C4 DRIVE
	INC	A		;18C5 Ligical drive
	JR	Z,018D5h	;18C6
	XOR	A		;18C8
	LD	C,0Ah		;18C9
	CALL	012C3h		;18CB
	RET	NZ		;18CE
	OR	C		;18CF
	LD	A,0D9h		;18D0 'Invalid pathname'
	RET	NZ		;18D2
	JR	0191Fh		;18D3
	PUSh	HL		;18D5
	PUSh	DE		;18D6
	EX	(SP),IX		;18D7
	CALL	019F8h		;18D9
	LD	C,(IX+19h)	;18DC
	POP	IX		;18DF
	JP	NZ,0196Dh	;18E1
	LD	A,0C1h		;18E4
	JP	C,0196Dh	;18E6
	PUSh	HL		;18E9
	LD	HL,0Bh		;18EA
	ADD	HL,DE		;18ED
	LD	A,(HL)		;18EE
	POP	HL		;18EF
	BIT	4,A		;18F0 DIR
	LD	A,0CFh		;18F2
	JR	Z,0196Dh	;18F4
	BIT	3,B		;18F6 VOL
	JR	NZ,0196Dh	;18F8
	CALL	01C30h		;18FA
	PUSh	BC		;18FD
	PUSh	HL		;18FE
	LD	BC,019h		;18FF
	ADD	HL,BC		;1902
	PUSh	IX		;1903
	POP	DE		;1905
	EX	DE,HL		;1906
	LD	BC,01Ah		;1907
	ADD	HL,BC		;190A
	EX	DE,HL		;190B
	LD	BC,04h		;190C
	LDIR			;190F
	POP	HL		;1911
	POP	BC		;1912
	POP	DE		;1913
	LD	A,C		;1914
	LD	C,04Eh		;1915
	CALL	01349h		;1917
	RET	NZ		;191A
	OR	C		;191B
	LD	A,0D9h		;191C
	RET	NZ		;191E
	BIT	2,(IY+2Fh)	;191F
	JR	NZ,01955h	;1923
	BIT	5,B		;1925 archive
	JR	Z,01955h	;1927
	PUSh	IX		;1929
	EX	(SP),HL		;192B
	LD	BC,01h		;192C
	ADD	HL,BC		;192F
	LD	(0BB9Eh),HL	;1930
	POP	HL		;1933
	LD	DE,0B91Bh	;1934
	CALL	013FFh		;1937
	OR	A		;193A
	LD	A,0DAh		;193B 'Invalid filename'
	RET	NZ		;193D
	PUSh	HL		;193E
	LD	HL,0B926h	;193F
	LD	DE,0B91Bh	;1942
	LD	BC,0B926h	;1945
	CALL	0160Ch		;1948 
	POP	HL		;194B
	LD	DE,0B926h	;194C
	CALL	014F4h		;194F
	LD	(IX+1Eh)A	;1952
	LD	DE,0B926h	;1955
	PUSh	IX		;1958
	EX	(SP),HL		;195A
	LD	BC,020h		;195B
	ADD	HL,BC		;195E (DPB+20h),sub directory's name
	EX	DE,HL		;195F
	PUSh	DE		;1960
	LD	BC,0Bh		;1961
	LDIR			;1964
	POP	DE		;1966
	POP	HL		;1967
	CALL	01A49h		;1968
	JR	01983h		;196B
	POP	DE		;196D
	RET			;196E

;#41(_FNEXT) 
F_FNXT:	;in bank2/find.mac
	LD	(IY+2Fh),04h	;196F
	CALL	019F8h		;1973
	RET	NZ		;1976
	PUSh	IX		;1977
	EX	(SP),HL		;1979
	LD	DE,020h		;197A
	ADD	HL,DE		;197D
	EX	DE,HL		;197E
	POP	HL		;197F
	CALL	01A87h		;1980
	PUSh	AF		;1983
	CALL	Z,0198Fh	;1984
	POP	AF		;1987
	CALL	01A3Bh		;1988
	EX	DE,HL		;198B		;FAT16*済 call STOR_7 (33EDh)	;in bank2/find.mac F_FNXT (patched kvar.mac add DE_EX_SECTOR workarea)
	LDIR			;198C
	RET			;198E
	
	
	PUSh	IX		;198F
	EX	(SP),HL		;1991
	PUSh	HL		;1992
	INC	HL		;1993
	LD	A,(DE)		;1994
	CP	05h		;1995
	JR	NZ,0199Bh	;1997
	LD	A,0E5h		;1999
	CALL	0173Ah		;199B
	POP	HL		;199E
	LD	BC,0Eh		;199F
	ADD	HL,BC		;19A2
	LD	A,(DE)		;19A3
	LD	(HL),A		;19A4
	EX	DE,HL		;19A5
	INC	DE		;19A6
	LD	BC,0Bh		;19A7
	ADD	HL,BC		;19AA
	LD	BC,0Ah		;19AB
	LDIR			;19AE
	POP	HL		;19B0
	RET			;19B1
	
	
	LD	(IY+2Fh),04h	;19B2 #43
	LD	B,016h		;19B6
	LD	A,(DE)		;19B8
	INC	A		;19B9
	JR	Z,019DEh	;19BA
	JR	019C2h		;19BC
	LD	(IY+2Fh),00h	;19BE #44
	XOR	A		;19C2
	LD	IX,0B9DAh	;19C3 Filename
	LD	C,08h		;19C7
	CALL	012C3h		;19C9
	RET	NZ		;19CC
	OR	C		;19CD
	LD	A,0D9h		;19CE 'Invalid pathname'
	RET	NZ		;19D0
	BIT	5,B		;19D1 archive
	LD	A,0DAh		;19D3 'Invalid filename'
	RET	NZ		;19D5
	LD	DE,0B926h	;19D6 Filename 8+3
	CALL	01A49h		;19D9
	JR	019EDh		;19DC
	PUSh	DE		;19DE
	POP	IX		;19DF
	CALL	019F8h		;19E1
	RET	NZ		;19E4
	BIT	3,(IX+1Fh)	;19E5
	LD	A,0CFh		;19E9 'Invalid attributes'
	RET	NZ		;19EB
	XOR	A		;19EC
	OR	A		;19ED
	RET	NZ		;19EE
	PUSh	HL		;19EF
	LD	HL,0Bh		;19F0
	ADD	HL,DE		;19F3
	LD	A,(HL)		;19F4
	POP	HL		;19F5
	CP	A		;19F6
	RET			;19F7

O_FIB:	;in bank2/find.mac
	PUSh	BC		;19F8
	BIT	7,(IX+1Eh)	;19F9
	JR	Z,01A06h	;19FD
	CALL	01A1Bh		;19FF
	POP	BC		;1A02
	XOR	A		;1A03
	SCF			;1A04
	RET			;1A05
	CALL	01A3Bh		;1A06
	LDIR			;1A09
	LD	C,(IX+19h)	;1A0B		;FAT16*済 call STOR_8 (33F9h)	;in bank2/find.mac O_FIB (patched kvar.mac add DE_EX_SECTOR workarea)
	LD	B,01h		;1A0E
	CALL	031A1h		;1A10
	POP	BC		;1A13
	OR	A		;1A14
	RET	NZ		;1A15
	CALL	01C70h		;1A16
	XOR	A		;1A19
	RET			;1A1A

	LD	L,(IX+1Ah)	;1A1B
	LD	H,(IX+1Bh)	;1A1E
	PUSh	HL		;1A21
	LD	DE,09h		;1A22
	ADD	HL,DE		;1A25
	PUSh	HL		;1A26
	LD	DE,016h		;1A27
	ADD	HL,DE		;1A2A
	EX	DE,HL		;1A2B
	PUSh	IX		;1A2C
	POP	HL		;1A2E
	LD	BC,0Fh		;1A2F
	ADD	HL,BC		;1A32
	LD	BC,04h		;1A33
	LDIR			;1A36
	POP	DE		;1A38
	POP	HL		;1A39
	RET			;1A3A
	LD	DE,0BBDEh	;1A3B
	PUSh	IX		;1A3E
	POP	HL		;1A40
	LD	BC,02Bh		;1A41
	ADD	HL,BC		;1A44
	LD	BC,0Ch		;1A45
	RET			;1A48
	
	BIT	2,(IY+2Fh)	;1A49
	JR	NZ,01A64h	;1A4D
	PUSh	DE		;1A4F
	LD	A,(IX+1Fh)	;1A50
	AND	010h		;1A53
	CALL	01637h		;1A55
	POP	DE		;1A58
	RET	NZ		;1A59
	BIT	7,(IX+1Fh)	;1A5A
	JR	Z,01A64h	;1A5E
	SET	3,(IY+2Fh)	;1A60
	RES	7,(IX+1Fh)	;1A64
	LD	(0BBADh),DE	;1A68
	BIT	7,(IX+1Eh)	;1A6C
	JR	NZ,01A7Ah	;1A70
	CALL	01C53h		;1A72 read current directory to BUFFER
	CALL	01BC8h		;1A75
	JR	01A99h		;1A78
	PUSh	HL		;1A7A
	LD	DE,09h		;1A7B
	ADD	HL,DE		;1A7E
	EX	DE,HL		;1A7F
	CALL	01B96h		;1A80
	POP	HL		;1A83
	JP	01B24h		;1A84
	BIT	7,(IX+1Eh)	;1A87
	LD	A,0D7h		;1A8B 'File not found'
	RET	NZ		;1A8D
	SET	1,(IY+29h)	;1A8E
	LD	(0BBADh),DE	;1A92
	CALL	01BC5h		;1A96
	JR	C,01AA7h	;1A99
	BIT	2,(IY+2Fh)	;1A9B
	LD	A,0D7h		;1A9F 'File not found'
	CALL	Z,01BFAh	;1AA1
	RET	NZ		;1AA4
	JR	01AE6h		;1AA5
	BIT	2,(IY+2Fh)	;1AA7
	JR	Z,01ABCh	;1AAB
	BIT	3,A		;1AAD
	JR	NZ,01B24h	;1AAF
	AND	016h		;1AB1
	CPL			;1AB3
	OR	(IX+1Fh)	;1AB4
	INC	A		;1AB7
	JR	NZ,01A96h	;1AB8
	JR	01B24h		;1ABA
	LD	B,A		;1ABC
	BIT	3,(IY+2Fh)	;1ABD
	JR	NZ,01AD3h	;1AC1
	BIT	2,B		;1AC3
	LD	A,0CDh		;1AC5 'System file exists'
	JR	NZ,01B25h	;1AC7
	BIT	4,B		;1AC9　DIR
	LD	A,0CCh		;1ACB 'Directory exists'
	JR	NZ,01B25h	;1ACD
	BIT	4,(IX+1Fh)	;1ACF
	LD	A,0CBh		;1AD3 'File exists'
	JR	NZ,01B25h	;1AD5
	CALL	01C70h		;1AD7
	XOR	A		;1ADA
	CALL	02346h		;1ADB
	PUSh	AF		;1ADE
	CALL	01C70h		;1ADF
	POP	AF		;1AE2
	OR	A		;1AE3
	JR	NZ,01B25h	;1AE4
	LD	DE,(0BBADh)	;1AE6
	CALL	02549h		;1AEA
	JR	NC,01AF1h	;1AED
	OR	A		;1AEF
	RET			;1AF0
	LD	BC,00h		;1AF1
	BIT	4,(IX+1Fh)	;1AF4
	JR	Z,01B04h	;1AF8
	LD	A,0FFh		;1AFA make SUB DIR
	INC	BC		;1AFC 
	CALL	02F54h		;1AFD search to free cluster
	RET	NZ		;1B00 Error  'Disk full'
	CALL	01B27h		;1B01
	LD	A,028h		;1B07
	BIT	3,(IX+1Fh)	;1B09
	JR	NZ,01B1Ch	;1B0D
	LD	A,(IX+1Fh)	;1B0F
	SET	5,A		;1B12
	BIT	4,A		;1B14
	JR	Z,01B1Ah	;1B16
	AND	0DAh		;1B18
	AND	03Fh		;1B1A
	PUSh	HL		;1B1C
	LD	HL,(0BBADh)	;1B1D
	CALL	01B69h		;1B20
	POP	HL		;1B23
	XOR	A		;1B24
	CP	A		;1B25
	RET			;1B26
	PUSh	DE		;1B27
	LD	D,B		;1B28
	LD	E,C		;1B29
	XOR	A		;1B2A
	CALL	CLU_TO_SEC	;1B2B
	PUSh	HL		;1B2E
	EX	(SP),IX		;1B2F
	PUSh	BC		;1B31
	LD	B,01h		;1B32
	CALL	BF_SECTOR	;1B34		;FAT16*済 call  BUF_2 (3146h) ;in bank2/find.mac INIT_SUB_DIR (patched with bank2/buf.mac BF_SECTOR)
	POP	BC		;1B37
	PUSh	BC		;1B38
	LD	DE,0Bh		;1B39
	ADD	HL,DE		;1B3C
	EX	DE,HL		;1B3D
	LD	HL,01B5Eh	;1B3E
	LD	A,010h		;1B41
	CALL	01B69h		;1B43
	LD	HL,020h		;1B46
	ADD	HL,DE		;1B49
	EX	DE,HL		;1B4A
	LD	HL,01B5Dh	;1B4B
	LD	BC,(DE_START)	;1B4E
	LD	A,010h		;1B52
	CALL	01B69h		;1B54
	POP	BC		;1B57
	EX	(SP),IX		;1B58
	POP	HL		;1B5A
	POP	DE		;1B5B
	RET			;1B5C
	DB	02Eh,02Eh	;1B5D
	DB	20h,20h  	;1B5F
	DB	20h,20h  	;1B61
	DB	20h,20h  	;1B63
	DB	20h,20h  	;1B65
	DB	20h,20h  	;1B67
	PUSh	DE		;1B69
	PUSh	BC		;1B6A SUB DIR (BBE8)
	LD	B,A		;1B6B
	LD	A,(HL)		;1B6C
	CP	0E5h		;1B6D
	JR	NZ,01B73h	;1B6F
	LD	A,05h		;1B71
	LD	(DE),A		;1B73
	LD	A,B		;1B74
	INC	HL		;1B75
	INC	DE		;1B76
	LD	BC,0Ah		;1B77
	LDIR			;1B7A
	CALL	02C4Ch		;1B7C
	LD	(DE),A		;1B7F
	EX	DE,HL		;1B80
	LD	B,014h		;1B81
	INC	HL		;1B83
	LD	(HL),C		;1B84
	DJNZ	01B83h		;1B85
	POP	DE		;1B87+0A	;FAT16*済 call CLST_8 (0D48h)	;in bank2/find.mac SETUP_ENT
	BIT	7,D		;1B88
	JR	Z,01B8Eh	;1B8A
	LD	D,B		;1B8C
	LD	E,B		;1B8D
	LD	BC,0FFFCh	;1B8E
	ADD	HL,BC		;1B91
	LD	(HL),D		;1B92
	DEC	HL		;1B93
	LD	(HL),E		;1B94
	POP	DE		;1B95
	PUSh	HL		;1B96
	PUSh	BC		;1B97
	PUSh	DE		;1B98
	LD	HL,016h		;1B99
	ADD	HL,DE		;1B9C
	PUSh	HL		;1B9D
	CALL	0111Bh		;1B9E
	EX	(SP),HL		;1BA1
	LD	A,C		;1BA2
	ADD	A,A		;1BA3
	ADD	A,A		;1BA4
	LD	C,03h		;1BA5
	ADD	A,A		;1BA7
	RL	B		;1BA8
	DEC	C		;1BAA
	JR	NZ,01BA7h	;1BAB
	SRL	E		;1BAD
	ADD	A,E		;1BAF
	LD	(HL),A		;1BB0
	INC	HL		;1BB1
	LD	(HL),B		;1BB2
	INC	HL		;1BB3
	POP	BC		;1BB4
	LD	A,B		;1BB5
	OR	A		;1BB6
	RRA			;1BB7
	RRA			;1BB8
	RRA			;1BB9
	RRA			;1BBA
	RL	D		;1BBB
	ADD	A,C		;1BBD
	LD	(HL),A		;1BBE
	INC	HL		;1BBF
	LD	(HL),D		;1BC0
	POP	DE		;1BC1
	POP	BC		;1BC2
	POP	HL		;1BC3
	RET			;1BC4
	CALL	01C8Ah		;1BC5
	JR	C,01BE4h	;1BC8
	PUSh	IX		;1BCA
	EX	(SP),HL		;1BCC
	LD	HL,(0BBADh)	;1BCD
	LD	A,(IX+1Fh)	;1BD0
	CALL	015D2h		;1BD3
	POP	HL		;1BD6
	RET	C		;1BD7
	JR	NZ,01BC5h	;1BD8
	BIT	0,(IY+2Fh)	;1BDA
	CALL	Z,01BE6h	;1BDE
	OR	A		;1BE1
	JR	NZ,01BC5h	;1BE2
	XOR	A		;1BE4
	RET			;1BE5

SV_ENTRY:	;in bank2/find.mac
	PUSh	HL		;1BE6
	PUSh	DE		;1BE7
	PUSh	BC		;1BE8
	CALL	01A3Bh		;1BE9 transfer from BBDEh-BBE9h to BBD2h-BBDDh
	EX	DE,HL		;1BEC
	LD	DE,0BBD2h	;1BED		;FAT16*済 call STOR_1 (33A8h)	;in bank2/find.mac SV_ENTRY (patched kvar.mac add DE_EX_SECTOR workarea)
	LDIR			;1BF0
	SET	0,(IY+2Fh)	;1BF2
	POP	BC		;1BF6
	POP	DE		;1BF7
	POP	HL		;1BF8
	RET			;1BF9

GT_ENTRY:	;in bank2/find.mac
	PUSh	BC		;1BFA
	BIT	0,(IY+2Fh)	;1BFB
	JR	Z,01C0Dh	;1BFF
	PUSh	HL		;1C01
	CALL	01A3Bh		;1C02
	LD	HL,0BBD2h	;1C05		;FAT16*済 call STOR_2 (33B4h)	;in bank2/find.mac GT_ENTRY (patched kvar.mac add DE_EX_SECTOR workarea)
	LDIR			;1C08
	POP	HL		;1C0A  
	JR	01C2Dh		;1C0B
	LD	DE,(0BBE6h)	;1C0D		;FAT16*済 call CLST_3 (0D6Ch)	;in bank2/find.mac GT_ENTRY
	BIT	7,D		;1C11		;FAT16*済 00,00,00	;in bank2/find.mac GT_ENTRY
	LD	A,0D5h		;1C13
	JR	NZ,01C2Eh	;1C15
	LD	A,0FFh		;1C17 SUB DIR
	LD	BC,01h		;1C19 
	CALL	02F54h		;1C1C
	JR	NZ,01C2Eh	;1C1F error
	PUSh	BC		;1C21
	CALL	02DE7h		;1C22 write FAT 
	POP	BC		;1C25
	LD	(0BBE4h),BC	;1C26
	CALL	01C8Ah		;1C2A
	XOR	A		;1C2D
	POP	BC		;1C2E
	RET			;1C2F
	PUSh	HL		;1C30
	LD	HL,01Ah		;1C31
	ADD	HL,DE		;1C34
	LD	E,(HL)		;1C35
	INC	HL		;1C36
	LD	D,(HL)		;1C37
	POP	HL		;1C38
	LD	A,D		;1C39
	OR	E		;1C3A
	JR	NZ,01C40h	;1C3B
	LD	DE,0FFFFh	;1C3D root DIR
	LD	(DE_START),DE	;1C40 current DIR
	PUSh	HL		;1C44
	LD	HL,(0BBABh)	;1C45
	XOR	A		;1C48
	SBC	HL,DE		;1C49
	JR	NZ,01C51h	;1C4B
	SET	1,(IY+2Fh)	;1C4D
	POP	HL		;1C51
	RET			;1C52
	
				;	DE_STARTはカレントディレクトリのクラスタ
	LD	DE,(DE_START)	;1C53 		;FAT16*済 call CLST_4 (0D42h)	;in bank2/dir.mac DI_FIRST
	BIT	7,D		;1C57		;FAT16*済 00,00,00	;in bank2/dir.mac DI_FIRST
	JR	Z,01CBAh	;1C59 Current dir is SUB
	PUSh	BC		;1C5B
	PUSh	HL		;1C5C
	LD	BC,0Fh		;1C5D
	ADD	HL,BC		;1C60
	LD	C,(HL)		;1C61
	INC	HL		;1C62
	LD	A,(HL)		;1C63 number of sector for DIR
	INC	HL		;1C64
	INC	HL		;1C65
	LD	E,(HL)		;1C66 DE=top of DIR
	INC	HL		;1C67
	LD	D,(HL)		;1C68
	POP	HL		;1C69
	LD	B,0FFh		;1C6A
	PUSh	BC		;1C6C
	PUSh	BC		;1C6D
	JR	01CD4h		;1C6E
;--------------
	PUSh	HL		;1C70
	LD	DE,08h		;1C71
	ADD	HL,DE		;1C74
	BIT	7,(HL)		;1C75
	EX	DE,HL		;1C77
	INC	DE		;1C78
	POP	HL		;1C79
	JP	NZ,01D1Fh	;1C7A
	SET	1,(IY+29h)	;1C7D
	INC	(IY+60h)	;1C81
	PUSh	BC		;1C84
	LD	BC,00h		;1C85
	JR	01C8Eh		;1C88
	PUSh	BC		;1C8A
	LD	BC,020h		;1C8B
	PUSh	HL		;1C8E
	EX	DE,HL		;1C8F
	ADD	HL,BC		;1C90
	LD	DE,(0BBE2h)	;1C91
	LD	A,(0BBE0h)	;1C95
	DEC	A		;1C98
	JR	Z,01CA4h	;1C99 last file at sector of DIR
	BIT	1,(IY+29h)	;1C9B
	JP	Z,01D19h	;1C9F
	JR	01CF9h		;1CA2 read DIR
;------------------
	POP	HL		;1CA4
	INC	DE		;1CA5 		;FAT16*済 call SUB_16 (30D2h)	;in bank2/dir.mac DI_NEXT
	LD	A,(0BBE1h)	;1CA6 		;FAT16*済 nop	;in bank2/dir.mac DI_NEXT
	DEC	A		;1CA9
	JR	NZ,01CE1h	;1CAA 
	CP	(IY+5Eh)	;1CAC
	JR	NZ,01CE3h	;1CAF
	LD	DE,(0BBE4h)	;1CB1		;FAT16*済 call CLST_9 (0D5Eh)	;in bank2/dir.mac DI_NEXT
	BIT	7,D		;1CB5		;FAT16*済 00,00,00	;in bank2/dir.mac DI_NEXT
	SCF			;1CB7
	POP	BC		;1CB8
	RET	NZ		;1CB9 ROOT DIR
	PUSh	BC		;1CBA
	PUSh	DE		;1CBB cluster of current dir
	CALL	02D9Ah		;1CBC read FAT     ;FAT16*済 call FATRED(0D95h)	;in bank2/dir.mac SUB_DI_FIRST (patched bank2/fat.mac FAT_LOOKUP)
	LD	B,D		;1CBF next cluster
	LD	C,E		;1CC0
	POP	DE		;1CC1
	PUSh	DE		;1CC2
	XOR	A		;1CC3
	CALL	CLU_TO_SEC	;1CC4 calculation of sector ;FAT16*済 GETSUB(30C8h)	;in bank2/dir.mac SUB_DI_FIRST
	PUSh	DE		;1CC7
	EX	DE,HL		;1CC8
	LD	HL,0Ah		;1CC9
	ADD	HL,DE		;1CCC
	LD	A,(HL)		;1CCD cluster mask
	INC	A		;1CCE sectors per cluster
	EX	DE,HL		;1CCF
	POP	DE		;1CD0
	PUSh	BC		;1CD1
	LD	C,00h		;1CD2
	LD	(IY+5Eh),C	;1CD4
	POP	BC		;1CD7
	LD	(0BBE4h),BC	;1CD8 next cluster
	POP	BC		;1CDC
	LD	(0BBE6h),BC	;1CDD cluster of directory
	LD	B,010h		;1CE1 directory entry per sector 
	OR	A		;1CE3
	JR	NZ,01CEDh	;1CE4
	LD	B,(IY+5Eh)	;1CE6
	LD	(0BBDEh),A	;1CE9
	INC	A		;1CEC
	LD	(0BBE1h),A	;1CED
	LD	(0BBE2h),DE	;1CF0 sector number of directory
	LD	(IY+5Fh),B	;1CF4
	LD	A,B		;1CF7
	PUSh	HL		;1CF8
	EX	(SP),IX		;1CF9
	PUSh	AF		;1CFB
	LD	B,01h		;1CFC
	CALL	BF_SECTOR	;1CFE read 	;FAT16*済 call BUF_4(3136h)	;in bank2/dir.mac ROOT_DI_FIRST (patched with bank2/buf.mac BF_SECTOR)
	POP	BC		;1D01
	EX	(SP),IX		;1D02
	LD	DE,0FFEBh	;1D04
	ADD	HL,DE		;1D07 
	LD	A,(0BBDFh)	;1D08
	INC	A		;1D0B
	SUB	B		;1D0C
	LD	DE,020h		;1D0D
	ADD	HL,DE		;1D10 search directory from BUFFER
	DEC	A		;1D11
	JR	NZ,01D10h	;1D12
	LD	A,B		;1D14
	RES	1,(IY+29h)	;1D15
	LD	(0BBE0h),A	;1D19 
	EX	DE,HL		;1D1C
	POP	HL		;1D1D
	POP	BC		;1D1E
	LD	A,(DE)		;1D1F
	OR	A		;1D20
	RET			;1D21
	EX	AF,AF'		;1D22
	CALL	02136h		;1D23
	RET	NC		;1D26
	RET	Z		;1D27
	BIT	7,(IX+1Eh)	;1D28
	JR	Z,01D39h	;1D2C
	LD	L,(IX+1Ch)	;1D2E
	LD	H,(IX+1Dh)	;1D31
	INC	HL		;1D34
	INC	HL		;1D35
	INC	HL		;1D36
	EX	AF,AF'		;1D37
	JP	(HL)		;1D38
	EX	AF,AF'		;1D39
	LD	DE,0BBC5h	;1D3A
	LD	(DE),A		;1D3D
	LD	BC,01h		;1D3E
	LD	A,0FFh		;1D41
	CALL	02767h		;1D43
	RET			;1D46
	CALL	02136h		;1D47
	RET	NC		;1D4A
	RET	Z		;1D4B
	BIT	7,(IX+1Eh)	;1D4C
	JR	Z,01D6Dh	;1D50
	RES	6,(IX+1Eh)	;1D52
	LD	L,(IX+1Ch)	;1D56
	LD	H,(IX+1Dh)	;1D59
	PUSh	BC		;1D5C
	CALL	01D38h		;1D5D
	POP	DE		;1D60
	CP	0B9h		;1D61
	JR	Z,01D6Bh	;1D63
	BIT	5,E		;1D65
	RET	NZ		;1D67
	CP	0C7h		;1D68
	RET	NZ		;1D6A
	XOR	A		;1D6B
	RET			;1D6C
	PUSh	BC		;1D6D
	LD	DE,0BBC5h	;1D6E
	LD	BC,01h		;1D71
	LD	A,0FFh		;1D74
	CALL	0276Bh		;1D76
	LD	HL,0BBC5h	;1D79
	LD	B,(HL)		;1D7C
	POP	DE		;1D7D
	OR	A		;1D7E
	RET	NZ		;1D7F
	OR	E		;1D80
	RET	Z		;1D81
	LD	A,B		;1D82
	CP	01Ah		;1D83
	LD	A,0C7h		;1D85
	RET	Z		;1D87
	XOR	A		;1D88
	RET			;1D89
	
;#44(_CREATE) 
	EX	AF,AF'		;1D8A
	BIT	3,B		;1D8B
	LD	A,0CFh		;1D8D 'Invalid attributes'
	RET	NZ		;1D8F
	CALL	019BEh		;1D90
	RET	NZ		;1D93
	LD	B,0FFh		;1D94
	BIT	4,A		;1D96
	JR	NZ,01DDCh	;1D98
	JR	01DA6h		;1D9A
	
;#43(_OPEN) 
	EX	AF,AF'		;1D9C
	CALL	019B2h		;1D9D
	RET	NZ		;1DA0
	BIT	4,A		;1DA1
	LD	A,0CCh		;1DA3 'Directory exists'
	RET	NZ		;1DA5
	PUSh	HL		;1DA6
	CALL	02121h		;1DA7
	JR	NZ,01DDFh	;1DAA
	PUSh	HL		;1DAC
	CALL	021A3h		;1DAD (BBF2h) rewrite
	JR	NZ,01DDEh	;1DB0
	EX	DE,HL		;1DB2
	EX	(SP),HL		;1DB3
	LD	(HL),E		;1DB4 link
	INC	HL		;1DB5
	LD	(HL),D		;1DB6
	PUSh	BC		;1DB7
	PUSh	DE		;1DB8
	EX	(SP),IX		;1DB9
	POP	HL		;1DBB
	LD	BC,020h		;1DBC
	LDIR			;1DBF 
	POP	BC		;1DC1
	POP	DE		;1DC2
	LD	(IX+1Fh),06h	;1DC3 File handle+1Fh
	XOR	A		;1DC7
	LD	(IX+2Dh)A	;1DC8 Pointer 
	LD	(IX+2Eh)A	;1DCB
	LD	(IX+2Fh)A	;1DCE
	LD	(IX+30h)A	;1DD1
	POP	HL		;1DD4
	EX	AF,AF'		;1DD5
	CALL	02284h		;1DD6
	CALL	020E8h		;1DD9
	XOR	A		;1DDC
	RET			;1DDD
	POP	HL		;1DDE
	POP	HL		;1DDF
	RET			;1DE0
	
;#45(_CLOSE) 
	CALL	02136h		;1DE1 Is handle number right?
	RET	NC		;1DE4 ERROR C3h 'Invalid file handle'
	RET	Z		;1DE5 ERROR C2h 'File handle not open'
	CALL	022CDh		;1DE6
	CALL	020E8h		;1DE9
	JR	01DF3h		;1DEC
	
;#46(_ENSURE) 
	CALL	02136h		;1DEE
	RET	NC		;1DF1
	RET	Z		;1DF2
	CALL	0223Ah		;1DF3 Check Attributes
	LD	A,(IX+19h)	;1DF6
	CALL	02C55h		;1DF9 flush to disk buffer
	XOR	A		;1DFC
	RET			;1DFD
	
;#47(_DUP) 
	CALL	02136h		;1DFE
	RET	NC		;1E01
	RET	Z		;1E02
	CALL	02121h		;1E03
	RET	NZ		;1E06
	CALL	0215Ch		;1E07
	RET	NZ		;1E0A
	LD	(HL),E		;1E0B
	INC	HL		;1E0C
	LD	(HL),D		;1E0D
	CALL	020E8h		;1E0E
	XOR	A		;1E11
	RET			;1E12

;#48(_READ)

	PUSh	DE		;1E13
	PUSh	HL		;1E14
	CALL	02136h		;1E15 Get File handle 
	POP	BC		;1E18
	POP	DE		;1E19
	RET	NC		;1E1A ERROR C3h 'Invalid file handle'
	RET	Z		;1E1B ERROR C2h 'File handle not open'
	XOR	A		;1E1C
	CALL	0276Bh		;1E1D File access 
	PUSh	BC		;1E20
	POP	HL		;1E21
	RET			;1E22
	
;#49(_WRITE) 
	PUSh	DE		;1E23
	PUSh	HL		;1E24
	CALL	02136h		;1E25 Get File handle address
	POP	BC		;1E28
	POP	DE		;1E29
	RET	NC		;1E2A ERROR C3h 'Invalid file handle'
	RET	Z		;1E2B ERROR C2h 'File handle not open'
	XOR	A		;1E2C
	CALL	02767h		;1E2D File access 
	PUSh	BC		;1E30
	POP	HL		;1E31
	RET			;1E32
	
;#4A(_SEEK) 
	EX	AF,AF'		;1E33
	PUSh	DE		;1E34
	PUSh	HL		;1E35
	CALL	02136h		;1E36
	POP	DE		;1E39
	POP	HL		;1E3A
	RET	NC		;1E3B ERROR C3h
	RET	Z		;1E3C ERROR C2h
	EX	AF,AF'		;1E3D
	PUSh	HL		;1E3E
	LD	HL,00h		;1E3F
	LD	BC,00h		;1E42
	OR	A		;1E45
	JR	Z,01E63h	;1E46
	LD	L,(IX+2Dh)	;1E48 pointer
	LD	H,(IX+2Eh)	;1E4B
	LD	C,(IX+2Fh)	;1E4E
	LD	B,(IX+30h)	;1E51
	DEC	A		;1E54
	JR	Z,01E63h	;1E55
	LD	L,(IX+15h)	;1E57 file size
	LD	H,(IX+16h)	;1E5A
	LD	C,(IX+17h)	;1E5D
	LD	B,(IX+18h)	;1E60
	ADD	HL,DE		;1E63
	EX	(SP),HL		;1E64
	POP	DE		;1E65
	ADC	HL,BC		;1E66
	EX	DE,HL		;1E68
	LD	(IX+2Dh),L	;1E69
	LD	(IX+2Eh),H	;1E6C
	LD	(IX+2Fh),E	;1E6F
	LD	(IX+30h),D	;1E72
	XOR	A		;1E75
	RET			;1E76
	
;#4B(_IOCTL) 
	EX	AF,AF'		;1E77
	PUSh	DE		;1E78
	CALL	02136h		;1E79 Is handle number right?
	POP	DE		;1E7C
	RET	NC		;1E7D error code C3
	RET	Z		;1E7E error code C2
	EX	AF,AF'		;1E7F
	LD	L,(IX+1Ch)	;1E80
	LD	H,(IX+1Dh)	;1E83
	OR	A		;1E86
	JR	Z,01EAAh	;1E87
	DEC	A		;1E89
	JR	Z,01E98h	;1E8A
	DEC	A		;1E8C
	JR	Z,01ECBh	;1E8D
	DEC	A		;1E8F
	JR	Z,01EE1h	;1E90
	DEC	A		;1E92
	JR	Z,01EFBh	;1E93
	LD	A,0B8h		;1E95 
	RET			;1E97 ERROR
	BIT	7,(IX+1Eh)	;1E98
	JR	Z,01E95h	;1E9C
	LD	A,(IX+1Eh)	;1E9E
	XOR	E		;1EA1
	AND	0DFh		;1EA2
	XOR	E		;1EA4
	RES	6,A		;1EA5
	LD	(IX+1Eh)A	;1EA7
	LD	E,(IX+1Eh)	;1EAA
	XOR	A		;1EAD
	LD	D,A		;1EAE
	BIT	7,E		;1EAF
	RET	NZ		;1EB1
	LD	E,(IX+19h)	;1EB2
	DEC	E		;1EB5
	LD	B,04h		;1EB6
	LD	A,(IX+30h)	;1EB8
	CP	(IX+18h)	;1EBB
	JR	C,01EC8h	;1EBE
	JR	NZ,01EC6h	;1EC0
	DEC	IX		;1EC2
	DJNZ	01EB8h		;1EC4
	SET	6,E		;1EC6
	XOR	A		;1EC8
	LD	D,A		;1EC9
	RET			;1ECA
	BIT	1,(IX+31h)	;1ECB
	JR	NZ,01EF0h	;1ECF
	BIT	7,(IX+1Eh)	;1ED1
	JR	NZ,01EF3h	;1ED5
	CALL	01EB2h		;1ED7
	BIT	6,E		;1EDA
	JR	NZ,01EF0h	;1EDC
	LD	E,00h		;1EDE
	RET			;1EE0
	BIT	0,(IX+31h)	;1EE1
	JR	NZ,01EF0h	;1EE5
	INC	HL		;1EE7
	INC	HL		;1EE8
	INC	HL		;1EE9
	BIT	7,(IX+1Eh)	;1EEA
	JR	NZ,01EF3h	;1EEE
	LD	E,0FFh		;1EF0
	RET			;1EF2
	LD	BC,06h		;1EF3
	ADD	HL,BC		;1EF6
	LD	C,(IX+1Eh)	;1EF7
	JP	(HL)		;1EFA
	BIT	7,(IX+1Eh)	;1EFB
	JR	NZ,01F05h	;1EFF
	XOR	A		;1F01
	LD	E,A		;1F02
	LD	D,A		;1F03
	RET			;1F04
	LD	BC,0Ch		;1F05
	ADD	HL,BC		;1F08
	JP	(HL)		;1F09
	
;#4D(_DELETE) 
	CALL	019B2h		;1F0A
	RET	NZ		;1F0D
	LD	A,0FFh		;1F0E
	CALL	02346h		;1F10
	RET			;1F13

;#52(_HDELETE) 
	CALL	02136h		;1F14
	RET	NC		;1F17 ERROR C3h
	RET	Z		;1F18 ERROR C2h
	CALL	022CDh		;1F19
	CALL	020E8h		;1F1C
	CALL	02240h		;1F1F
	SET	3,(IX+31h)	;1F22
	OR	A		;1F26
	RET	NZ		;1F27
	CALL	01C70h		;1F28
	LD	A,0FFh		;1F2B
	CALL	02346h		;1F2D
	RET			;1F30
	
;#4E(_RENAME) 
	PUSh	HL		;1F31
	CALL	019B2h		;1F32
	POP	BC		;1F35
	RET	NZ		;1F36
	CALL	023ACh		;1F37
	RET			;1F3A
;#53(_HRENAME)
	PUSh	HL		;1F3B
	CALL	02136h		;1F3C
	POP	BC		;1F3F
	RET	NC		;1F40
	RET	Z		;1F41
	PUSh	BC		;1F42
	CALL	02240h		;1F43
	POP	BC		;1F46
	OR	A		;1F47
	RET	NZ		;1F48
	CALL	01C70h		;1F49
	CALL	023ACh		;1F4C
	OR	A		;1F4F
	RET	NZ		;1F50
	CALL	0227Eh		;1F51
	XOR	A		;1F54
	RET			;1F55
;#4F(_MOVE)
	PUSh	HL		;1F56
	CALL	019B2h		;1F57
	POP	BC		;1F5A
	RET	NZ		;1F5B
	CALL	02411h		;1F5C
	RET			;1F5F
;#54(_HMOVE)
	PUSh	HL		;1F60
	CALL	02136h		;1F61
	POP	BC		;1F64
	RET	NC		;1F65
	RET	Z		;1F66
	PUSh	BC		;1F67
	CALL	02240h		;1F68
	POP	BC		;1F6B
	OR	A		;1F6C
	RET	NZ		;1F6D
	CALL	01C70h		;1F6E
	CALL	02411h		;1F71
	OR	A		;1F74
	RET	NZ		;1F75
	CALL	0227Eh		;1F76
	XOR	A		;1F79
	RET			;1F7A
;#50(_ATTR)
	EX	AF,AF'		;1F7B
	PUSh	HL		;1F7C
	CALL	019B2h		;1F7D
	POP	BC		;1F80
	RET	NZ		;1F81
	EX	AF,AF'		;1F82
	OR	A		;1F83
	CALL	NZ,024F3h	;1F84
	OR	A		;1F87
	RET	NZ		;1F88
	CALL	01C70h		;1F89
	LD	HL,0Bh		;1F8C
	ADD	HL,DE		;1F8F
	LD	L,(HL)		;1F90
	XOR	A		;1F91
	RET			;1F92
;#55(_HATTR)
	EX	AF,AF'		;1F93
	LD	C,L		;1F94
	CALL	02136h		;1F95
	RET	NC		;1F98
	RET	Z		;1F99
	EX	AF,AF'		;1F9A
	OR	A		;1F9B
	JR	Z,01FAFh	;1F9C
	PUSh	BC		;1F9E
	CALL	02240h		;1F9F
	POP	BC		;1FA2
	OR	A		;1FA3
	RET	NZ		;1FA4
	CALL	01C70h		;1FA5
	CALL	024F3h		;1FA8
	RET	NZ		;1FAB
	CALL	0227Eh		;1FAC
	LD	L,(IX+0Eh)	;1FAF
	XOR	A		;1FB2
	RET			;1FB3
;#51(_FTIME)
	EX	AF,AF'		;1FB4
	PUSh	IX		;1FB5
	PUSh	HL		;1FB7
	CALL	019B2h		;1FB8
	POP	BC		;1FBB
	POP	DE		;1FBC
	RET	NZ		;1FBD
	EX	AF,AF'		;1FBE
	OR	A		;1FBF
	CALL	NZ,02518h	;1FC0
	OR	A		;1FC3
	RET	NZ		;1FC4
	CALL	01C70h		;1FC5
	LD	HL,016h		;1FC8
	ADD	HL,DE		;1FCB
	LD	E,(HL)		;1FCC
	INC	HL		;1FCD
	LD	D,(HL)		;1FCE
	INC	HL		;1FCF
	LD	A,(HL)		;1FD0
	INC	HL		;1FD1
	LD	H,(HL)		;1FD2
	LD	L,A		;1FD3
	XOR	A		;1FD4
	RET			;1FD5
;#56(_HFTIME)
	EX	AF,AF'		;1FD6
	PUSh	IX		;1FD7
	PUSh	HL		;1FD9
	CALL	02136h		;1FDA
	POP	BC		;1FDD
	POP	DE		;1FDE
	RET	NC		;1FDF
	RET	Z		;1FE0
	EX	AF,AF'		;1FE1
	OR	A		;1FE2
	JR	Z,01FF5h	;1FE3
	PUSh	BC		;1FE5
	PUSh	DE		;1FE6
	CALL	02240h		;1FE7
	POP	DE		;1FEA
	POP	BC		;1FEB
	OR	A		;1FEC
	RET	NZ		;1FED
	CALL	02518h		;1FEE
	RET	NZ		;1FF1
	CALL	0227Eh		;1FF2
	LD	E,(IX+0Fh)	;1FF5
	LD	D,(IX+10h)	;1FF8
	LD	L,(IX+11h)	;1FFB
	LD	H,(IX+12h)	;1FFE
	XOR	A		;2001
	RET			;2002
;#4C(_HTEST)
	PUSh	BC		;2003
	CALL	019B2h		;2004
	POP	BC		;2007
	RET	NZ		;2008
	BIT	7,(IX+1Eh)	;2009
	JR	NZ,0201Ch	;200D
	PUSh	HL		;200F
	CALL	02136h		;2010
	POP	HL		;2013
	RET	NC		;2014
	RET	Z		;2015
	LD	B,0FFh		;2016
	CALL	02308h		;2018
	RET	Z		;201B
	XOR	A		;201C
	LD	B,A		;201D
	RET			;201E
	
;#60(_FORK)
	LD	HL,040h		;201F
	ADD	HL,HL		;2022
	CALL	01CBh		;2023 80hbytesメモリ確保
	RET	NZ		;2026
	LD	DE,(0BBF0h)	;2027 Memory address
	LD	(0BBF0h),HL	;202B
	LD	(HL),E		;202E
	INC	HL		;202F
	LD	(HL),D		;2030
	LD	A,D		;2031
	OR	E		;2032
	JR	Z,02059h	;2033
	INC	DE		;2035
	LD	B,03Fh		;2036
	PUSh	BC		;2038
	INC	HL		;2039
	INC	DE		;203A
	LD	A,(DE)		;203B
	LD	C,A		;203C
	INC	DE		;203D
	LD	A,(DE)		;203E
	LD	B,A		;203F
	OR	C		;2040
	JR	Z,02055h	;2041
	PUSh	BC		;2043
	POP	IX		;2044
	BIT	2,(IX+31h)	;2046
	JR	Z,02055h	;204A
	CALL	0215Ch		;204C
	JR	NZ,02055h	;204F
	LD	(HL),C		;2051
	INC	HL		;2052
	LD	(HL),B		;2053
	DEC	HL		;2054
	INC	HL		;2055
	POP	BC		;2056
	DJNZ	02038h		;2057
	LD	A,(0BBFEh)	;2059
	LD	B,A		;205C
	INC	A		;205D
	LD	(0BBFEh),A	;205E
	CALL	020E8h		;2061
	XOR	A		;2064
	RET			;2065
;#61(_JOIN)
	LD	A,B		;2066
	OR	A		;2067
	JR	Z,02071h	;2068
	LD	HL,0BBFEh	;206A
	CP	(HL)		;206D
	LD	A,0C5h		;206E
	RET	NC		;2070
	CALL	01290h		;2071
	LD	HL,(0BBF0h)	;2074
	PUSh	HL		;2077
	LD	A,H		;2078
	OR	L		;2079
	JR	Z,020A9h	;207A
	PUSh	BC		;207C
	PUSh	HL		;207D
	CALL	022Bh		;207E
	LD	B,0FFh		;2081
	INC	B		;2083
	CALL	02136h		;2084
	JR	NC,0208Eh	;2087
	CALL	NZ,0216Bh	;2089
	JR	02083h		;208C
	POP	HL		;208E
	POP	BC		;208F
	LD	E,(HL)		;2090
	INC	HL		;2091
	LD	D,(HL)		;2092
	EX	DE,HL		;2093
	LD	(0BBF0h),HL	;2094
	LD	A,(0BBFEh)	;2097
	DEC	A		;209A
	LD	(0BBFEh),A	;209B
	INC	B		;209E
	DEC	B		;209F
	JR	Z,02078h	;20A0
	CP	B		;20A2
	JR	NZ,02078h	;20A3
	XOR	A		;20A5
	LD	(DE),A		;20A6
	DEC	DE		;20A7
	LD	(DE),A		;20A8
	LD	A,B		;20A9
	LD	(0BBFEh),A	;20AA
	POP	HL		;20AD
	LD	A,H		;20AE
	OR	L		;20AF
	JR	Z,020CCh	;20B0
	LD	E,(HL)		;20B2
	INC	HL		;20B3
	LD	D,(HL)		;20B4
	PUSh	DE		;20B5
	LD	B,03Fh		;20B6
	INC	HL		;20B8
	LD	E,(HL)		;20B9
	INC	HL		;20BA
	LD	D,(HL)		;20BB
	PUSh	DE		;20BC
	POP	IX		;20BD
	LD	A,D		;20BF
	OR	E		;20C0
	PUSh	HL		;20C1
	PUSh	BC		;20C2
	CALL	NZ,0223Ah	;20C3
	POP	BC		;20C6
	POP	HL		;20C7
	DJNZ	020B8h		;20C8
	JR	020ADh		;20CA
	LD	A,0FFh		;20CC all of drives
	CALL	02C5Eh		;20CE flush
	LD	A,(0BBFEh)	;20D1
	OR	A		;20D4
	JR	NZ,020E0h	;20D5
	CALL	0201Fh		;20D7
	CALL	021BBh		;20DA
	CALL	03A0h		;20DD
	CALL	020E8h		;20E0
	CALL	09B6h		;20E3
	XOR	A		;20E6
	RET			;20E7
	PUSh	BC		;20E8
	PUSh	DE		;20E9
	PUSh	HL		;20EA
	PUSh	IX		;20EB
	LD	C,00h		;20ED
	LD	B,00h		;20EF
	CALL	02136h		;20F1
	JR	NC,02103h	;20F4
	JR	Z,02103h	;20F6
	LD	A,(IX+1Eh)	;20F8
	AND	081h		;20FB
	CP	081h		;20FD
	JR	Z,02103h	;20FF
	SET	0,C		;2101
	LD	B,01h		;2103
	CALL	02136h		;2105
	JR	NC,02117h	;2108
	JR	Z,02117h	;210A
	LD	A,(IX+1Eh)	;210C
	AND	082h		;210F
	CP	082h		;2111
	JR	Z,02117h	;2113
	SET	1,C		;2115
	LD	A,C		;2117
	LD	(0BB89h),A	;2118
	POP	IX		;211B
	POP	HL		;211D
	POP	DE		;211E
	POP	BC		;211F
	RET			;2120
	
	PUSh	DE		;2121
	PUSh	IX		;2122
	LD	B,0FFh		;2124
	INC	B		;2126 count file handle
	CALL	02136h		;2127
	LD	A,0C4h		;212A 
	JR	NC,02131h	;212C error
	JR	NZ,02126h	;212E
	XOR	A		;2130
	POP	IX		;2131
	POP	DE		;2133
	OR	A		;2134
	RET			;2135

;get FIB
	LD	A,B		;2136 
	CP	03Fh		;2137 limitation of file handle 
	JR	NC,02158h	;2139 Error 
	LD	HL,(0BBF0h)	;213B
	LD	A,H		;213E
	OR	L		;213F
	JR	Z,02158h	;2140 Error (BBF0h)=0000
	PUSh	BC		;2142
	INC	HL		;2143
	INC	HL		;2144
	LD	C,B		;2145 get pointer of file handle
	LD	B,00h		;2146
	ADD	HL,BC		;2148
	ADD	HL,BC		;2149
	LD	E,(HL)		;214A
	INC	HL		;214B
	LD	D,(HL)		;214C
	DEC	HL		;214D
	POP	BC		;214E
	PUSh	DE		;214F
	POP	IX		;2150
	LD	A,D		;2152
	OR	E		;2153
	SCF			;2154
	LD	A,0C2h		;2155 'File handle not open'
	RET			;2157 Error
	LD	A,0C3h		;2158 'Invalid file handle'
	OR	A		;215A
	RET			;215B Error
	
	LD	A,(IX+FFh)	;215C
	INC	A		;215F
	JR	Z,02167h	;2160
	LD	(IX+FFh)A	;2162
	XOR	A		;2165
	RET			;2166
	LD	A,0C4h		;2167
	OR	A		;2169
	RET			;216A
	LD	A,(IX+FFh)	;216B
	DEC	A		;216E
	LD	(IX+FFh)A	;216F
	RET	NZ		;2172
	PUSh	DE		;2173
	PUSh	BC		;2174
	PUSh	IX		;2175
	EX	(SP),HL		;2177
	LD	BC,0FFFDh	;2178
	ADD	HL,BC		;217B
	EX	DE,HL		;217C
	LD	HL,0BBF2h	;217D
	CALL	02188h		;2180
	POP	HL		;2183
	POP	BC		;2184
	POP	DE		;2185
	XOR	A		;2186
	RET			;2187
	EX	DE,HL		;2188
	LD	B,H		;2189
	LD	C,L		;218A
	CALL	022Bh		;218B
	EX	DE,HL		;218E
	LD	E,(HL)		;218F
	INC	HL		;2190
	LD	D,(HL)		;2191
	LD	A,D		;2192
	OR	E		;2193
	RET	Z		;2194
	EX	DE,HL		;2195
	SBC	HL,BC		;2196
	ADD	HL,BC		;2198
	JR	NZ,0218Fh	;2199
	DEC	DE		;219B
	LD	A,(HL)		;219C
	LD	(DE),A		;219D
	INC	HL		;219E
	INC	DE		;219F
	LD	A,(HL)		;21A0
	LD	(DE),A		;21A1
	RET			;21A2
	
	LD	HL,036h		;21A3		;FAT16*済 ld  hl,38h	;in bank2/handles.mac NEW_FAB (patched kvar.mac add FAB_EX_DESC data)
	CALL	01CBh		;21A6 File handle
	RET	NZ		;21A9
	PUSh	DE		;21AA
	LD	DE,(0BBF2h)	;21AB
	LD	(0BBF2h),HL	;21AF
	LD	(HL),E		;21B2
	INC	HL		;21B3
	LD	(HL),D		;21B4
	INC	HL		;21B5
	LD	(HL),01h	;21B6
	INC	HL		;21B8
	POP	DE		;21B9
	RET			;21BA
	LD	B,05h		;21BB
	LD	HL,021DBh	;21BD
	PUSh	BC		;21C0
	LD	E,(HL)		;21C1
	INC	HL		;21C2
	LD	D,(HL)		;21C3
	INC	HL		;21C4
	LD	B,(HL)		;21C5
	INC	HL		;21C6
	PUSh	HL		;21C7
	PUSh	BC		;21C8
	LD	A,B		;21C9
	CALL	01D9Ch		;21CA
	POP	BC		;21CD
	OR	A		;21CE
	LD	DE,021F6h	;21CF
	LD	A,B		;21D2
	CALL	NZ,01D9Ch	;21D3
	POP	HL		;21D6
	POP	BC		;21D7
	DJNZ	021C0h		;21D8
	RET			;21DA
	JP	PE,0521h	;21DB
	JP	PE,0621h	;21DE
	JP	PE,0421h	;21E1
	XOR	021h		;21E4
	INC	B		;21E6
	JP	P,0621h		;21E7
	LD	B,E		;21EA
	LD	C,A		;21EB
	LD	C,(HL)		;21EC
	NOP			;21ED
	LD	B,C		;21EE
	LD	D,L		;21EF
	LD	E,B		;21F0
	NOP			;21F1
	LD	D,B		;21F2
	LD	D,D		;21F3
	LD	C,(HL)		;21F4
	NOP			;21F5
	LD	C,(HL)		;21F6
	LD	D,L		;21F7
	LD	C,H		;21F8
	NOP			;21F9
	BIT	7,(IX+1Eh)	;21FA
	JR	Z,02205h	;21FE
	CALL	01A1Bh		;2200
	XOR	A		;2203
	RET			;2204
	LD	C,(IX+19h)	;2205
	LD	B,01h		;2208
	CALL	031A1h		;220A
	OR	A		;220D
	RET	NZ		;220E
	LD	E,(IX+25h)	;220F
	LD	D,(IX+26h)	;2212
	LD	(DE_START),DE	;2215
	PUSh	IX		;2219
	EX	(SP),HL		;221B
	LD	BC,01h		;221C
	ADD	HL,BC		;221F
	LD	(0BB9Eh),HL	;2220
	POP	HL		;2223
	LD	DE,0B926h	;2224
	CALL	013FFh		;2227
	OR	A		;222A
	LD	A,0DAh		;222B
	RET	NZ		;222D
	LD	DE,0B926h	;222E
	LD	(IY+2Fh),04h	;2231
	CALL	01A49h		;2235
	OR	A		;2238
	RET			;2239
	XOR	A		;223A
	BIT	7,(IX+31h)	;223B
	RET	Z		;223F
	BIT	3,(IX+31h)	;2240
	LD	A,0BAh		;2244
	RET	NZ		;2246
	CALL	021FAh		;2247
	RET	NZ		;224A
	BIT	7,(IX+1Eh)	;224B
	RET	NZ		;224F
	BIT	7,(IX+31h)	;2250
	RET	Z		;2254
	CALL	01B96h		;2255
	PUSh	IX		;2258
	EX	(SP),HL		;225A
	LD	BC,015h		;225B
	ADD	HL,BC		;225E
	EX	DE,HL		;225F
	LD	BC,0Bh		;2260
	ADD	HL,BC		;2263
	SET	5,(HL)		;2264
	LD	BC,0Fh		;2266
	ADD	HL,BC		;2269
	LD	C,(IX+27h)	;226A
	LD	B,(IX+28h)	;226D
	LD	(HL),C		;2270
	INC	HL		;2271
	LD	(HL),B		;2272
	INC	HL		;2273
	EX	DE,HL		;2274
	LD	BC,04h		;2275
	LDIR			;2278
	CALL	02C4Ch		;227A
	POP	HL		;227D
	CALL	01C70h		;227E
	LD	A,(IX+31h)	;2281

OPEN_FAB:	;in bank2/handles.mac
	PUSh	BC		;2284 #0F,#43 FILE OPEN
	EX	AF,AF'		;2285
	CALL	0198Fh		;2286
	EX	AF,AF'		;2289
	AND	07h		;228A
	LD	(IX+31h),A	;228C 
	LD	(IX+20h),L	;228F DPB
	LD	(IX+21h),H	;2292
	LD	BC,(0BBE2h)	;2295
	LD	(IX+22h),C	;2299 sector number of directory
	LD	(IX+23h),B	;229C		;FAT16*済 call STOR_3(33C0h)	;in bank2/handles.mac OPEN_FAB (patched kvar.mac add DE_EX_SECTOR workarea)
	LD	A,(0BBDFh)	;229F directory entry per sector
	SUB	(IY+60h)	;22A2 
	LD	(IX+24h),A	;22A5 
	LD	BC,(DE_START)	;22A8 cluster number of current directory
	LD	(IX+25h)C	;22AC
	LD	(IX+26h)B	;22AF
	LD	C,(IX+13h)	;22B2
	LD	B,(IX+14h)	;22B5
	LD	(IX+27h)C	;22B8 top of cluster 
	LD	(IX+28h)B	;22BB
	LD	(IX+29h)C	;22BE 
	LD	(IX+2Ah)B	;22C1
	XOR	A		;22C4
	LD	(IX+2Bh)A	;22C5 
	LD	(IX+2Ch)A	;22C8
	POP	BC		;22CB
	RET			;22CC
	CALL	0216Bh		;22CD
	XOR	A		;22D0
	LD	(HL),A		;22D1
	INC	HL		;22D2
	LD	(HL),A		;22D3
	RET			;22D4
	PUSh	DE		;22D5
	PUSh	BC		;22D6
	EX	DE,HL		;22D7
	PUSh	IX		;22D8
	POP	BC		;22DA
	LD	IX,0BBF5h	;22DB
	LD	L,(IX+0FDh)	;22DF
	LD	H,(IX+0FEh)	;22E2
	LD	A,H		;22E5
	OR	L		;22E6
	JR	Z,02300h	;22E7
	PUSh	DE		;22E9
	LD	DE,03h		;22EA
	ADD	HL,DE		;22ED
	POP	DE		;22EE
	PUSh	HL		;22EF
	POP	IX		;22F0
	OR	A		;22F2
	SBC	HL,BC		;22F3
	JR	Z,022DFh	;22F5
	EX	DE,HL		;22F7
	CALL	02308h		;22F8
	EX	DE,HL		;22FB
	JR	NZ,022DFh	;22FC
	LD	A,0CAh		;22FE
	PUSh	BC		;2300
	POP	IX		;2301
	EX	DE,HL		;2303
	POP	BC		;2304
	POP	DE		;2305
	OR	A		;2306
	RET			;2307
CMP_FAB:	;in bank2/handles.mac
	BIT	7,(IX+1Eh)	;2308
	RET	NZ		;230C
	LD	A,(0BBDFh)	;230D
	SUB	(IY+60h)	;2310
	CP	(IX+24h)	;2313
	RET	NZ		;2316
	PUSh	HL		;2317
	LD	DE,(0BBE2h)	;2318
	LD	L,(IX+22h)	;231C
	LD	H,(IX+23h)	;231F
	OR	A		;2322		;FAT16*済 call STOR_4(33CAh)	;in bank2/handles.mac CMP_FAB (patched with kvar.mac, add DE_EX_SECTOR workarea)
	SBC	HL,DE		;2323
	POP	HL		;2325
	RET	NZ		;2326
	LD	E,(IX+20h)	;2327
	LD	D,(IX+21h)	;232A
	XOR	A		;232D
	SBC	HL,DE		;232E
	ADD	HL,DE		;2330
	RET	NZ		;2331
	PUSh	HL		;2332
	PUSh	BC		;2333
	LD	HL,019h		;2334
	ADD	HL,DE		;2337
	EX	DE,HL		;2338
	PUSh	IX		;2339
	POP	HL		;233B
	LD	BC,01Ah		;233C
	ADD	HL,BC		;233F
	CALL	03307h		;2340
	POP	BC		;2343
	POP	HL		;2344
	RET			;2345
	
;Deleat
	LD	C,A		;2346 #4D
	XOR	A		;2347
	BIT	7,(IX+1Eh)	;2348
	RET	NZ		;234C
	CALL	022D5h		;234D
	RET	NZ		;2350
	PUSh	HL		;2351 top of dirctory
	LD	HL,0Bh		;2352
	ADD	HL,DE		;2355
	LD	B,(HL)		;2356 
	POP	HL		;2357
	BIT	0,B		;2358
	LD	A,0D1h		;235A 'Read only file' 
	RET	NZ		;235C Error
	BIT	4,B		;235D
	JR	Z,0237Eh	;235F File
	CALL	02549h		;2361 Sub dir
	RET	C		;2364
	CALL	01BE6h		;2365 transfer from BBDEh-BBE9h to BBD2h-BBDDh
	CALL	01C30h		;2368 (BBE8h),current dirctory
	CALL	01C53h		;236B read dirctory
	JR	Z,0237Bh	;236E
	CALL	02549h		;2370
	LD	A,0D0h		;2373 'Directory not empty'
	RET	NZ		;2375 Error
	CALL	01C8Ah		;2376 
	JR	NC,0236Eh	;2379
	CALL	01BFAh		;237B BBD2h-DChをBBDE-BBE9に戻す
	CALL	01C70h		;237E
	LD	A,C		;2381
	PUSh	HL		;2382
	LD	HL,01Ah		;2383
	ADD	HL,DE		;2386
	LD	C,(HL)		;2387
	INC	HL		;2388
	LD	B,(HL)		;2389
	POP	HL		;238A
	OR	A		;238B
	CALL	NZ,02EC2h	;238C
	LD	D,B		;238F
	LD	E,C		;2390
	LD	A,D		;2391
	OR	E		;2392
	CALL	NZ,FR_CHAIN	;2393
	CALL	01C70h		;2396
	PUSh	HL		;2399
	LD	HL,0Ch		;239A
	ADD	HL,DE		;239D
	LD	A,(DE)		;239E
	LD	(HL),A		;239F
	LD	A,0E5h		;23A0
	LD	(DE),A		;23A2
	POP	HL		;23A3
	CALL	02537h		;23A4
	CALL	NZ,034DFh	;23A7
	XOR	A		;23AA
	RET			;23AB
	
	XOR	A		;23AC
	BIT	7,(IX+1Eh)	;23AD
	RET	NZ		;23B1
	CALL	022D5h		;23B2
	RET	NZ		;23B5
	CALL	02549h		;23B6
	RET	C		;23B9
	LD	(0BB9Eh),BC	;23BA
	PUSh	DE		;23BE
	LD	DE,0B91Bh	;23BF
	CALL	013FFh		;23C2
	POP	DE		;23C5
	OR	A		;23C6
	LD	A,0DAh		;23C7
	RET	NZ		;23C9
	PUSh	HL		;23CA
	LD	HL,0B91Bh	;23CB
	LD	BC,0B91Bh	;23CE
	CALL	0160Ch		;23D1
	POP	HL		;23D4
	LD	DE,0B91Bh	;23D5
	LD	(0BBADh),DE	;23D8
	LD	A,0FFh		;23DC
	CALL	01637h		;23DE
	RET	NZ		;23E1
	CALL	02549h		;23E2
	RET	C		;23E5
	CALL	01BE6h		;23E6
	CALL	01C53h		;23E9
	CALL	01BC8h		;23EC
	LD	A,0D3h		;23EF
	RET	C		;23F1
	CALL	01BFAh		;23F2
	CALL	01C70h		;23F5
	PUSh	HL		;23F8
	PUSh	DE		;23F9
	LD	HL,0B91Bh	;23FA
	LD	B,0Bh		;23FD
	LD	A,(HL)		;23FF
	CP	0E5h		;2400
	JR	NZ,02406h	;2402
	LD	A,05h		;2404
	LD	(DE),A		;2406
	INC	HL		;2407
	INC	DE		;2408
	LD	A,(HL)		;2409
	DJNZ	02406h		;240A
	POP	DE		;240C
	POP	HL		;240D
	JP	023A4h		;240E
	XOR	A		;2411
	BIT	7,(IX+1Eh)	;2412
	RET	NZ		;2416
	CALL	022D5h		;2417
	RET	NZ		;241A
	CALL	02549h		;241B
	RET	C		;241E
	PUSh	HL		;241F
	LD	HL,01Ah		;2420
	ADD	HL,DE		;2423
	LD	A,(HL)		;2424
	INC	HL		;2425
	LD	H,(HL)		;2426
	LD	L,A		;2427
	LD	(0BBABh),HL	;2428
	LD	HL,0Bh		;242B
	ADD	HL,DE		;242E
	LD	A,(HL)		;242F
	POP	HL		;2430
	BIT	4,A		;2431
	CALL	NZ,034DFh	;2433
	PUSh	BC		;2436
	PUSh	HL		;2437
	LD	HL,0B91Bh	;2438
	LD	B,0Bh		;243B
	LD	A,(DE)		;243D
	CP	05h		;243E
	JR	NZ,02444h	;2440
	LD	A,0E5h		;2442
	LD	(HL),A		;2444
	INC	HL		;2445
	INC	DE		;2446
	LD	A,(DE)		;2447
	DJNZ	02444h		;2448
	LD	HL,0BBDEh	;244A BBDEh-9h	;FAT16*済 call STOR_5(33D5h)	;in bank2/del.mac MOVE_FIB (patched kvar.mac add DE_EX_SECTOR workarea)
	LD	DE,0BBC6h	;244D
	LD	BC,0Ch		;2450
	LDIR			;2453
	POP	HL		;2455
	POP	DE		;2456
	LD	C,089h		;2457
	LD	B,(IX+1Fh)	;2459
	LD	A,(IX+19h)	;245C
	LD	(IY+2Fh),00h	;245F
	CALL	012C3h		;2463
	RET	NZ		;2466
	OR	C		;2467
	LD	A,0D9h		;2468
	RET	NZ		;246A
	BIT	1,(IY+2Fh)	;246B
	LD	A,0D2h		;246F
	RET	NZ		;2471
	CALL	01C53h		;2472
	LD	BC,0B91Bh	;2475
	LD	(0BBADh),BC	;2478
	CALL	01BC8h		;247C
	LD	A,0D3h		;247F
	RET	C		;2481
	CALL	01BFAh		;2482
	RET	NZ		;2485
	CALL	01BE6h		;2486
	PUSh	HL		;2489
	LD	HL,0BBC6h	;248A		;FAT16*済 call STOR_6(33E1h)	;in bank2/del.mac MOVE_FIB (patched kvar.mac add DE_EX_SECTOR workarea)
	LD	DE,0BBDEh	;248D
	LD	BC,0Ch		;2490
	LDIR			;2493
	POP	HL		;2495
	CALL	01C70h		;2496
	PUSh	HL		;2499
	LD	HL,0B8D4h	;249A
	PUSh	DE		;249D
	EX	DE,HL		;249E
	LD	BC,020h		;249F
	LDIR			;24A2
	POP	HL		;24A4
	LD	(HL),0E5h	;24A5
	CALL	02C4Ch		;24A7
	POP	HL		;24AA
	CALL	01BFAh		;24AB
	CALL	01C70h		;24AE
	PUSh	HL		;24B1
	LD	HL,0B8D4h	;24B2
	LD	BC,020h		;24B5
	PUSh	DE		;24B8
	LDIR			;24B9
	POP	DE		;24BB
	POP	HL		;24BC
	CALL	02537h		;24BD
	RET	Z		;24C0
	CALL	034DFh		;24C1
	LD	BC,(DE_START)	;24C4
	PUSh	BC		;24C8
	CALL	01C30h		;24C9
	CALL	01C53h		;24CC
	LD	BC,02560h	;24CF
	LD	(0BBADh),BC	;24D2
	CALL	01BC8h		;24D6
	POP	BC		;24D9
	RET	NC		;24DA
	AND	010h		;24DB
	RET	Z		;24DD
	BIT	7,B		;24DE
	JR	Z,024E5h	;24E0
	LD	BC,00h		;24E2
	PUSh	HL		;24E5
	LD	HL,01Ah		;24E6
	ADD	HL,DE		;24E9
	LD	(HL),C		;24EA
	INC	HL		;24EB
	LD	(HL),B		;24EC
	CALL	02C4Ch		;24ED
	XOR	A		;24F0
	POP	HL		;24F1
	RET			;24F2
	XOR	A		;24F3
	BIT	7,(IX+1Eh)	;24F4
	RET	NZ		;24F8
	CALL	022D5h		;24F9
	RET	NZ		;24FC
	PUSh	HL		;24FD
	LD	HL,0Bh		;24FE
	ADD	HL,DE		;2501
	LD	A,(HL)		;2502
	LD	B,0DDh		;2503
	BIT	4,A		;2505
	JR	NZ,0250Bh	;2507
	LD	B,0D8h		;2509
	XOR	C		;250B
	AND	B		;250C
	LD	A,0CFh		;250D
	JR	NZ,02516h	;250F
	LD	(HL),C		;2511
	CALL	02C4Ch		;2512
	XOR	A		;2515
	POP	HL		;2516
	RET			;2517
	XOR	A		;2518
	BIT	7,(IX+1Eh)	;2519
	RET	NZ		;251D
	CALL	022D5h		;251E
	RET	NZ		;2521
	PUSh	HL		;2522
	PUSh	DE		;2523
	CALL	01C70h		;2524
	LD	HL,016h		;2527
	ADD	HL,DE		;252A
	EX	DE,HL		;252B
	EX	(SP),HL		;252C
	EX	DE,HL		;252D
	LD	(HL),E		;252E
	INC	HL		;252F
	LD	(HL),D		;2530
	INC	HL		;2531
	LD	(HL),C		;2532
	INC	HL		;2533
	LD	(HL),B		;2534
	POP	DE		;2535
	POP	HL		;2536
	PUSh	HL		;2537
	LD	HL,0Bh		;2538
	ADD	HL,DE		;253B
	BIT	4,(HL)		;253C
	JR	NZ,02542h	;253E
	SET	5,(HL)		;2540
	CALL	02C4Ch		;2542
	POP	HL		;2545
	LD	A,00h		;2546
	RET			;2548
	
	PUSh	HL		;2549
	PUSh	BC		;254A
	LD	HL,02561h	;254B
	XOR	A		;254E
	CALL	015D2h		;254F
	JR	Z,0255Bh	;2552
	LD	HL,02560h	;2554
	XOR	A		;2557
	CALL	015D2h		;2558
	POP	BC		;255B
	POP	HL		;255C
	LD	A,0CEh		;255D 'Invalid . or .. operation'
	RET			;255F
	DB	2Eh,2Eh,20h,20h,20h	;2560
	DB	20h,20h,20h,20h,20h
	DB	20h,20h
;#2F
	LD	A,01h		;256C	A=01 セクターリード
	DB	0FEh		;256E
;#30	DB	0AFh		;256F	A=00 セクターライト
	LD	(0BBC4h),A	;2570	R/W フラグ
	LD	(0BBB4h),DE	;2573	セクタ番号保存
	LD	BC,(0F23Dh)	;2577	DTAアドレスをデータセグメントに
	LD	(0BBC2h),BC	;257B	
	LD	A,B		;257F	DTA＋セクタ数＊200hバイト
	ADD	A,H		;2580	
	JR	C,02584h	;2581	
	ADD	A,H		;2583	
	LD	A,0C9h		;2584	エラー番号　64K over
	RET	C		;2586	
	PUSh	HL		;2587	
	LD	IX,0B9DAh	;2588	
	LD	B,02h		;258C	
	LD	C,L		;258E	ドライブ番号
	INC	C		;258F	
	CALL	031A1h		;2590	
	POP	BC		;2593	
	OR	A		;2594	
	RET	NZ		;2595	エラー
	CALL	02C5Dh		;2596	FLUSH DISK BUFFER
	CALL	02C6Dh		;2599	clear DISK BUFFER
	CALL	025ADh		;259C	read/write DISK ;FAT16*済 ABSSEC(30E3h)	;in bank2/rw.mac F_RDABS/F_WRABS
	CALL	02C5Dh		;259F	flush DISK BUFFER
	CALL	02C6Dh		;25A2	clear DISK BUFFER
	LD	DE,09h		;25A5	
	ADD	HL,DE		;25A8	DPB+09h
	LD	(HL),01h	;25A9	
	XOR	A		;25AB	
	RET			;25AC	
;access disk
	XOR	A		;25AD	
	CP	B		;25AE	
	RET	Z		;25AF	exit
	LD	A,(0BBC4h)	;25B0	R/W FLAG
	AND	04h		;25B3	
	LD	DE,(0BBC2h)	;25B5	DTA
	CALL	02745h		;25B9	get segmentnumber of DTA
	SET	7,D		;25BC	
	EX	AF,AF'		;25BE	
	PUSh	HL		;25BF	
	LD	HL,0BE00h	;25C0	
	OR	A		;25C3	
	SBC	HL,DE		;25C4	
	JR	C,02630h	;25C6	DTAに１セクタ分入らない
	LD	A,H		;25C8	{(BE00-DTA)/2}+1
	SRL	A		;25C9	
	INC	A		;25CB	
	CP	B		;25CC	
	JR	C,025D0h	;25CD	
	LD	A,B		;25CF	
	LD	C,A		;25D0	C=R/Wセクタ数
	POP	HL		;25D1	
	SUB	B		;25D2	
	NEG			;25D3	
	LD	B,A		;25D5	
	PUSh	BC		;25D6	B=R/Wした残りのセクタ数
	LD	B,C		;25D7	
	EX	AF,AF'		;25D8	
	LD	C,A		;25D9	
	PUSh	BC		;25DA	C=segment　B=number of sectors
	XOR	A		;25DB	
	
	PUSh	BC		;25DC	
	PUSh	DE		;25DD	DE=DTA
	PUSh	DE		;25DE	
	EX	(SP),IX		;25DF	
	LD	DE,(0BBB4h)	;25E1		;FAT16*済 call RAMRED(3152h)	;in bank2/rw.mac RW_MANY
	PUSh	DE		;25E5	DE=SECTOR NUMBER
	DEC	A		;25E6	A=01のときは
	JR	Z,025F8h	;25E7	ディスクアクセスしない
	LD	A,00h		;25E9	
	BIT	0,(IY+44h)	;25EB	
	JR	NZ,025F3h	;25EF	A=00 READ
	LD	A,01h		;25F1	A=01 WRITE
	CALL	03263h		;25F3	DISK READ/WRITE
	JR	025FAh		;25F6	
	LD	B,01h		;25F8	
	EX	AF,AF'		;25FA	
	POP	DE		;25FB	SECTOR NUMBER
	POP	IX		;25FC	DTA
	PUSh	HL		;25FE	
	LD	L,B		;25FF	
	LD	H,00h		;2600	
	ADD	HL,DE		;2602	セクタ番号＋R/Wしたセクタ数
	LD	(0BBB4h),HL	;2603	セクタ番号更新 ;FAT16*済 call NUM_1(3115h)	;in bank2/rw.mac RW_MANY
	POP	HL		;2606	
	POP	DE		;2607	DTA
	LD	A,D		;2608	DTA＋セクタ数＊200hバイト
	ADD	A,B		;2609	
	ADD	A,B		;260A	
	LD	D,A		;260B	
	LD	A,B		;260C	
	POP	BC		;260D	
	SUB	B		;260E	
	NEG			;260F	
	LD	B,A		;2611	
	EX	AF,AF'		;2612	
	PUSh	DE		;2613	
	LD	DE,(0BBB4h)	;2614	更新されたセクタ番号
	CALL	NZ,036A2h	;2618	ディスクアクセス時にエラーがあった
	POP	DE		;261B	DTA
	INC	B		;261C	
	DEC	B		;261D	
	JR	NZ,025DCh	;261E	R/Wセクタ数分ループ
	
	POP	BC		;2620	
	CALL	02647h		;2621	DISK BUFFERの処理
	POP	BC		;2624	B=残りのセクタ数
	LD	A,(IY+43h)	;2625	DTA＋セクタ数＊200h
	ADD	A,C		;2628	
	ADD	A,C		;2629	
	LD	(IY+43h)A	;262A	DTAアドレス更新
	JP	025ADh		;262D	
;------------------------
;DTAに１セクタ分入らない
	POP	HL		;2630	
	DEC	B		;2631	
	PUSh	BC		;2632	
	LD	DE,0200h	;2633	
	LD	B,E		;2636	
	LD	C,E		;2637	
	CALL	0269Ch		;2638	DISK BUFFERにリード／ライト
	POP	BC		;263B	
	INC	(IY+34h)	;263C	セクタ番号更新
	JR	NZ,02644h	;263F	
	INC	(IY+35h)	;2641		;FAT16*済  call NUM_2(3121h)	;in bank2/rw.mac RW_MANY
	JP	025ADh		;2644	
;-------------------------
;in bank2/rw.mac CORRECT_BUF
	CALL	02C83h		;2647	BUFFERのFLAG bit0をセット
	PUSh	BC		;264A	
	EXX			;264B	
	CALL	02CB3h		;264C	
	JR	Z,02699h	;264F	EXIT　BUFFERにbit0=1がない
	LD	BC,04h		;2651	
	ADD	HL,BC		;2654	BUFFER+4のセクタ番号と同じか
	LD	E,(HL)		;2655	
	INC	HL		;2656	
	LD	D,(HL)		;2657	
	EX	DE,HL		;2658	
	LD	BC,(0BBB4h)	;2659	
	SBC	HL,BC		;265D		;FAT16*済 jp DSKBUF(3089h) ;in bank2/rw.mac CORRECT_BUF
	POP	BC		;265F	
	LD	A,H		;2660	
	INC	A		;2661	
	JR	NZ,02679h	;2662	
	LD	A,L		;2664	
	ADD	A,B		;2665	B=セクタ数
	JR	NC,02679h	;2666	
	DEC	DE		;2668	
	DEC	DE		;2669	
	EX	DE,HL		;266A	
	BIT	0,(IY+44h)	;266B	
	JR	NZ,0267Ch	;266F	READ
	DEC	HL		;2671	WRITE
	LD	(HL),00h	;2672	ドライブを0 　BUFFERを無効にする
	DEC	HL		;2674	
	DEC	HL		;2675	
	CALL	02CCBh		;2676	BUFFER LINK
	EXX			;2679	
	JR	0264Ah		;267A	
;----------------
	BIT	7,(HL)		;267C	
	JR	Z,02679h	;267E	FLUSh
	LD	A,C		;2680	
	EXX			;2681	
	PUSh	DE		;2682	
	EXX			;2683	
	LD	BC,08h		;2684	
	ADD	HL,BC		;2687	
	EX	(SP),HL		;2688	
	LD	D,E		;2689	
	LD	E,B		;268A	
	ADD	HL,DE		;268B	
	ADD	HL,DE		;268C	
	EX	DE,HL		;268D	
	RES	7,D		;268E	
	POP	HL		;2690	
	LD	BC,0200h	;2691	
	CALL	0F1D6h		;2694	
	JR	02679h		;2697	
;---------------
	EXX			;2699	
	POP	BC		;269A	
	RET			;269B	
;--------------------------------------
;DISK BUFFERにリード／ライト
	PUSh	HL		;269C	
	EX	(SP),IX		;269D	
	PUSh	DE		;269F	
	PUSh	BC		;26A0	
	BIT	0,(IY+44h)	;26A1	
	JR	NZ,026CCh	;26A5	READ
	BIT	1,D		;26A7	
	JR	NZ,026CFh	;26A9	WRITE
	BIT	1,(IY+44h)	;26AB	
	JR	NZ,026CCh	;26AF	
	PUSh	DE		;26B1	
	LD	HL,(0BBC0h)	;26B2	
	LD	DE,(0BBB2h)	;26B5	
	OR	A		;26B9	
	SBC	HL,DE		;26BA	
	POP	DE		;26BC	
	JR	C,026C9h	;26BD	
	LD	A,B		;26BF	
	OR	C		;26C0	
	JR	NZ,026CCh	;26C1	
	SBC	HL,DE		;26C3	
	JR	C,026CFh	;26C5	
	JR	026CCh		;26C7	
	ADD	HL,BC		;26C9	
	JR	NC,026CFh	;26CA	
;--------------------------
	LD	B,03h		;26CC	READ
	DB	21h		;26CE	
026CFh:	LD	B,02h		;26CF   WRITE 200hbytes
	LD	DE,(0BBB4h)	;26D1	セクタ番号
	CALL	BF_SECTOR	;26D5	バッファアクセス ;FAT16*済 BUF_2(3146h)	;in bank2/rw.mac RW_SECTOR (patched with bank2/buf.mac BF_SECTOR)
	POP	DE		;26D8	
	ADD	HL,DE		;26D9	
	LD	BC,0Bh		;26DA	
	ADD	HL,BC		;26DD	データのあるBUFFERアドレス
	POP	BC		;26DE	
	PUSh	DE		;26DF	
	PUSh	BC		;26E0	
	LD	DE,(0BBC2h)	;26E1	DTA
	PUSh	DE		;26E5	
	LD	A,(0BBC4h)	;26E6	
	CALL	02707h		;26E9	データの転送
	POP	HL		;26EC	
	POP	BC		;26ED	
	ADD	HL,BC		;26EE	
	LD	(0BBC2h),HL	;26EF	DTA更新
	BIT	0,(IY+44h)	;26F2	
	CALL	Z,02C4Ch	;26F6	WRITEならFLUSh bitをセット
	POP	HL		;26F9	
	ADD	HL,BC		;26FA	
	BIT	1,H		;26FB	
	LD	HL,(0BBF6h)	;26FD	Current BUFFER
	CALL	NZ,02CC8h	;2700	フラッシュして無効にする
	EX	(SP),IX		;2703	
	POP	HL		;2705	
	RET			;2706	
;-----------------------
;データ転送
	PUSh	DE		;2707	
	PUSh	BC		;2708	
	PUSh	AF		;2709	
	PUSh	HL		;270A	
	AND	04h		;270B	
	CALL	02745h		;270D	セグメント番号を得る
	LD	HL,04000h	;2710	
	OR	A		;2713	
	SBC	HL,DE		;2714	
	SBC	HL,BC		;2716	
	JR	NC,0271Dh	;2718	
	ADD	HL,BC		;271A	
	LD	C,L		;271B	
	LD	B,H		;271C	
	POP	HL		;271D	
	EX	(SP),HL		;271E	
	BIT	0,H		;271F	
	EX	(SP),HL		;2721	
	PUSh	BC		;2722	
	JR	NZ,02726h	;2723	
	EX	DE,HL		;2725	
	CALL	0F1D6h		;2726	PAGE0をDTAに対応するSEGMENTに
	JR	NZ,0272Ch	;2729	
	EX	DE,HL		;272B	
	POP	BC		;272C	
	POP	AF		;272D	
	EX	(SP),HL		;272E	
	OR	A		;272F	
	SBC	HL,BC		;2730	
	LD	B,H		;2732	
	LD	C,L		;2733	
	POP	HL		;2734	
	JR	Z,02743h	;2735	
	LD	E,A		;2737	
	POP	AF		;2738	
	AND	0C0h		;2739	
	ADD	A,040h		;273B	
	LD	D,A		;273D	
	LD	A,E		;273E	
	LD	E,00h		;273F	
	JR	02707h		;2741	
	POP	DE		;2743	
	RET			;2744	
;-------------------------
;DTAに対応するセグメント番号を得る

	PUSh	DE		;2745
	PUSh	HL		;2746
	LD	HL,0F2CBh	;2747
	OR	A		;274A
	JR	Z,02750h	;274B
	LD	HL,0F2C7h	;274D
	LD	A,D		;2750
	AND	0C0h		;2751
	RLCA			;2753
	RLCA			;2754
	LD	E,A		;2755
	LD	D,00h		;2756
	ADD	HL,DE		;2758
	LD	A,(HL)		;2759
	POP	HL		;275A
	POP	DE		;275B
	RES	6,D		;275C
	RES	7,D		;275E
	RET			;2760
	AND	04h		;2761
	OR	02h		;2763
	JR	0276Fh		;2765
;--------------------------------------
;FILE WRITE #26,#49
	AND	04h		;2767
	JR	0276Fh		;2769

;FILE READ #27,#48
	AND	04h		;276B
	OR	01h		;276D
	BIT	7,(IX+1Eh)	;276F
	JR	NZ,027BEh	;2773
	LD	(0BBC4h),A	;2775  R/W FLAG
	AND	010h		;2778
	OR	B		;277A
	OR	C		;277B
	RET	Z		;277C
	XOR	A		;277D
	LD	(0BBBEh),A	;277E
	LD	(0BBBFh),A	;2781
	LD	(0BBC0h),BC	;2784 リード／ライトするファイルサイズ
	LD	(0BBC2h),DE	;2788 DTA ADDRES
	CALL	02877h		;278C ファイルアクセス
	LD	BC,(0BBBEh)	;278F リード／ライトしたファイルサイズ
	LD	DE,(0BBC2h)	;2793 更新されたDTA
	LD	L,(IX+2Dh)	;2797 ファイルポインタ位置の更新
	LD	H,(IX+2Eh)	;279A
	ADD	HL,BC		;279D
	LD	(IX+2Dh)L	;279E
	LD	(IX+2Eh)h	;27A1
	JR	NC,027AEh	;27A4
	INC	(IX+2Fh)	;27A6
	JR	NZ,027AEh	;27A9
	INC	(IX+30h)	;27AB
	OR	A		;27AE
	RET	NZ		;27AF
	BIT	4,(IY+44h)	;27B0
	JR	NZ,027BCh	;27B4
	LD	A,B		;27B6
	OR	C		;27B7
	LD	A,0C7h		;27B8 'End of file' ERROR
	JR	Z,027AEh	;27BA
	XOR	A		;27BC
	RET			;27BD
;------------------------
	LD	H,A		;27BE
	AND	04h		;27BF
	LD	(IX+32h)A	;27C1
	LD	A,B		;27C4
	OR	C		;27C5
	RET	Z		;27C6
	BIT	0,H		;27C7
	JR	NZ,02810h	;27C9
	LD	L,(IX+1Ch)	;27CB
	LD	H,(IX+1Dh)	;27CE
	INC	HL		;27D1
	INC	HL		;27D2
	INC	HL		;27D3
	PUSh	BC		;27D4
	PUSh	DE		;27D5
	LD	A,(IX+32h)	;27D6
	CALL	02745h		;27D9
	EX	DE,HL		;27DC
	CALL	0F206h		;27DD
	EI			;27E0
	EX	DE,HL		;27E1
	POP	DE		;27E2
	BIT	5,(IX+1Eh)	;27E3
	JR	Z,027EDh	;27E7
	CP	01Ah		;27E9
	JR	Z,02805h	;27EB
	PUSh	IX		;27ED
	PUSh	BC		;27EF
	PUSh	DE		;27F0
	PUSh	HL		;27F1
	CALL	02873h		;27F2
	POP	HL		;27F5
	POP	DE		;27F6
	POP	BC		;27F7
	POP	IX		;27F8
	OR	A		;27FA
	JR	NZ,02808h	;27FB
	INC	DE		;27FD
	DEC	BC		;27FE
	LD	A,B		;27FF
	OR	C		;2800
	JR	NZ,027D5h	;2801
	JR	02808h		;2803
	XOR	A		;2805
	INC	DE		;2806
	DEC	BC		;2807
	POP	HL		;2808
	OR	A		;2809
	SBC	HL,BC		;280A
	LD	B,H		;280C
	LD	C,L		;280D
	JR	02797h		;280E
	LD	L,(IX+1Ch)	;2810
	LD	H,(IX+1Dh)	;2813
	PUSh	BC		;2816
	RES	6,(IX+1Eh)	;2817
	PUSh	BC		;281B
	PUSh	IX		;281C
	PUSh	DE		;281E
	PUSh	HL		;281F
	CALL	02873h		;2820
	POP	HL		;2823
	POP	DE		;2824
	POP	IX		;2825
	LD	C,00h		;2827
	OR	A		;2829
	JR	Z,02844h	;282A
	CP	0C7h		;282C
	JR	Z,0283Bh	;282E
	CP	0B9h		;2830
	JR	NZ,02864h	;2832
	BIT	2,(IX+1Eh)	;2834
	JR	NZ,02844h	;2838
	INC	C		;283A
	INC	C		;283B
	BIT	5,(IX+1Eh)	;283C
	JR	NZ,02844h	;2840
	LD	C,00h		;2842
	PUSh	DE		;2844
	PUSh	HL		;2845
	LD	A,(IX+32h)	;2846
	CALL	02745h		;2849
	EX	DE,HL		;284C
	LD	E,B		;284D
	CALL	0F209h		;284E
	EI			;2851
	POP	HL		;2852
	POP	DE		;2853
	LD	A,C		;2854
	POP	BC		;2855
	DEC	A		;2856
	JR	Z,02867h	;2857
	INC	DE		;2859
	DEC	BC		;285A
	DEC	A		;285B
	JR	Z,0286Bh	;285C
	LD	A,B		;285E
	OR	C		;285F
	JR	NZ,0281Bh	;2860
	JR	0286Bh		;2862
	POP	BC		;2864
	JR	0286Bh		;2865
	SET	6,(IX+1Eh)	;2867
	POP	HL		;286B
	OR	A		;286C
	SBC	HL,BC		;286D
	LD	B,H		;286F
	LD	C,L		;2870
	JR	0280Eh		;2871
	LD	C,(IX+1Eh)	;2873
	JP	(HL)		;2876
;----------------------------------------
;FILE ACCESS
	LD	A,0BAh		;2877 'File handle has been deleted'
	BIT	3,(IX+31h)	;2879
	RET	NZ		;287D ERROR
	LD	A,0C6h		;287E 'File access violation'
	BIT	0,(IY+44h)	;2880
	JR	Z,0288Dh	;2884 WRITE
	BIT	1,(IX+31h)	;2886
	RET	NZ		;288A ERROR
	JR	02899h		;288B
	BIT	0,(IX+31h)	;288D
	RET	NZ		;2891
	LD	A,0D1h		;2892 'Read only file'
	BIT	0,(IX+0Eh)	;2894
	RET	NZ		;2898
	BIT	0,(IY+7Fh)	;2899
	JR	Z,028A6h	;289D
	LD	HL,(0BBC2h)	;289F DTA
	ADD	HL,BC		;28A2 DTA + FILE SIZE
	LD	A,0C9h		;28A3 'Cannot transfer above 64k'
	RET	C		;28A5 ERROR
	LD	C,(IX+19h)	;28A6 DRIVE
	LD	B,01h		;28A9
	CALL	031A1h		;28AB
	OR	A		;28AE
	RET	NZ		;28AF ERROR
	CALL	029CAh		;28B0 FILE SIZE CALCUTATION
	RET	NZ		;28B3 ERROR
	LD	BC,(0BBC0h)	;28B4 R/W FILE SIZE
	LD	A,B		;28B8
	OR	C		;28B9
	RET	Z		;28BA
	LD	DE,(0BBBCh)	;28BB 相対クラスタ
	CALL	02B4Eh		;28BF 相対クラスタから最終クラスタ番号を得る
	LD	(0BBB6h),DE	;28C2 最終クラスタ番号書き込み
	RET	NZ		;28C6 ERROR #C8h'File allocation error'
	LD	BC,(0BBB9h)	;28C7 200hバイト未満のアクセス？
	LD	A,B		;28CB
	OR	C		;28CC
	CALL	NZ,0294Ah	;28CD
	RET	NZ		;28D0
;--------------------------------------
	LD	C,(IY+41h)	;28D1 R/Wバイト数上位
	SRL	C		;28D4 
	JR	Z,0292Eh	;28D6 100h以下のアクセス　EXIT
	CALL	02973h		;28D8 最終クラスタ更新
	RET	NZ		;28DB
	SUB	(IY+3Bh)	;28DC 
	LD	B,A		;28DF
	LD	DE,(0BBB6h)	;28E0 最終クラスタ（アクセスするクラスタ）
	CALL	029A7h		;28E4 セクタ換算
;----------------
	LD	A,B		;28E7
	ADD	A,(IY+38h)	;28E8 クラスタサイズ
	LD	B,A		;28EB
	CP	C		;28EC
	JR	NC,0290Eh	;28ED EXIT
	PUSh	DE		;28EF
	CALL	02D9Ah		;28F0 read FAT   ;FAT16*済 FATRED(0D95h)	;in bank2/files.mac READ_WRITE (patched bank2/fat.mac FAT_LOOKUP)
	EX	(SP),HL		;28F3
	OR	A		;28F4
	INC	HL		;28F5
	SBC	HL,DE		;28F6
	JR	NZ,02905h	;28F8
	INC	(IY+3Ch)	;28FA 
	JR	NZ,02902h	;28FD
	INC	(IY+3Dh)	;28FF
	POP	HL		;2902
	JR	028E7h		;2903
;----------------
	ADD	HL,DE		;2905
	EX	DE,HL		;2906
	DEC	DE		;2907
	POP	HL		;2908
	LD	A,(0BBB8h)	;2909 cluster size
	JR	02914h		;290C
;------------------
	LD	A,(0BBB8h)	;290E
	SUB	B		;2911
	ADD	A,C		;2912
	LD	B,C		;2913
	DEC	A		;2914
	LD	(0BBBBh),A	;2915
	LD	(0BBB6h),DE	;2918 ファイルアクセスの前に最終クラスタ更新
	PUSh	BC		;291C
	CALL	025ADh		;291D セクターリード／ライト
	POP	BC		;2920 
	SLA	B		;2921 R/Wバイト数（R/W SECTOR * 200h）
	LD	C,00h		;2923
	CALL	029B8h		;2925 ファイルポインタ更新、残りサイズを得る
	SET	3,(IY+44h)	;2928
	JR	028D1h		;292C
;--------------------------------------------
	LD	BC,00h		;292E
	CALL	0294Ah		;2931 HLに設定したバイト数に達したか
	RET	NZ		;2934
	LD	DE,(0BBB6h)	;2935
	LD	(IX+29h)E	;2939 File handle,FCBの最終クラスタ更新
	LD	(IX+2Ah)D	;293C
	LD	DE,(0BBBCh)	;293F
	LD	(IX+2Bh)E	;2943 File handle,FCBの相対クラスタ更新
	LD	(IX+2Ch)D	;2946
	RET			;2949 正常終了
;---------------------------------------------------
	PUSh	HL		;294A
	LD	HL,0200h	;294B
	OR	A		;294E
	SBC	HL,BC		;294F BC=ファイルの１セクタ未満の端数
	EX	DE,HL		;2951
	LD	HL,(0BBC0h)	;2952 
	SBC	HL,DE		;2955 R/Wバイト数　−　（200h−端数）
	JR	NC,0295Ch	;2957 設定したバイト数に達していない
	ADD	HL,DE		;2959 R/W終了
	LD	E,L		;295A
	LD	D,H		;295B
	LD	A,D		;295C
	OR	E		;295D
	POP	HL		;295E
	RET	Z		;295F BC=200hのとき
	CALL	02973h		;2960 最終クラスタ更新
	RET	NZ		;2963
	CALL	029A7h		;2964 calculation to sector
	CALL	0269Ch		;2967 read sector in diskbuffer
	SET	3,(IY+44h)	;296A
	CALL	029B8h		;296E 
	XOR	A		;2971
	RET			;2972
;--------------------------------------------
	XOR	A		;2973
	BIT	3,(IY+44h)	;2974
	RET	Z		;2978
	RES	3,(IY+44h)	;2979
	LD	A,(0BBBBh)	;297D counter of sector 
	INC	A		;2980
	CP	(IY+38h)	;2981 クラスタサイズに達したか？
	JR	NZ,029A2h	;2984 カウンタの更新
	PUSh	DE		;2986
	LD	DE,(0BBBCh)	;2987 相対クラスタを＋１する
	INC	DE		;298B
	LD	(0BBBCh),DE	;298C
	LD	DE,(0BBB6h)	;2990 clusternumber
	CALL	02D9Ah		;2994 read FAT	;FAT16*済 FATRED(0D95h)	;in bank2/files.mac NEXT_SEC (patched bank2/fat.mac FAT_LOOKUP)
	LD	(0BBB6h),DE	;2997 next cluster
	BIT	7,D		;299B end of file?	;FAT16*済 00,00	;in bank2/files.mac NEXT_SEC
	POP	DE		;299D
	LD	A,0C8h		;299E 'File allocation error'
	RET	NZ		;29A0 END OF FILEならERROR
	XOR	A		;29A1 最終クラスタを更新したらカウンタをクリア
	LD	(0BBBBh),A	;29A2
	XOR	A		;29A5
	RET			;29A6
;-----------------------------------------------
	PUSh	DE		;29A7
	LD	A,(0BBBBh)	;29A8 クラスタ内の何番目のセクタか
	LD	DE,(0BBB6h)	;29AB クラスタ番号
	CALL	CLU_TO_SEC	;29AF セクタ換算
	LD	(0BBB4h),DE	;29B2 
	POP	DE		;29B6
	RET			;29B7
;-----------------------------------------------
	PUSh	HL		;29B8
	LD	HL,(0BBBEh)	;29B9 R/Wしたバイト数の更新
	ADD	HL,BC		;29BC
	LD	(0BBBEh),HL	;29BD
	LD	HL,(0BBC0h)	;29C0 残りのバイト数計算
	SBC	HL,BC		;29C3
	LD	(0BBC0h),HL	;29C5
	POP	HL		;29C8
	RET			;29C9
;-----------------------------------------------
;ファイルアクセス位置の獲得
	PUSh	HL		;29CA
	LD	C,(IX+2Dh)	;29CB ファイルポインタ位置
	LD	B,(IX+2Eh)	;29CE
	LD	E,(IX+2Fh)	;29D1
	LD	D,(IX+30h)	;29D4
	PUSh	DE		;29D7
	PUSh	BC		;29D8
	CALL	02B19h		;29D9 相対クラスタ、セクタ位置、半端サイズ
	JR	NZ,02A2Dh	;29DC
	LD	(0BBBCh),DE	;29DE 相対クラスタ
	LD	(0BBBBh),A	;29E2 クラスタ内の何番目のセクタか
	LD	(0BBB9h),BC	;29E5 ファイルの半端
	POP	HL		;29E9
	LD	DE,(0BBC0h)	;29EA R/Wバイト数
	DEC	DE		;29EE
	ADD	HL,DE		;29EF
	EX	(SP),HL		;29F0
	POP	BC		;29F1
	EX	DE,HL		;29F2
	EX	(SP),HL		;29F3
	PUSh	HL		;29F4
	LD	HL,00h		;29F5
	BIT	4,(IY+44h)	;29F8
	JR	Z,029FFh	;29FC
	DEC	HL		;29FE
	ADC	HL,DE		;29FF
	EX	DE,HL		;2A01
	BIT	7,D		;2A02
	JR	NZ,02A76h	;2A04
	POP	HL		;2A06
	PUSh	DE		;2A07
	PUSh	BC		;2A08
	CALL	02B19h		;2A09
	JR	NZ,02A2Dh	;2A0C
	PUSh	DE		;2A0E
	LD	C,(IX+15h)	;2A0F FILE SIZE (File handle,FCB)
	LD	B,(IX+16h)	;2A12
	LD	E,(IX+17h)	;2A15
	LD	D,(IX+18h)	;2A18
	LD	A,B		;2A1B
	OR	C		;2A1C
	DEC	BC		;2A1D
	JR	NZ,02A23h	;2A1E
	OR	D		;2A20
	OR	E		;2A21
	DEC	DE		;2A22
	PUSh	DE		;2A23
	PUSh	BC		;2A24
	CALL	NZ,02B19h	;2A25 ? Z=0で戻るとエラー
	EXX			;2A28
	POP	HL		;2A29
	POP	DE		;2A2A
	EXX			;2A2B
	POP	BC		;2A2C
	JR	NZ,02AA6h	;2A2D ERROR
	EXX			;2A2F
	POP	BC		;2A30 ファイルポインタ下位
	XOR	A		;2A31
	SBC	HL,BC		;2A32 Filesize - filepointer 下位
	EX	(SP),HL		;2A34
	EX	DE,HL		;2A35
	SBC	HL,DE		;2A36 Filesize - filepointer 上位
	EXX			;2A38
	BIT	7,D		;2A39
	EX	AF,AF'		;2A3B
	BIT	0,(IY+44h)	;2A3C
	JP	NZ,02AFEh	;2A40 READ
;--------------------------------------------
	PUSh	HL		;2A43 WRITE
	LD	H,B		;2A44
	LD	L,C		;2A45
	INC	DE		;2A46
	OR	A		;2A47
	SBC	HL,DE		;2A48
	LD	C,L		;2A4A
	LD	B,H		;2A4B
	INC	BC		;2A4C ファイルに必要なクラスタ数＋１
	JR	NC,02A8Ah	;2A4D 空きFATを探しFAT CHAIN書き込み
	ADD	HL,DE		;2A4F
	EX	DE,HL		;2A50
	POP	HL		;2A51
	BIT	4,(IY+44h)	;2A52
	JR	Z,02ABDh	;2A56
	CALL	02B4Eh		;2A58 最終クラスタ番号を得る
	JR	NZ,02AA8h	;2A5B ERROR CODE C8h
	PUSh	DE		;2A5D
	CALL	02D9Ah		;2A5E read FAT 		;FAT16*済 FATRED(0D95h)
	BIT	7,D		;2A61			;FAT16*済 call z,301Ah
	CALL	Z,FR_CHAIN	;2A63 FAT CHAIN		;FAT16*済 pop de
	POP	DE		;2A66			;FAT16*済 ld bc,0ffffh
	LD	B,0FFh		;2A67			;FAT16*済 nop
	CALL	02DE7h		;2A69 write FAT to '0FFFh'
	LD	C,(IX+27h)	;2A6C top of cluster
	LD	B,(IX+28h)	;2A6F
	SCF			;2A72
	EX	AF,AF'		;2A73
	JR	02AAAh		;2A74
	EXX			;2A76
	EX	AF,AF'		;2A77
	POP	HL		;2A78
	LD	E,(IX+39D)	;2A79
	LD	D,(IX+40D)	;2A7C
	LD	A,D		;2A7F
	OR	E		;2A80
	CALL	NZ,FR_CHAIN	;2A81
	PUSh	DE		;2A84
	LD	BC,00h		;2A85
	JR	02AAAh		;2A88
	POP	HL		;2A8A
	LD	A,(IY+44h)	;2A8B
	AND	02h		;2A8E
	CALL	02F54h		;2A90 空きFATを探してFATCHAINを書き込む
	JR	NZ,02AA7h	;2A93
	DEC	DE		;2A95
	BIT	7,D		;2A96
	JR	NZ,02AAAh	;2A98
	PUSh	BC		;2A9A
	CALL	02B4Eh		;2A9B
	POP	BC		;2A9E
	JR	NZ,02AA7h	;2A9F
	CALL	02DEAh		;2AA1 BC=CLUSTER NUMBER
	JR	02ABDh		;2AA4
	POP	DE		;2AA6
	POP	DE		;2AA7
	POP	DE		;2AA8
	RET			;2AA9
;--------------------------------------------
;FIB,FCBの更新
	LD	(IX+27h)C	;2AAA 先頭クラスタ
	LD	(IX+28h)B	;2AAD
	XOR	A		;2AB0
	LD	(IX+29h)C	;2AB1 最終クラスタ
	LD	(IX+2Ah)B	;2AB4
	LD	(IX+2Bh)A	;2AB7 相対クラスタ
	LD	(IX+2Ch)A	;2ABA
	SET	7,(IX+31h)	;2ABD bit7=1はCONなどの文字デバイス参照の意
	EXX			;2AC1
	EX	AF,AF'		;2AC2
	JR	NZ,02AC7h	;2AC3
	JR	NC,02AD9h	;2AC5
	INC	BC		;2AC7
	LD	A,B		;2AC8
	OR	C		;2AC9
	JR	NZ,02ACDh	;2ACA
	INC	DE		;2ACC
	LD	(IX+21D)C	;2ACD
	LD	(IX+16h)B	;2AD0
	LD	(IX+17h)E	;2AD3
	LD	(IX+18h)D	;2AD6
	POP	BC		;2AD9
	POP	DE		;2ADA
	LD	A,B		;2ADB
	OR	C		;2ADC
	DEC	BC		;2ADD
	JR	NZ,02AE1h	;2ADE
	DEC	HL		;2AE0
	BIT	7,H		;2AE1
	JR	Z,02AF5h	;2AE3
	LD	A,H		;2AE5
	AND	L		;2AE6
	INC	A		;2AE7
	LD	HL,0FFFFh	;2AE8
	JR	NZ,02AF8h	;2AEB
	INC	HL		;2AED
	SBC	HL,BC		;2AEE
	JR	NZ,02AF8h	;2AF0
	DEC	HL		;2AF2
	JR	02AF8h		;2AF3
	LD	HL,00h		;2AF5
	LD	(0BBB2h),HL	;2AF8
	EXX			;2AFB
	XOR	A		;2AFC
	RET			;2AFD
;------------------------------------------------
	EX	AF,AF'		;2AFE READ
	POP	DE		;2AFF
	EX	(SP),HL		;2B00
	JR	NZ,02B0Fh	;2B01
	JR	NC,02B16h	;2B03
	EXX			;2B05
	LD	A,H		;2B06
	AND	L		;2B07
	INC	A		;2B08
	EXX			;2B09
	JR	NZ,02B0Fh	;2B0A
	ADD	HL,DE		;2B0C
	JR	C,02B12h	;2B0D
	LD	HL,0FFFFh	;2B0F
	INC	HL		;2B12
	LD	(0BBC0h),HL	;2B13
	XOR	A		;2B16
	POP	HL		;2B17
	RET			;2B18
;--------------------------------------------------
;ファイルポインタ／（クラスタサイズ＊200hバイト）＝相対クラスタ
;戻り値  DE=相対クラスタ  A=クラスタ内のセクタ位置  BC=ファイルの端数

	PUSh	HL		;2B19
	LD	A,B		;2B1A
	SRL	D		;2B1B
	RR	E		;2B1D
	RRA			;2B1F
	LD	B,00h		;2B20
	RL	B		;2B22
	PUSh	BC		;2B24
	LD	BC,0Ah		;2B25
	ADD	HL,BC		;2B28
	PUSh	AF		;2B29
	AND	(HL)		;2B2A
	LD	C,A		;2B2B
	LD	A,(HL)		;2B2C
	INC	A		;2B2D
	LD	(0BBB8h),A	;2B2E
	POP	AF		;2B31
	INC	HL		;2B32
	LD	B,(HL)		;2B33
	JR	02B3Bh		;2B34
	SRL	D		;2B36
	RR	E		;2B38
	RRA			;2B3A
	DJNZ	02B36h		;2B3B
	INC	D		;2B3D
	DEC	D		;2B3E
	JR	NZ,02B49h	;2B3F
	BIT	7,E		;2B41
	JR	NZ,02B49h	;2B43
	LD	D,E		;2B45
	LD	E,A		;2B46
	LD	A,C		;2B47
	DB	21h		;2B48
	DB	3Eh,C8h		;2B49 LD  A,C8h 'File allocation error'
	POP	BC		;2B4B
	POP	HL		;2B4C
	RET			;2B4D
	
;--------------------------------------------
;最終クラスタ番号を得る
	PUSh	HL		;2B4E
	EX	DE,HL		;2B4F
	LD	E,(IX+29h)	;2B50 最終クラスタ
	LD	D,(IX+2Ah)	;2B53
	LD	A,D		;2B56
	OR	E		;2B57
	JR	Z,02B79h	;2B58 00ならエラー　CODE C8h
	LD	C,(IX+2Bh)	;2B5A 相対クラスタ
	LD	B,(IX+2Ch)	;2B5D
	SBC	HL,BC		;2B60
	JR	NC,02B6Bh	;2B62
	ADD	HL,BC		;2B64
	LD	E,(IX+27h)	;2B65 先頭クラスタ
	LD	D,(IX+28h)	;2B68
	EX	(SP),HL		;2B6B
	POP	BC		;2B6C
	LD	A,B		;2B6D
	OR	C		;2B6E
	RET	Z		;2B6F RIGHT
	DEC	BC		;2B70
	CALL	02D9Ah		;2B71 readFAT 	;FAT16*済 FATRED(0D95h)	;in bank2/files.mac LOG_PHYS_CLU (patched bank2/fat.mac FAT_LOOKUP)
	BIT	7,D		;2B74		;FAT16*済 00,00	;in bank2/files.mac LOG_PHYS_CLU
	JR	Z,02B6Dh	;2B76
	DB	3Eh		;2B78
	DB	0E1h		;2B79 POP  HL   ERROR
	LD	A,0C8h		;2B7A ERROR CODE C8h
	OR	A		;2B7C
	RET			;2B7D
;-----------------------------------------------------------
;DISK BUFFER ;in bank2/buf.mac
;
BF_FAT_SECTOR:
	LD	B,01h		;2B7E
	LD	A,(IX+0Eh)	;2B80
	BIT	0,(IX+18h)	;2B83
	JR	Z,02B8Eh	;2B87 
	DEC	A		;2B89
	JR	NZ,02B8Eh	;2B8A
;--------------------------------------
;B=02 DATA WRITE, 03=DATA READ ;in bank2/buf.mac
BF_SECTOR:
	LD	A,01h		;2B8C
	LD	(0BBA2h),A	;2B8E
	LD	C,(IX+8h)	;2B91 ドライブ番号
	LD	HL,(0BBF6h)	;2B94 Current buffer
	LD	A,H		;2B97
	SUB	01h		;2B98
	CALL	NC,02C3Ah	;2B9A DISK BUFFERにリード済み？
	RET	Z		;2B9D リード済み
	LD	HL,(0BBF8h)	;2B9E BUFFER TOP
	PUSh	HL		;2BA1
	CALL	02C3Ah		;2BA2 リード済み？
	JP	Z,02C2Dh	;2BA5 YESならBUFFERアドレスをCurrentに移す
	LD	A,(HL)		;2BA8 NOなら全てのBUFFERを調べる
	INC	HL		;2BA9
	LD	H,(HL)		;2BAA
	LD	L,A		;2BAB
	OR	H		;2BAC
	JR	NZ,02BA2h	;2BAD
	POP	HL		;2BAF BUFFERに無いときはBUFFERの掃き出し
	INC	HL		;2BB0
	INC	HL		;2BB1
	BIT	7,(HL)		;2BB2 ドライブ番号のbit7=0なら掃き出し
	DEC	HL		;2BB4
	LD	A,(HL)		;2BB5
	DEC	HL		;2BB6
	JR	Z,02BBBh	;2BB7
	LD	L,(HL)		;2BB9 BUFFER LINKを掃き出し
	LD	H,A		;2BBA
	CALL	02D23h		;2BBB FLUSH TO BUFFER
	PUSh	HL		;2BBE 新しくBUFFERにリード
	INC	HL		;2BBF
	INC	HL		;2BC0
	LD	(HL),C		;2BC1 ドライブ
	INC	HL		;2BC2
	LD	A,B		;2BC3 
	AND	02h		;2BC4 00=DIR FAT, 02=DATA
	LD	(HL),A		;2BC6
	INC	HL		;2BC7
	LD	(HL),E		;2BC8 セクタ番号
	INC	HL		;2BC9
	LD	(HL),D		;2BCA
	INC	HL		;2BCB
	LD	A,(IY+22h)	;2BCC
	LD	(HL),A		;2BCF FAT=02, 01=DIR DATA
	INC	HL		;2BD0
	LD	C,(IX+11h)	;2BD1		;FAT16*済 call SECNUM(3031h)	;in bank2/buf.mac BF_SECTOR
	LD	(HL),C		;2BD4 FAT SIZE  ;FAT16*済 inc hl	;in bank2/buf.mac BF_SECTOR
	INC	HL		;2BD5		;FAT16*済 ld (hl),a	;in bank2/buf.mac BF_SECTOR
	PUSh	DE		;2BD6 セクタ番号
	INC	HL		;2BD7
	INC	HL		;2BD8
	INC	HL		;2BD9
	PUSh	HL		;2BDA データの初め
	LD	E,L		;2BDB BUFFERのデータ領域を0でクリア
	LD	D,H		;2BDC
	INC	DE		;2BDD
	LD	(HL),00h	;2BDE
	PUSh	BC		;2BE0
	LD	BC,01FFh	;2BE1
	LDIR			;2BE4
	POP	BC		;2BE6
	EX	(SP),IX		;2BE7
	POP	HL		;2BE9
	LD	(IX+FEh)L	;2BEA BUFFER+9からDPBアドレス
	LD	(IX+FFh)h	;2BED
	POP	DE		;2BF0
	BIT	0,B		;2BF1
	JR	Z,02C29h	;2BF3 WRITEのときBUFFERに読まずに終了
	PUSh	BC		;2BF5
	PUSh	DE		;2BF6
	LD	B,(IY+22h)	;2BF7 B=リード回数
	JR	02C02h		;2BFA セクターリードへ
;--------------------------
	LD	A,E		;2BFC
	ADD	A,C		;2BFD
	LD	E,A		;2BFE
	JR	NC,02C02h	;2BFF
	INC	D		;2C01
	PUSh	DE		;2C02 セクタ
	PUSh	BC		;2C03 リード回数
	LD	B,01h		;2C04 リードセクタ数
	LD	A,(0F2CFh)	;2C06
	LD	C,A		;2C09 データセグメントに
	LD	A,00h		;2C0A READ
	CALL	03263h		;2C0C DSKIO	;FAT16*済 call REDBUF(315Fh)	;in bank2/buf.mac BF_SECTOR (patched other position)
	POP	BC		;2C0F
	POP	DE		;2C10
	JR	Z,02C27h	;2C11 リード成功
	CP	0F1h		;2C13
	JR	Z,02C19h	;2C15 #F1 ERROR
	DJNZ	02BFCh		;2C17
	POP	DE		;2C19
	POP	BC		;2C1A
	OR	A		;2C1B
	BIT	1,B		;2C1C
	JR	NZ,02C21h	;2C1E
	SCF			;2C20
	CALL	036A6h		;2C21 ERROR
	JR	Z,02BF5h	;2C24
;---------------------
	DB	0CAh		;2C26
	POP	DE		;2C27
	POP	BC		;2C28
	EX	(SP),HL		;2C29
	POP	IX		;2C2A
	DB	0FEh		;2C2C
	POP	BC		;2C2D
	SET	1,(IY+29h)	;2C2E
	LD	(0BBF6h),HL	;2C32 BUFFERアドレスをCURRENTに
	CALL	02CEBh		;2C35 BUFFER LINK処理
	XOR	A		;2C38
	RET			;2C39
;--------------------------------------------
;BUFFERにリード済み？
	PUSh	HL		;2C3A
	INC	HL		;2C3B
	INC	HL		;2C3C
	LD	A,(HL)		;2C3D
	SUB	C		;2C3E ドライブ番号のチェック
	JR	NZ,02C4Ah	;2C3F
	INC	HL		;2C41
	INC	HL		;2C42
	LD	A,(HL)		;2C43
	SUB	E		;2C44 セクタ番号のチェック
	JR	NZ,02C4Ah	;2C45
	INC	HL		;2C47		;FAT16*済 call CMPSEC(3041h)	;in bank2/buf.mac BF_CMP
	LD	A,(HL)		;2C48
	SUB	D		;2C49
	POP	HL		;2C4A 
	RET			;2C4B Z=1 リード済み Z=0 違う
;-------------------------------------
;FLUSH bitのセット
	LD	HL,(0BBF6h)	;2C4C
	INC	HL		;2C4F
	INC	HL		;2C50
	INC	HL		;2C51
	SET	7,(HL)		;2C52
	RET			;2C54
;-------------------------------------
	PUSh	BC		;2C55
	PUSh	HL		;2C56
	CALL	03622h		;2C57
	POP	HL		;2C5A
	POP	BC		;2C5B
	DB	0FEh		;2C5C CP  F6h
	DB	0F6h		;2C5D OR  37h
	DB	37h		;2C5E SCF     ディスクバッファのフラッシュ
	CALL	02C81h		;2C5F BUFFER FLAG CHECK
	PUSh	HL		;2C62
	CALL	02CB3h		;2C63
	JR	Z,02CB1h	;2C66
	CALL	02D23h		;2C68 FLUSH
	JR	02C63h		;2C6B
;-----------------------
	DB	0F6h		;2C6D OR  37h
	DB	37h		;2C6E SCF
	CALL	02C81h		;2C6F
	PUSh	HL		;2C72
	CALL	02CB3h		;2C73
	JR	Z,02CB1h	;2C76
	CALL	02CCBh		;2C78
	INC	HL		;2C7B
	INC	HL		;2C7C
	LD	(HL),00h	;2C7D BUFFERを無効にする
	JR	02C73h		;2C7F
;----------------------------
	JR	C,02C8Ch	;2C81
	PUSh	HL		;2C83
	PUSh	BC		;2C84
	LD	BC,08h		;2C85
	ADD	HL,BC		;2C88
	LD	A,(HL)		;2C89
	POP	BC		;2C8A
	POP	HL		;2C8B
	PUSh	HL		;2C8C
	PUSh	DE		;2C8D
	PUSh	BC		;2C8E
	LD	B,A		;2C8F
	LD	HL,(0BBF8h)	;2C90
;-------------------
	LD	E,(HL)		;2C93
	INC	HL		;2C94
	LD	D,(HL)		;2C95
	INC	HL		;2C96
	LD	A,(HL)		;2C97 DRIVE
	INC	HL		;2C98
	RES	0,(HL)		;2C99 FLAG
	OR	A		;2C9B
	JR	Z,02CAAh	;2C9C 
	CP	B		;2C9E
	JR	Z,02CA8h	;2C9F 目的のドライブなら
	RLCA			;2CA1
	JR	C,02CAAh	;2CA2
	LD	A,B		;2CA4
	INC	A		;2CA5
	JR	NZ,02CAAh	;2CA6
	SET	0,(HL)		;2CA8 FLAGのbit0をセット
	LD	A,D		;2CAA
	OR	E		;2CAB
	EX	DE,HL		;2CAC
	JR	NZ,02C93h	;2CAD
;--------------------
	POP	BC		;2CAF
	POP	DE		;2CB0
	POP	HL		;2CB1
	RET			;2CB2
;-----------------------------------------
	LD	HL,(0BBF8h)	;2CB3
	PUSh	HL		;2CB6
	INC	HL		;2CB7
	INC	HL		;2CB8
	INC	HL		;2CB9
	BIT	0,(HL)		;2CBA FLAG CHECK
	RES	0,(HL)		;2CBC
	POP	HL		;2CBE
	RET	NZ		;2CBF
	LD	A,(HL)		;2CC0
	INC	HL		;2CC1
	LD	H,(HL)		;2CC2
	LD	L,A		;2CC3
	OR	H		;2CC4
	JR	NZ,02CB6h	;2CC5
	RET			;2CC7 Z=1 CHECK OK
;-------------------------------------------
	CALL	02D23h		;2CC8 FLUSH
	PUSh	DE		;2CCB DISK BUFFER LINK
	LD	DE,(0BBF8h)	;2CCC
	OR	A		;2CD0
	SBC	HL,DE		;2CD1
	ADD	HL,DE		;2CD3 
	JR	Z,02D12h	;2CD4 フラッシュしたBUFFER = BUFFER TOP
	PUSh	BC		;2CD6
	PUSh	HL		;2CD7
	LD	(0BBF8h),HL	;2CD8 をTOPにずらす
	LD	C,(HL)		;2CDB アドレスをリンク
	INC	HL		;2CDC
	LD	B,(HL)		;2CDD
	PUSh	BC		;2CDE
	LD	(HL),D		;2CDF
	DEC	HL		;2CE0
	LD	(HL),E		;2CE1
	EX	DE,HL		;2CE2
	LD	B,D		;2CE3
	LD	C,E		;2CE4
	CALL	02D14h		;2CE5
	POP	BC		;2CE8
	JR	02D0Ch		;2CE9
;-------------------------------------
;BUFFER LINK
	LD	A,(HL)		;2CEB
	INC	HL		;2CEC
	OR	(HL)		;2CED
	DEC	HL		;2CEE
	RET	Z		;2CEF
	PUSh	DE		;2CF0
	PUSh	BC		;2CF1
	PUSh	HL		;2CF2
	LD	E,(HL)		;2CF3
	INC	HL		;2CF4
	LD	D,(HL)		;2CF5
	PUSh	DE		;2CF6
	XOR	A		;2CF7
	LD	(HL),A		;2CF8
	DEC	HL		;2CF9
	LD	(HL),A		;2CFA
	LD	B,H		;2CFB
	LD	C,L		;2CFC
	LD	HL,0BBF8h	;2CFD
	CALL	02D14h		;2D00
	EX	DE,HL		;2D03
	POP	DE		;2D04
	LD	(HL),E		;2D05
	INC	HL		;2D06
	LD	(HL),D		;2D07
	DEC	HL		;2D08
	CALL	02D14h		;2D09
	EX	DE,HL		;2D0C
	LD	(HL),C		;2D0D
	INC	HL		;2D0E
	LD	(HL),B		;2D0F
	POP	HL		;2D10
	POP	BC		;2D11
	POP	DE		;2D12
	RET			;2D13
;-------------------------------------
	LD	E,(HL)		;2D14
	INC	HL		;2D15
	LD	D,(HL)		;2D16
	DEC	HL		;2D17
	EX	DE,HL		;2D18
	LD	A,H		;2D19
	OR	L		;2D1A
	RET	Z		;2D1B
	SBC	HL,BC		;2D1C
	ADD	HL,BC		;2D1E
	JR	NZ,02D14h	;2D1F
	OR	A		;2D21
	RET			;2D22
;--------------------------------------
;BUFFER FLUSH    DE=SECTOR NUMBER
	SET	1,(IY+29h)	;2D23
	PUSh	HL		;2D27
	INC	HL		;2D28
	INC	HL		;2D29
	LD	A,(HL)		;2D2A
	OR	A		;2D2B
	JR	Z,02D98h	;2D2C DRIVE=0 はBUFFERを使わない
	INC	HL		;2D2E
	BIT	7,(HL)		;2D2F
	JR	Z,02D98h	;2D31 FLUSHビットがセットされてない
	RES	7,(HL)		;2D33
	PUSh	DE		;2D35
	PUSh	BC		;2D36
	PUSh	IX		;2D37
;------------------------------
	PUSh	HL		;2D39
	BIT	6,(HL)		;2D3A 2EFAhでセットされる
	INC	HL		;2D3C
	LD	E,(HL)		;2D3D セクタ番号
	INC	HL		;2D3E
	LD	D,(HL)		;2D3F
	INC	HL		;2D40
	LD	B,(HL)		;2D41 02=FAT 01=DIR,DATA
	INC	HL		;2D42
	JR	Z,02D4Fh	;2D43
;--------------------------
	LD	A,E		;2D45 
	ADD	A,(HL)		;2D46 セクタ下位＋FATSIZE
	JR	NC,02D4Ah	;2D47		;FAT16*済 call FSIZE1(3F13h)	;in bank2/buf.mac BF_FLUSH
	INC	D		;2D49
	DJNZ	02D46h		;2D4A
	LD	E,A		;2D4C
	LD	B,01h		;2D4D
;------------------------
	PUSh	DE		;2D4F
	INC	HL		;2D50
	INC	HL		;2D51
	LD	E,(HL)		;2D52 DE=DPB
	INC	HL		;2D53
	LD	D,(HL)		;2D54
	INC	HL		;2D55
	EX	DE,HL		;2D56
	PUSh	DE		;2D57
	POP	IX		;2D58 BUFFER+0Bh データの初め
	LD	C,01h		;2D5A
	POP	DE		;2D5C セクタ
	PUSh	DE		;2D5D
;------------------------
	PUSh	DE		;2D5E
	PUSh	BC		;2D5F
	LD	B,01h		;2D60
	LD	A,(0F2CFh)	;2D62
	LD	C,A		;2D65
	LD	A,01h		;2D66 WRITE
	CALL	03263h		;2D68 DSKIO	;FAT16*済 call WRTBUF(3165h)	;in bank2/buf.mac BF_FLUSH (patched other position)
	POP	BC		;2D6B
	POP	DE		;2D6C
	JR	NZ,02D70h	;2D6D ERROR
	INC	C		;2D6F
	CP	0F1h		;2D70
	JR	NZ,02D77h	;2D72
	LD	BC,0101h	;2D74
	PUSh	AF		;2D77 ライト成功
	LD	A,E		;2D78
	ADD	A,(IX+0FCh)	;2D79 sector＋FATsize ;FAT16*済 call FSIZE2(3F1Bh)	;in bank2/buf.mac BF_FLUSH
	LD	E,A		;2D7C
	JR	NC,02D80h	;2D7D
	INC	D		;2D7F
	POP	AF		;2D80
	DJNZ	02D5Eh		;2D81
;-----------------------
	POP	DE		;2D83
	DEC	C		;2D84 1=DIR  2=FAT
	JR	NZ,02D91h	;2D85
	BIT	1,(IX+0F8h)	;2D87
	JR	NZ,02D8Eh	;2D8B
	SCF			;2D8D
	CALL	036A6h		;2D8E Z=0になるまで
	POP	HL		;2D91
	JR	Z,02D39h	;2D92
	POP	IX		;2D94
	POP	BC		;2D96
	POP	DE		;2D97
	POP	HL		;2D98
	RET			;2D99
;----------------------------------------------------
;FATの読み出し（クラスタチェインを読む ;in bank2/fat.mac FAT_LOOPKUP
	CALL	02E4Bh		;2D9A FATのアドレスを得る
	JR	Z,02DAFh	;2D9D
	XOR	A		;2D9F
	LD	(0BBEAh),A	;2DA0
	LD	A,0F2h		;2DA3 'Bad file allocation table'
	LD	DE,0FFFFh	;2DA5
	CALL	036A2h		;2DA8 エラー処理ルーチン
	JR	Z,02D9Fh	;2DAB
	JR	02DC6h		;2DAD
	PUSh	HL		;2DAF
	LD	A,(DE)		;2DB0
	LD	L,A		;2DB1
	INC	DE		;2DB2
	LD	A,(DE)		;2DB3
	JR	NC,02DBBh	;2DB4 偶数クラスタ
	LD	H,A		;2DB6
	CALL	02EACh		;2DB7 HL*10h
	LD	L,H		;2DBA
	AND	0Fh		;2DBB
	LD	H,A		;2DBD HL=クラスタ番号
	EX	DE,HL		;2DBE
	LD	HL,0FF7h	;2DBF 不良クラスタ
	SBC	HL,DE		;2DC2
	POP	HL		;2DC4
	RET	NC		;2DC5 Cy=0 クラスタ番号は0 - 0FF6h
	LD	DE,0FFFFh	;2DC6
	RET			;2DC9 Cy=1 ファイルの終了 
				;　　 Z=1 不良クラスタのチェックはしていない
;---------------------------------------------------
;クラスタからセクタの換算 ;in bank2/fat.mac CLU_TO_SEC
CLU_TO_SEC:
	PUSh	HL		;2DCA HL=DPB
	PUSh	BC		;2DCB
	LD	BC,0Bh		;2DCC
	ADD	HL,BC		;2DCF
	LD	B,(HL)		;2DD0 クラスタシフト
	EX	DE,HL		;2DD1
	DEC	HL		;2DD2
	DEC	HL		;2DD3
	DB	0Eh		;2DD4			;FAT16*済 ld c,a	;in bank2/fat.mac CLU_TO_SEC
	DB	29h		;2DD5 ADD  HL,HL	;FAT16*済 xor a	;in bank2/fat.mac CLU_TO_SEC
	DJNZ	02DD5h		;2DD6			;FAT16*済 jr 02h	;in bank2/fat.mac CLU_TO_SEC
	ADD	A,L		;2DD8 A=(BBBBh)=00 or 01;FAT16*済 add hl,hl	;in bank2/fat.mac CLU_TO_SEC
	LD	L,A		;2DD9			;FAT16*済 adc a,a	;in bank2/fat.mac CLU_TO_SEC
	EX	DE,HL		;2DDA			;FAT16*済 djnz fch	;in bank2/fat.mac CLU_TO_SEC
	LD	C,09h		;2DDB			;FAT16*済 ld  b,a	;in bank2/fat.mac CLU_TO_SEC
	ADD	HL,BC		;2DDD			;FAT16*済 ld  a,c	;in bank2/fat.mac CLU_TO_SEC
	LD	A,(HL)		;2DDE データ領域の先頭	;FAT16*済 add a,l	;in bank2/fat.mac CLU_TO_SEC
	INC	HL		;2DDF			;FAT16*済 ld  l,a	;in bank2/fat.mac CLU_TO_SEC
	LD	H,(HL)		;2DE0			;FAT16*済 ex  de,hl	;in bank2/fat.mac CLU_TO_SEC
	LD	L,A		;2DE1			;FAT16*済 ld  a,b	;in bank2/fat.mac CLU_TO_SEC
	ADD	HL,DE		;2DE2 セクタ番号	;FAT16*済 jp  GETSEC(3F00h)	;in bank2/fat.mac CLU_TO_SEC
	EX	DE,HL		;2DE3
	POP	BC		;2DE4
	POP	HL		;2DE5
	RET			;2DE6
;--------------------------------------------------------
;FATの書き込み
;BC=クラスタ番号 
	CALL	02EB6h		;2DE7 UNDELの可否をチェック
	PUSh	DE		;2DEA
	LD	A,B		;2DEB		;FAT16*済 jp FATWRT(30EAh)	;in bank2/fat.mac FAT_ASET/FAT_?SET
	CP	010h		;2DEC
	JR	C,02DF3h	;2DEE
	LD	BC,0FFFh	;2DF0 End of file
	CALL	02E4Bh		;2DF3 FATアドレスを得る
	JR	Z,02E09h	;2DF6
	LD	A,0FFh		;2DF8
	LD	(0BBEAh),A	;2DFA
	LD	A,0F2h		;2DFD 'Bad file allocation table'
	LD	DE,0FFFFh	;2DFF
	CALL	036A2h		;2E02 ERROR 
	JR	Z,02DF8h	;2E05
	JR	02E49h		;2E07
	PUSh	HL		;2E09
	JR	C,02E16h	;2E0A 奇数クラスタへ
	LD	A,C		;2E0C 偶数クラスタ
	LD	(DE),A		;2E0D
	INC	DE		;2E0E
	LD	A,(DE)		;2E0F
	AND	0F0h		;2E10
	OR	B		;2E12
	LD	(DE),A		;2E13
	JR	02E23h		;2E14
	LD	H,B		;2E16 奇数クラスタのFAT書き込み
	LD	L,C		;2E17
	CALL	02EACh		;2E18 HL*10h
	LD	A,(DE)		;2E1B
	AND	0Fh		;2E1C
	OR	L		;2E1E
	LD	(DE),A		;2E1F
	INC	DE		;2E20
	LD	A,H		;2E21
	LD	(DE),A		;2E22
	CALL	02C4Ch		;2E23 DISK BUFFERのFLUSH bitをセット
	BIT	0,(IY+29h)	;2E26 FATが２つのセクタにまたがるときにセット
	JR	Z,02E48h	;2E2A 正常終了へ
	LD	BC,08h		;2E2C FATが２つのセクタにまたがっているとき
	ADD	HL,BC		;2E2F
	LD	(HL),A		;2E30
	DEC	DE		;2E31
	LD	A,(DE)		;2E32
	LD	DE,(0BBA7h)	;2E33 FATのセクタ番号
	EX	(SP),IX		;2E37
	PUSh	AF		;2E39
	CALL	BF_FAT_SECTOR	;2E3A バッファに読む ;FAT16*済 call BUF_1(3127h)	;in bank2/fat.mac FAT_ASET/FAT_?SET (pacthed bank2/buf.mac BF_FAT_SECTOR)
	CALL	02C4Ch		;2E3D FLUSH SET
	LD	BC,0207h	;2E40
	ADD	HL,BC		;2E43
	POP	AF		;2E44
	LD	(HL),A		;2E45
	EX	(SP),IX		;2E46
	POP	HL		;2E48
	POP	DE		;2E49
	RET			;2E4A 
;--------------------------------------------------------------
;FATアドレスを得る
	PUSh	IX		;2E4B
	PUSh	BC		;2E4D
	PUSh	HL		;2E4E HL=DPB
	PUSh	HL		;2E4F
	POP	IX		;2E50
	RES	0,(IY+29h)	;2E52
	LD	L,(IX+16h)	;2E56 クラスタ総数
	LD	H,(IX+17h)	;2E59
	XOR	A		;2E5C
	SBC	HL,DE		;2E5D DE=クラスタ
	JR	C,02EA7h	;2E5F ERROR
	LD	H,D		;2E61
	LD	L,E		;2E62
	ADD	HL,HL		;2E63 クラスタ＊３／２
	ADD	HL,DE		;2E64
	SRL	H		;2E65
	RR	L		;2E67
	PUSh	AF		;2E69 フラグを保存
	PUSh	HL		;2E6A FATアドレス
	LD	E,H		;2E6B
	SRL	E		;2E6C
	LD	D,A		;2E6E
	LD	L,(IX+0Ch)	;2E6F FATの先頭セクタ
	LD	H,(IX+0Dh)	;2E72
	ADD	HL,DE		;2E75 FATのセクタ番号
	EX	DE,HL		;2E76
	CALL	BF_FAT_SECTOR	;2E77 バッファにread FAT  ;FAT16*済 BUF_1(3127h)	;in bank2/fat.mac FIND_FAT_ENTRY (pacthed bank2/buf.mac BF_FAT_SECTOR)
	LD	BC,0Bh		;2E7A
	ADD	HL,BC		;2E7D DISK BUFFERのデータの先頭アドレス
	POP	BC		;2E7E
	LD	A,B		;2E7F
	AND	01h		;2E80
	LD	B,A		;2E82
	ADD	HL,BC		;2E83 求めるFATのアドレス
	ADD	A,C		;2E84
	JR	NC,02EA2h	;2E85 正常終了へ
	LD	A,(HL)		;2E87 FATが２つのセクタに分かれている時
	SET	0,(IY+29h)	;2E88
	LD	(0BBA7h),DE	;2E8C
	LD	(0BBA5h),A	;2E90
	INC	DE		;2E93
	CALL	BF_FAT_SECTOR	;2E94			;FAT16*済 BUF_1(3127h)	;in bank2/fat.mac FIND_FAT_ENTRY (pacthed bank2/buf.mac BF_FAT_SECTOR)
	LD	BC,0Bh		;2E97
	ADD	HL,BC		;2E9A
	LD	A,(HL)		;2E9B
	LD	(0BBA6h),A	;2E9C
	LD	HL,0BBA5h	;2E9F
	EX	DE,HL		;2EA2
	POP	AF		;2EA3
	SBC	A,A		;2EA4
	CP	A		;2EA5
	RRCA			;2EA6
	POP	HL		;2EA7
	POP	BC		;2EA8
	POP	IX		;2EA9
	RET			;2EAB
	
	XOR	A		;2EAC
	ADD	HL,HL		;2EAD
	RLA			;2EAE
	ADD	HL,HL		;2EAF
	RLA			;2EB0
	ADD	HL,HL		;2EB1
	RLA			;2EB2
	ADD	HL,HL		;2EB3
	RLA			;2EB4
	RET			;2EB5
;---------------------------------------------------
;UNDEL
	PUSh	HL		;2EB6
	EX	(SP),IX		;2EB7
	BIT	0,(IX+18h)	;2EB9 UNDEL FLAG 00=不可 00<>可
	JR	Z,02F2Ah	;2EBD UNDEL不可ならそのまま戻る
	XOR	A		;2EBF 
	JR	02ED3h		;2EC0 UNDEL可能状態でファイルを作成
;--------------------------------------------------
;DELで来る？
	PUSh	HL		;2EC2
	EX	(SP),IX		;2EC3
	BIT	7,(IX+19h)	;2EC5 ?
	JR	NZ,02F2Ah	;2EC9 そのまま戻る
	BIT	0,(IX+18h)	;2ECB
	JR	NZ,02F2Ah	;2ECF UNDEL可能なファイルがあるときは戻る
	LD	A,01h		;2ED1
	PUSh	BC		;2ED3
	PUSh	DE		;2ED4
	LD	B,(IX+0Eh)	;2ED5 ?
	DEC	B		;2ED8
	JR	Z,02F0Ah	;2ED9 (IX+0Eh)=01
	LD	E,(IX+0Ch)	;2EDB FATの先頭
	LD	D,(IX+0Dh)	;2EDE
	LD	B,(IX+11h)	;2EE1 FAT SIZE  B=0なら100h
;-----------------------------------------------------------
	PUSh	BC		;2EE4 FATのチェック
	PUSh	AF		;2EE5 A=00 or 01
	DEC	A		;2EE6
	LD	B,00h		;2EE7 B=00はBUFFERにリードしない
	JR	NZ,02EF0h	;2EE9
	CALL	BF_SECTOR	;2EEB			;FAT16*済 BUF_3(314Bh)	;in bank2/fat.mac DIRTY_DISK (patched with bank2/buf.mac BF_SECTOR)
	JR	02EFDh		;2EEE
;-------------------------------------
	CALL	BF_FAT_SECTOR	;2EF0 BUFFER READ	;FAT16*済 BUF_1(3127h)	;in bank2/fat.mac DIRTY_DISK (patched bank2/buf.mac BF_FAT_SECTOR)
	CALL	02D23h		;2EF3 FLUSH
	PUSh	HL		;2EF6
	CALL	02C4Ch		;2EF7 FLUSH bit SET
	SET	6,(HL)		;2EFA
	POP	HL		;2EFC
	CALL	02CC8h		;2EFD BUFFER FLUSH & LINK
	INC	HL		;2F00
	INC	HL		;2F01
	LD	(HL),00h	;2F02
	POP	AF		;2F04
	POP	BC		;2F05
	INC	DE		;2F06
	DJNZ	02EE4h		;2F07
;-------------------------------------------------------
	LD	B,A		;2F09
	LD	A,B		;2F0A B=00 or 01
	CP	(IX+18h)	;2F0B CP UNDEL FLAG
	JR	Z,02F28h	;2F0E
	PUSh	BC		;2F10
	LD	DE,00h		;2F11 BOOT SECTOR READ
	LD	B,01h		;2F14
	CALL	BF_SECTOR	;2F16			;FAT16*済 BUF_3(314Bh)	;in bank2/fat.mac DIRTY_DISK (patched with bank2/buf.mac BF_SECTOR)
	CALL	02CCBh		;2F19 BUFFER LINK
	CALL	02C4Ch		;2F1C FLUSH SET
	LD	DE,02Eh		;2F1F
	ADD	HL,DE		;2F22
	POP	BC		;2F23
	LD	(HL),B		;2F24 BOOT SECTOR +26h UNDEL FLAG SET
	LD	(IX+18h)B	;2F25 DPB +18h UNDEL FLAG SET
	POP	DE		;2F28
	POP	BC		;2F29
	EX	(SP),IX		;2F2A
	POP	HL		;2F2C
	RET			;2F2D
;----------------------------------------------------------
;FAT初期化(RAM DISK)
	LD	DE,00h		;2F2E
	LD	C,A		;2F31
	LD	B,0Fh		;2F32
	CALL	02DE7h		;2F34 FAT WRITE
	INC	DE		;2F37
	LD	BC,0FFFFh	;2F38
	CALL	02DE7h		;2F3B FAT WRITE
	INC	DE		;2F3E クラスタ２〜クラスタ総数まで
	LD	BC,00h		;2F3F FATに00を書き込む
	CALL	02DE7h		;2F42
	PUSh	HL		;2F45
	LD	BC,016h		;2F46
	ADD	HL,BC		;2F49
	LD	A,(HL)		;2F4A
	INC	HL		;2F4B
	LD	H,(HL)		;2F4C
	LD	L,A		;2F4D
	SBC	HL,DE		;2F4E
	POP	HL		;2F50
	JR	NZ,02F3Eh	;2F51
	RET			;2F53
;--------------------------------------------------
;ファイル、サブディレクトリの作成
;戻り値: Z=1 正常
	LD	(0BBAAh),A	;2F54 A=FFhならSUB DIR
	PUSh	DE		;2F57
	PUSh	BC		;2F58 サーチ回数  SUB DIRの時は0001h
	LD	DE,0FFFFh	;2F59
	LD	(0BBA3h),DE	;2F5C
	PUSh	DE		;2F60
	LD	DE,01h		;2F61 クラスタ番号
	JR	02F68h		;2F64
;---------------------------------------
;空きクラスタサーチ
	PUSh	BC		;2F66
	PUSh	DE		;2F67 FATCHAINを書き込むクラスタ番号0002h -
	INC	DE		;2F68
	PUSh	HL		;2F69
	LD	BC,016h		;2F6A
	ADD	HL,BC		;2F6D
	LD	A,(HL)		;2F6E
	INC	HL		;2F6F
	LD	H,(HL)		;2F70
	LD	L,A		;2F71
	SBC	HL,DE		;2F72
	POP	HL		;2F74
	JR	C,02FADh	;2F75 クラスタ総数に達したら終了
	PUSh	DE		;2F77 クラスタ
	CALL	02D9Ah		;2F78 FATリード	;FAT16*済 call FATRED(0D95h)	;in bank2/fat.mac AL_CLUSTERS (patched bank2/fat.mac FAT_LOOKUP)
	LD	A,D		;2F7B
	OR	E		;2F7C
	POP	DE		;2F7D
	JR	NZ,02F68h	;2F7E 空きクラスタではない
	LD	B,D		;2F80 空きクラスタ番号
	LD	C,E		;2F81
	POP	DE		;2F82
	PUSh	BC		;2F83		;FAT16*済 call CLST_5(0D4Ch)	;in bank2/fat.mac AL_CLUSTERS
	BIT	7,D		;2F84 SUB DIRなら D=FFh Z=0
	JR	Z,02F8Ch	;2F86 FILE
	LD	(0BBA3h),BC	;2F88 SUB DIRのとき空きクラスタ番号
	CALL	Z,02DEAh	;2F8C FAT WRITE
	POP	DE		;2F8F
	LD	A,(0BBAAh)	;2F90 FFh=SUB DIR
	OR	A		;2F93
	CALL	NZ,02FBDh	;2F94 SUB DIRの初期化
	POP	BC		;2F97
	DEC	BC		;2F98
	LD	A,B		;2F99
	OR	C		;2F9A
	JR	NZ,02F66h	;2F9B
;--------------------------------------------
	LD	BC,0FFFFh	;2F9D
	CALL	02DEAh		;2FA0 FATに終了コードを書き込み
	CALL	02EB6h		;2FA3 UNDELの可否
	LD	BC,(0BBA3h)	;2FA6
	POP	DE		;2FAA
	XOR	A		;2FAB
	RET			;2FAC
;---------------------------------------
;空きクラスタなし
	POP	DE		;2FAD
	POP	DE		;2FAE
	LD	DE,(0BBA3h)	;2FAF		;FAT16*済 call CLST_6(0D51h)	;in bank2/fat.mac AL_CLUSTERS
	BIT	7,D		;2FB3		;FAT16*済 00,00,00	;in bank2/fat.mac AL_CLUSTERS
	CALL	Z,FR_CHAIN	;2FB5 FATを00にする
	POP	DE		;2FB8
	LD	A,0D4h		;2FB9 DISK FULL
	OR	A		;2FBB
	RET			;2FBC
;-------------------------------------------------------------
;ディレクトリの初期化
	PUSh	DE		;2FBD
	LD	A,D		;2FBE DE=0はRAMDISK
	OR	E		;2FBF
	JR	NZ,02FD8h	;2FC0 SUB DIRの初期化
	PUSh	HL		;2FC2 RAMDISKのRoot directory
	LD	BC,012h		;2FC3
	ADD	HL,BC		;2FC6
	LD	C,(HL)		;2FC7 DIRの先頭
	INC	HL		;2FC8
	LD	B,(HL)		;2FC9
	INC	HL		;2FCA
	LD	E,(HL)		;2FCB データ領域の先頭
	INC	HL		;2FCC
	LD	D,(HL)		;2FCD
	LD	H,D		;2FCE
	LD	L,E		;2FCF
	SBC	HL,BC		;2FD0 ディレクトリの大きさを求める
	LD	B,L		;2FD2		;FAT16*済 call BUF_5(312Eh)	;in bank2/fat.mac ZERO_CLUSTER
	DEC	B		;2FD3
	DEC	DE		;2FD4
	POP	HL		;2FD5
	JR	02FE3h		;2FD6
;------------------------------------
	PUSh	HL		;2FD8 サブディレクトリの初期化
	LD	BC,0Ah		;2FD9
	ADD	HL,BC		;2FDC
	LD	B,(HL)		;2FDD クラスタマスク
	POP	HL		;2FDE
	LD	A,B		;2FDF 初期化はSUB DIRセクタの後ろから行うため
	CALL	CLU_TO_SEC	;2FE0 セクタ換算の時クラスタマスクを足す
	LD	A,B		;2FE3
	INC	A		;2FE4
	POP	BC		;2FE5
	PUSh	HL		;2FE6
	EX	(SP),IX		;2FE7
	PUSh	BC		;2FE9
	LD	B,A		;2FEA クラスタマスク＋１回（１クラスタ分）
	PUSh	BC		;2FEB
	JR	NZ,02FF1h	;2FEC
	CALL	02CCBh		;2FEE
	LD	B,00h		;2FF1
	CALL	BF_SECTOR	;2FF3 BUFFERにリード ;FAT16*済 call BUF_2(3146h)	;in bank2/fat.mac ZERO_CLUSTER (patched with bank2/buf.mac BF_SECTOR)
	PUSh	HL		;2FF6
	LD	BC,0Bh		;2FF7
	ADD	HL,BC		;2FFA
	XOR	A		;2FFB
	LD	(HL),A		;2FFC ディレクトリの初期化
	INC	HL		;2FFD
	LD	(HL),A		;2FFE
	INC	HL		;2FFF
	DJNZ	02FFCh		;3000
	CALL	02C4Ch		;3002 FLUSH SET
	POP	HL		;3005
	POP	BC		;3006
	DEC	DE		;3007
	XOR	A		;3008
	DJNZ	02FEBh		;3009
	POP	DE		;300B
	EX	(SP),IX		;300C
	POP	HL		;300E
	RET			;300F
;-------------------------------------------------------
;クラスタチェインを空き状態にする
FR_CHAIN:
	PUSh	DE		;3010 空きにするクラスタ番号
	CALL	02D9Ah		;3011 FAT READ	;FAT16*済 call FATRED(0D95h)	;in bank2/fat.mac FR_CHAIN (patched bank2/fat.mac FAT_LOOKUP)
	POP	BC		;3014
	PUSh	DE		;3015
	LD	D,B		;3016
	LD	E,C		;3017
	LD	BC,00h		;3018
	CALL	02DEAh		;301B FATに00を書き込む
	POP	DE		;301E
	LD	A,D		;301F
	OR	E		;3020
	RET	Z		;3021 0000hを読み出した;FAT16*済 call CLST_7(0D59h)	;in bank2/fat.mac
	BIT	7,D		;3022
	JR	Z,FR_CHAIN	;3024
	RET			;3026 FFFFhを読み出した
;-----------------------------------------------------------
;3031h 〜 3181hにFAT16パッチのプログラムを置く

;FORMAT
	LD	A,04h		;3027 
	CALL	034F0h		;3029 DISK ROM 4019h CALL
	RET	NZ		;302C
	LD	A,E		;302D
	OR	D		;302E
	RET	Z		;302F
	PUSh	HL		;3030
	EX	(SP),IX		;3031
	EX	DE,HL		;3033
	LD	A,(IX+0h)	;3034
	CALL	0Ch		;3037
	EX	DE,HL		;303A
	EX	(SP),IX		;303B
	POP	HL		;303D
	OR	A		;303E
	LD	A,0F0h		;303F ERROR 'Cannot format this drive'
	RET	Z		;3041
	XOR	A		;3042
	RET			;3043
;--------------------------------------------
	BIT	7,A		;3044
	JR	NZ,03053h	;3046
	LD	E,C		;3048
	LD	C,D		;3049
	LD	D,B		;304A
	LD	B,A		;304B
	LD	A,05h		;304C DSKFMT
	CALL	034F0h		;304E DISK ROM 401Ch CALL
	RET	NZ		;3051
	INC	A		;3052
	PUSh	AF		;3053
	LD	IX,0B6D4h	;3054 ワークにブートセクタをリード
	LD	DE,00h		;3058
	LD	B,01h		;305B
	LD	A,(0F2CFh)	;305D
	LD	C,A		;3060
	LD	A,00h		;3061 READ
	CALL	034F0h		;3063 DSKIO
	POP	BC		;3066
	RET	NZ		;3067
	PUSh	BC		;3068
	CALL	03362h		;3069 ブートセクタのDISK情報チェック
	LD	DE,01h		;306C
	JR	NZ,03077h	;306F
	LD	E,(IX+0Eh)	;3071 FATを読む
	LD	D,(IX+0Fh)	;3074
	LD	B,01h		;3077
	LD	A,(0F2CFh)	;3079
	LD	C,A		;307C
	LD	A,00h		;307D
	CALL	034F0h		;307F
	POP	BC		;3082
	RET	NZ		;3083
	LD	A,(IX+01h)	;3084 FAT+1,+2が FFh,FFhのチェック
	AND	(IX+02h)	;3087
	INC	A		;308A
	JR	NZ,030FAh	;308B ERROR 'Not a DOS disk'
	LD	A,(IX+0h)	;308D
	CP	0F8h		;3090 FAT ID CHECK
	JR	C,030FAh	;3092 ERROR 'Not a DOS disk'
	LD	C,A		;3094
	PUSh	BC		;3095 FAT IDを保存
	LD	DE,00h		;3096 ブートセクタの読み出し
	LD	B,01h		;3099
	LD	A,(0F2CFh)	;309B
	LD	C,A		;309E
	LD	A,00h		;309F
	CALL	034F0h		;30A1
	POP	BC		;30A4
	RET	NZ		;30A5
	PUSh	BC		;30A6
	LD	A,C		;30A7 FAT ID
	CALL	0339Eh		;30A8 GET DPB
	POP	BC		;30AB
	RET	NZ		;30AC ERROR
	BIT	0,B		;30AD
	JR	Z,030EBh	;30AF
	PUSh	HL		;30B1
	CALL	032DFh		;30B2 'VOL ID' 文字列サーチ
	JR	Z,030CDh	;30B5 RIGHT
;-------------------------
	LD	HL,03108h	;30B7 'VOL ID･･･ データ転送
	LD	DE,0B6F2h	;30BA
	LD	BC,099h		;30BD
	LDIR			;30C0
	EX	DE,HL		;30C2
	LD	DE,0FFB7h	;30C3
	LD	(HL),B		;30C6 残りを00hで埋める
	INC	HL		;30C7 
	INC	DE		;30C8
	LD	A,D		;30C9
	OR	E		;30CA
	JR	NZ,030C6h	;30CB
;-----------------------
	LD	HL,(0F2BAh)	;30CD VOL IDの作成
	LD	A,(0F2BCh)	;30D0
	LD	B,A		;30D3
	XOR	A		;30D4
	SRL	L		;30D5
	RLA			;30D7
	SRL	h		;30D8
	RLA			;30DA
	SRL	B		;30DB
	RLA			;30DD
	LD	C,A		;30DE
	LD	(0B6FBh),HL	;30DF VOL ID書き込み
	LD	(0B6FDh),BC	;30E2
	XOR	A		;30E6
	LD	(0B6FAh),A	;30E7
	POP	HL		;30EA
	LD	DE,00h		;30EB ブートセクタの書き込み
	LD	B,01h		;30EE
	LD	A,(0F2CFh)	;30F0
	LD	C,A		;30F3
	LD	A,01h		;30F4
	CALL	034F0h		;30F6
	RET			;30F9
	LD	A,0F6h		;30FA 'Not a DOS disk'
	RET			;30FC
;------------------------------------------
	DB	0EBh,0FEh,90h	;30FD
	DB	'MSXDOS23'
	
	DB	18h,10h		;3108
	DB	'VOL_ID'
	DB	0,0FFh,0FFh,0FFh,0FFh
	DB	0,0,0,0,0
	
	RET	NC		;311A
	LD	(0C06Ah),DE	;311B
	LD	(0C072h),A	;311F
	LD	(HL),067h	;3122
	INC	HL		;3124
	LD	(HL),0C0h	;3125
	LD	SP,0F51Fh	;3127
	LD	DE,0C0ABh	;312A
	LD	C,0Fh		;312D
	CALL	0F37Dh		;312F
	INC	A		;3132
	JR	Z,0315Bh	;3133
	LD	DE,0100h	;3135
	LD	C,01Ah		;3138
	CALL	0F37Dh		;313A
	LD	HL,01h		;313D
	LD	(0C0B9h),HL	;3140
	LD	HL,03F00h	;3143
	LD	DE,0C0ABh	;3146
	LD	C,027h		;3149
	CALL	0F37Dh		;314B
	JP	0100h		;314E
	LD	L,C		;3151
	RET	NZ		;3152
	CALL	00h		;3153
	LD	A,C		;3156
	AND	0FEh		;3157
	SUB	02h		;3159
	OR	00h		;315B
	JP	Z,04022h	;315D
	LD	DE,0C085h	;3160
	LD	C,09h		;3163
	CALL	0F37Dh		;3165
	LD	C,07h		;3168
	CALL	0F37Dh		;316A
	JR	03127h		;316D
	
	DB	'Boot error',0Dh,0Ah
	DB	'Press any key for retry'
	DB	0Dh,0Ah,24h,0
	DB	'MSXDOS  SYS'
	
	
;*******************************************************************
;PATCH2   03031h - 
;buffer+8にセクタ番号のbit16-23を入れる

3031h:					;2BDBh call 3031h
SECNUM:	;*済				;2BDEh inc  hl
	BIT	7,(IX+1Dh)		;2BDFh ld   (hl),a
	LD	A,0
	JR	NZ,SECN_1	;FAT12 drive
	LD	A,(DSKEX)	;FAT16 drive (3FF7h)
SECN_1:	LD	C,(IX+11h)
	LD	(HL),C
	RET
	
	
;-----------------------------------------------
;バッファのセクタ番号を比較
3041h:				;2C51h  call 3041h
CMPSEC:	;*済
	INC	HL
	LD	A,(HL)
	SUB	D
	RET	NZ		;Z=0 different sector
	BIT	7,(IX+1Dh)
	JR	Z,CMPS_1	;FAT16drive
	XOR	A
	RET			;Z=1 FAT12drive
CMPS_1:	LD	A,(DSKEX)	;(3FF7h)
	INC	HL
	INC	HL
	INC	HL
	CP	(HL)		;bit16-23 of sector number
	RET
	

;------------------------------------------------------
;Set to bit16-23 of sector number at registerC
3055h:				;355Eh call 3055h
SETNUM:	;*済
	PUSH	AF		;#3540 (#3554)
	LD	A,(IX+1Dh)
	BIT	7,A
	JR	NZ,MED_ID	;FAT12
	LD	A,(RW_16)	;(3FFCh)
	LD	C,A		;FAT16drive C=bit16-23
	POP	AF
	RET
MED_ID:	LD	C,A		;C=MEDIA ID
	POP	AF
	RET
	
;-------------------------------------------------------
;Total of cluster
3066h:				;348Ah jp 3066h
TALCLS:	;*済
	LD	A,L		;HL=BOOT +13h,14h
	OR	H
	JR	Z,WINFMT	;Format with Windows95
	SBC	HL,DE
PAT_37:	JP	3483h+0Ah	;12bitFAT

WINFMT:	LD	L,(IX+20h)	;Cluster size
	LD	H,(IX+21h)
	LD	A,(IX+22h)
	OR	A
	SBC	HL,DE
	SBC	A,0
WINFM_:	DEC	C
PAT_38:	JP	Z,348Dh+0Ah
	SRL	A
	RR	H
	RR	L
	JR	WINFM_

;-----------------------------
;DISK BUFFER
3089h:				;2667h jp  3089h
DSKBUF:	;*済
	SBC	HL,BC
	PUSH	AF
	PUSH	DE
	DEC	DE
	DEC	DE
	DEC	DE
	EX	DE,HL
	LD	A,(HL)		;Drive number of buffer
	DEC	A
	ADD	A,A
	LD	HL,0BA25h	;(DRIVE-1)*2+BA25h=(DPB address)
	ADD	A,L
	LD	L,A
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	ADD	A,1Dh
	LD	L,A
	LD	A,0
	ADC	A,H		;HL=DPB+1Dh media ID
	BIT	7,(HL)		;z=1 FAT16drive z=0 FAT12drive
	EX	DE,HL
	POP	DE
	JR	Z,CALUC		;FAT16drive
	POP	AF
	POP	BC
PAT_3E:	JP	2660h+0Ah
	
CALUC:
	POP	AF
	PUSH	DE
	INC	DE
	INC	DE
	INC	DE
	LD	A,(DE)
	LD	BC,(BIT16)	;(3FF6h)
	SBC	A,C
	POP	DE
	POP	BC
	INC	A
PAT_3F:	JP	NZ,2679h+0Ah
	LD	A,L
	ADD	A,B
	JR	NC,PAT_40
	LD	A,0
	ADC	A,H
PAT_40:	JP	2666h+0Ah

;-------------------------------------
30C8h:				;1CCEh call 30C8h
GETSUB:	;*済
PAT_43:	CALL	2DCAh+0Ah	;セクタ換算
	LD	A,(BIT16)	;(3FF6h)
	LD	(SDIR_1),A	;(3FF8h)
	RET

30D2h:				;1CAFh call 30D2h
SUB_16:	;*済			;1CB2h 00
	INC	DE
	LD	A,D
	OR	E
	JR	NZ,SUB_
	NOP
	LD	A,(SDIR_1)	;(3FF8h)
	INC	A
	LD	(SDIR_1),A	;(3FF8h)
SUB_:	LD	A,(0BBE1h)
	RET
	
;-------------------------------------
;SECTER READ/WRITE
30E3h:				;25A6h  call 30E3h
ABSSEC:	;*済
	XOR	A
	LD	(BIT16),A	;(3FF6h)
PAT_44:	JP	25ADh+0Ah


;-----------------------------------------------------------
;FAT WRITE
30EAh:				;2DF5h  jp 30EAh
FATWRT:	;*済
	CALL	CHKDRV		;(0E09h)
	JR	Z,FATWR2	;16bit FAT
	LD	A,B
	CP	10h
PAT_33:	JP	2DEEh+0Ah	;12bit FAT

FATWR2:	
	CALL	FATADR		;(0DD0h) Get address
	JR	Z,FATWR3	;Right routine
	LD	A,0FFh
	LD	(0BBEAh),A
FATWR4:	LD	A,0F2h
	LD	DE,0FFFFh
PAT39:	CALL	36A2h+0Ah
	JR	Z,FATWR4
PAT_35:	JP	2E49h+0Ah	;Error
FATWR3:	PUSH	HL
	LD	A,C
	LD	(DE),A		;FAT write
	INC	DE
	LD	A,B
	LD	(DE),A
PAT_34:	JP	2E23h+0Ah	;Return



;----------------------------------------------------------
;Set sector number at #BBB4
3115h:				;260Dh  call 3115h
NUM_1:	;*済
	LD	(0BBB4h),HL
	RET	NC
SECINC:	LD	A,(BIT16)	;(3FF6h)
	INC	A
	LD	(BIT16),A	;(3FF6h)
	RET

3121h:				;264Bh  call 3121h
NUM_2:	;*済
	INC	(IY+35h)
	RET	NZ
	JR	SECINC

;-----------------------------------------------
3127h:				;0C22h  call 3127h
				;2E44h
				;2E81h
				;2E9Eh
	;*済			;2EFAh
BUF_1:	XOR	A
	LD	(DSKEX),A	;(3FF7h)
PAT_31:	JP	2B7Eh+0Ah


312Eh:	;*済			;2FDCh  call 312Eh
BUF_5:	XOR	A		
	LD	(BIT16),A	;(3FF6h)
	LD	B,L
	DEC	B
	DEC	DE
	RET

3136h:	;*済			;1D08h  call 3136h
BUF_4:	LD	BC,(DE_START)	;SUB DIR? ROOT?
	INC	BC
	LD	A,B
	OR	C
	LD	B,01h
	JR	Z,BUF_3		;(BBE8)=FFFF
	LD	A,(SDIR_1)	;(3FF8h)
	JR	BUF_

3146h:				;1B3Eh  call 3146h
				;26DFh
	;*済			;2FFDh
BUF_2:	LD	A,(BIT16)	;(3FF6h)
	JR	BUF_

314Bh:				;2EF5h  call 314Bh
	;*済			;2F20h
BUF_3:	XOR	A
BUF_:	LD	(DSKEX),A	;(3FF7h)
PAT_3D:	JP	2B8Ch+0Ah

;--------------------------------------------------------------
;Read a sector for ランダムブロックアクセス
3152h:				;25EBh  call 3152h
RAMRED:	;*済
	PUSH	AF
	LD	A,(BIT16)	;(3FF6h)
	LD	(RW_16),A	;(3FFCh)write bit16-23 of sector number 
	LD	DE,(0BBB4h)
	POP	AF
	RET


;------------------------------------------------------------
;Read/write a sector for buffer
315Fh:				;2C16h  call 315Fh
REDBUF:	;*済
	PUSH	AF
	LD	A,(DSKEX)	;(3FF7h)
	JR	REDB_1

3165h:				;2D72h  call 3165h
WRTBUF:	;*済
	PUSH	AF
	LD	A,(IX+0FDh)	;bit16-23
REDB_1:	LD	(RW_16),A	;(3FFCh) bit16-23 of sector number
	POP	AF
PAT_36:	JP	3263h+0Ah

;---------------------------------
3170h:				;34FAh  jp 3170h
DSKROM:	;*済
	CP	06h
PAT_41:	JP	NC,3539h+0Ah
	CP	02h
	JR	NC,PAT_42
	PUSH	AF
	XOR	A
	LD	(RW_16),A	;(3FFCh)
	POP	AF
PAT_42:	JP	34F4h+0Ah



;--------------------------------------------

	LD	A,C		;31A1 ドライブ番号
	CALL	03622h		;31A2
	LD	(0BBEBh),A	;31A5 ドライブ番号
	LD	E,(HL)		;31A8 DE=内部ワークにあるドライブ情報アドレス
	INC	HL		;31A9
	LD	D,(HL)		;31AA
	LD	A,D		;31AB
	OR	E		;31AC
	LD	A,C		;31AD
	RET	Z		;31AE
	PUSh	DE		;31AF
	DEC	B		;31B0
	JR	NZ,0321Fh	;31B1
	PUSh	IX		;31B3
	POP	HL		;31B5
	LD	BC,01Ah		;31B6
	ADD	HL,BC		;31B9
	EX	DE,HL		;31BA
	POP	HL		;31BB
	CALL	03643h		;31BC 対応するドライブのドライブ情報＋９を設定
	PUSh	IX		;31BF
	PUSh	HL		;31C1
	LD	C,09h		;31C2
	ADD	HL,BC		;31C4
	LD	A,(HL)		;31C5 ドライブ情報＋９のフラグ
	OR	A		;31C6
	JR	Z,031DAh	;31C7 フラグ＝０はVOL比較、flushしない
	LD	C,010h		;31C9
	ADD	HL,BC		;31CB
	LD	C,A		;31CC
	PUSh	DE		;31CD
	CALL	03307h		;31CE VOL_NO比較
	POP	DE		;31D1
	JR	Z,031E3h	;31D2 交換されていない
	LD	A,(0BBEBh)	;31D4 交換されていたら
	CALL	02C5Eh		;31D7 バッファのFLUSH
	POP	HL		;31DA
	CALL	03311h		;31DB ドライブ情報設定
	PUSh	HL		;31DE
	LD	C,01h		;31DF
	JR	031F5h		;31E1
	POP	HL		;31E3
	PUSh	HL		;31E4
	DEC	C		;31E5
	JR	Z,031F0h	;31E6
	DEC	C		;31E8
	JR	NZ,0320Dh	;31E9
	CALL	032A8h		;31EB フラグ=2のときだけDSKCHGを実行
	JR	Z,0320Dh	;31EE
	CALL	03311h		;31F0 ドライブ情報設定
	LD	C,00h		;31F3
	CALL	03269h		;31F5
	PUSh	DE		;31F8
	CALL	032DFh		;31F9
	POP	DE		;31FC
	CALL	03307h		;31FD VOL ID 比較
	POP	HL		;3200
	PUSh	HL		;3201
	JR	NZ,0320Fh	;3202
	DEC	C		;3204
	JR	NZ,0320Dh	;3205
	CALL	0341Dh		;3207 BOOT情報からドライブ情報書き込み
	CALL	02C6Dh		;320A DISK BUFFERを無効にする
	JR	0325Eh		;320D
;---------------------------------------------
	LD	A,0F4h		;320F 'Wrong disk for file'
	LD	DE,0FFFFh	;3211
	CALL	036A5h		;3214
	POP	HL		;3217
	JR	NZ,03245h	;3218
	POP	IX		;321A
	PUSh	HL		;321C
	JR	031B3h		;321D
;----------------------------------------------
	POP	HL		;321F
	CALL	02C5Dh		;3220 DISK BUFFERのフラッシュ
	CALL	03643h		;3223 ドライブ情報＋９の設定
	PUSh	IX		;3226 IX=B9DAh
	PUSh	HL		;3228 HL=ドライブ情報のアドレス
	LD	DE,09h		;3229
	ADD	HL,DE		;322C
	LD	A,(HL)		;322D
	POP	HL		;322E
	DEC	B		;322F
	JR	Z,0324Bh	;3230
	OR	A		;3232
	JR	Z,03242h	;3233
	DEC	A		;3235
	JR	Z,03242h	;3236
	DEC	A		;3238
	JR	NZ,0324Eh	;3239
	CALL	032A8h		;323B ドライブ情報+9=2のときだけDSKCHGを実行
	JR	C,03242h	;323E
	JR	Z,0324Eh	;3240
	CALL	03311h		;3242 ドライブ情報 SET
	CALL	0341Dh		;3245 BOOT情報からドライブ情報書き込み
	CALL	02C6Dh		;3248 DISK BUFFERを無効にする
	CALL	03269h		;324B ドライブ情報+9を7にする
	POP	DE		;324E
	PUSh	DE		;324F
	PUSh	HL		;3250
	LD	BC,019h		;3251
	ADD	HL,BC		;3254
	EX	DE,HL		;3255
	LD	C,01Ah		;3256
	ADD	HL,BC		;3258
	EX	DE,HL		;3259
	LD	C,04h		;325A
	LDIR			;325C ドライブ情報+19hのVOL_NOをB9DAh+1Ahに転送
	POP	HL		;325E
	POP	IX		;325F
	XOR	A		;3261
	RET			;3262
;-----------------------------------------------------
;disk access
;IX=DTA  DE=sectornumber  B=sector size  C=segment
;A=00(READ) or 01(WRITE)

RW_UNIT:
	CALL	03278h		;3263 DPB
	CALL	034F0h		;3266 disk-ROM	;FAT16 call 34FEh	;in bank2/var.mac RW_UNIT
	PUSh	HL		;3269
	CALL	03643h		;326A
	EX	(SP),IX		;326D
	LD	(IX+9h),07h	;326F DPB+09h
	EX	(SP),IX		;3273
	POP	HL		;3275
	OR	A		;3276
	RET			;3277
;-----------------------------------------
	CALL	03643h		;3278
	PUSh	AF		;327B
	PUSh	DE		;327C
	PUSh	HL		;327D
	LD	DE,09h		;327E
	ADD	HL,DE		;3281
	LD	A,02h		;3282
	CP	(HL)		;3284
	POP	HL		;3285
	JR	C,032A5h	;3286
	PUSh	BC		;3288
	CALL	Z,032A8h	;3289
	JR	Z,032A4h	;328C
	PUSh	IX		;328E
	CALL	03311h		;3290 DPB SET
	CALL	032C9h		;3293
	JR	Z,032A2h	;3296
	LD	A,0F5h		;3298 'Wrong disk'
	LD	DE,0FFFFh	;329A
	CALL	036A5h		;329D
	JR	03290h		;32A0
	POP	IX		;32A2
	POP	BC		;32A4
	POP	DE		;32A5
	POP	AF		;32A6
	RET			;32A7
;-----------------------------------------
	PUSh	BC		;32A8
	PUSh	DE		;32A9
	LD	A,02h		;32AA DSKCHG
	CALL	034F0h		;32AC
	JR	Z,032BBh	;32AF 正常終了
	CP	0FCh		;32B1 'Not ready'
	LD	DE,0FFFFh	;32B3
	CALL	Z,036A5h	;32B6
	LD	B,0FFh		;32B9
	DEC	B		;32BB
	JR	Z,032C6h	;32BC 交換されていない
	INC	B		;32BE
	JR	NZ,032C6h	;32BF 交換された
	LD	A,(0F2ECh)	;32C1 A=0 DISK検査有効 A=FF 無効
	INC	A		;32C4
	SCF			;32C5
	POP	DE		;32C6
	POP	BC		;32C7
	RET			;32C8
;------------------------------------------
	PUSh	HL		;32C9
	CALL	032DFh		;32CA 'VOL_ID' SEARCH
	EX	DE,HL		;32CD
	POP	HL		;32CE
	PUSh	HL		;32CF
	LD	BC,019h		;32D0
	ADD	HL,BC		;32D3
	CALL	03307h		;32D4 VOL ID CHECK
	JR	NZ,032DDh	;32D7
	LD	A,(HL)		;32D9
	CP	(IX+21D)	;32DA
	POP	HL		;32DD
	RET			;32DE
;------------------------------------------
	PUSh	IX		;32DF
	POP	HL		;32E1
	LD	DE,020h		;32E2
	ADD	HL,DE		;32E5
	LD	DE,032FCh	;32E6
	LD	B,06h		;32E9
	LD	A,(DE)		;32EB
	CP	(HL)		;32EC
	JR	NZ,032F6h	;32ED	;FAT16*済 jr nz,GETVOL(3338h)	;in bank2/val.mac GET_VOLID
	INC	HL		;32EF
	INC	DE		;32F0
	DJNZ	032EBh		;32F1
	INC	HL		;32F3
	XOR	A		;32F4
	RET			;32F5
;-----------------------------------------
	LD	HL,03303h	;32F6
	XOR	A		;32F9
	DEC	A		;32FA
	RET			;32FB

	DB	'VOL_ID',0	;32FC
	DB	0FFh,0FFh,0FFh,0FFh	;3303
	
	LD	B,04h		;3307
	LD	A,(DE)		;3309
	SUB	(HL)		;330A
	RET	NZ		;330B
	INC	DE		;330C
	INC	HL		;330D
	DJNZ	03309h		;330E
	RET			;3310
;--------------------------------------------------
;DOS2内部ワークのDPB（ドライブ情報）設定
	PUSh	BC		;3311
	PUSh	DE		;3312
	LD	IX,0B6D4h	;3313 B6D4hにブートセクタリード
	LD	DE,00h		;3317
	LD	B,01h		;331A
	LD	A,(0F2CFh)	;331C
	LD	C,A		;331F
	LD	A,00h		;3320 read
	CALL	034F0h		;3322
	JR	NZ,0335Ah	;3325
	CALL	03362h		;3327 ブート情報のチェック
	JR	Z,03355h	;332A OK	
	LD	DE,01h		;332C FAT read	;FAT16*済 jr 3358h+0Ah	;in bank2/val.mac BUILD_UPB
	LD	B,01h		;332F
	LD	A,(0F2CFh)	;3331
	LD	C,A		;3334
	LD	A,00h		;3335
	CALL	034F0h		;3337
	JR	NZ,0335Ah	;333A
	LD	A,(IX+01h)	;333C
	AND	(IX+02h)	;333F
	INC	A		;3342
	JR	NZ,03358h	;3343 FATが異常 'Not a DOS disk'
	LD	A,(IX+00h)	;3345
	CP	0F8h		;3348 FAT ID CHECK
	JR	C,03358h	;334A 対応していない 'Not a DOS disk'
	CALL	0339Eh		;334C ブートセクタ情報の作成
	JR	NZ,0335Ah	;334F
	LD	(IX+20h),00h	;3351
	POP	DE		;3355
	POP	BC		;3356
	RET			;3357
;-----------------
	LD	A,0F6h		;3358 'Not a DOS disk'
	LD	DE,0FFFFh	;335A
	CALL	036A5h		;335D
	JR	03317h		;3360
;-----------------------------------------
;ブートセクタの情報をチェック
	PUSh	IX		;3362
	EX	(SP),HL		;3364
	LD	DE,0Bh		;3365
	ADD	HL,DE		;3368
	LD	D,(HL)		;3369 SECTOR SIZE
	INC	HL		;336A
	LD	A,(HL)		;336B
	INC	HL		;336C
	SUB	02h		;336D 200h/SECTOR?
	OR	D		;336F
	JR	NZ,0339Bh	;3370 ERROR １セクタが200hバイトではない
	OR	(HL)		;3372
	JR	Z,0339Bh	;3373 ERROR クラスタシフトが0
	NEG			;3375
	AND	(HL)		;3377
	CP	(HL)		;3378
	INC	HL		;3379
	JR	NZ,0339Bh	;337A ERROR
	INC	HL		;337C
	INC	HL		;337D
	LD	A,(HL)		;337E FAT数
	DEC	A		;337F
	CP	07h		;3380
	JR	NC,0339Bh	;3382 ERROR FAT数が多い
	LD	DE,06h		;3384
	ADD	HL,DE		;3387
	LD	A,(HL)		;3388 FAT SIZE
	INC	HL		;3389			;FAT16*済 pop  hl	;in bank2/val.mac FIND_UPB
	DEC	A		;338A			;FAT16*済 ld  b,(ix+15h)	;in bank2/val.mac FIND_UPB
	CP	0Ch		;338B MAX FAT SIZE	;FAT16*済 ld  a,03h	;in bank2/val.mac FIND_UPB
	JR	NC,0339Bh	;338D ERROR 		;FAT16*済 call 34F0h	;in bank2/val.mac FIND_UPB
	LD	A,(HL)		;338F			;FAT16*済 ret	;in bank2/val.mac FIND_UPB
	OR	A		;3390			;↑(3389h - 3392h)
	POP	HL		;3391
	LD	B,(IX+15h)	;3392 MEDIA ID
	LD	A,03h		;3395
	CALL	Z,034F0h	;3397 if FATsize=00h goto GETDPB
	RET			;339A
;--------------------
	POP	HL		;339B ERRORの時
	OR	H		;339C Z=0で戻る
	RET			;339D
;--------------------------------------------------------
;メモリ上のDPBを元にブートセクタの情報を作成
	LD	B,A		;339E FAT ID
	LD	A,03h		;339F GETDPB
	CALL	034F0h		;33A1 メモリ上のDPBをセットする
	RET	NZ		;33A4
	PUSh	HL		;33A5 
	LD	DE,02h		;33A6
	ADD	HL,DE		;33A9
	LD	E,(HL)		;33AA メモリ上のDPBアドレス
	INC	HL		;33AB
	LD	D,(HL)		;33AC
	PUSh	DE		;33AD
	EX	(SP),IX		;33AE DPB(MEMORY) ADDRESS
	POP	HL		;33B0
	PUSh	HL		;33B1
	LD	DE,0Bh		;33B2
	ADD	HL,DE		;33B5
	LD	C,(IX+2h)	;33B6 セクタサイズ
	LD	B,(IX+3h)	;33B9
	LD	(HL),C		;33BC HL+0Bh
	INC	HL		;33BD
	LD	(HL),B		;33BE
	INC	HL		;33BF
	LD	A,(IX+06h)	;33C0 クラスタマスク
	INC	A		;33C3 クラスタマスク＋１＝
	LD	(HL),A		;33C4 HL+0Dh クラスタサイズ
	INC	HL		;33C5
	LD	C,(IX+08h)	;33C6 FATの先頭
	LD	B,(IX+09h)	;33C9
	LD	(HL),C		;33CC HL+0Eh
	INC	HL		;33CD
	LD	(HL),B		;33CE
	INC	HL		;33CF
	LD	A,(IX+0Ah)	;33D0 FAT数
	LD	(HL),A		;33D3 HL+10h
	INC	HL		;33D4
	EX	DE,HL		;33D5
	LD	L,(IX+0Ch)	;33D6 データ領域の先頭
	LD	H,(IX+0Dh)	;33D9
	PUSh	HL		;33DC
	LD	C,(IX+11h)	;33DD ディレクトリの先頭
	LD	B,(IX+12h)	;33E0
	OR	A		;33E3
	SBC	HL,BC		;33E4 (DATA TOP) - (DIR TOP)
	LD	B,(IX+05h)	;33E6 ディレクトリシフト
	ADD	HL,HL		;33E9
	DJNZ	033E9h		;33EA
	DEC	HL		;33EC
	LD	L,(IX+0Bh)	;33ED ディレクトリエントリ数　
	DEC	L		;33F0 問題点　DPBは１バイトで表記
	INC	HL		;33F1　 　　　ブートセクタは２バイトで表記
	EX	DE,HL		;33F2
	LD	(HL),E		;33F3
	INC	HL		;33F4
	LD	(HL),D		;33F5
	INC	HL		;33F6
	EX	DE,HL		;33F7
	LD	L,(IX+0Eh)	;33F8 セクタ総数の計算
	LD	H,(IX+0Fh)	;33FB クラスタ総数＋１
	DEC	HL		;33FE
	LD	B,(IX+7h)	;33FF クラスタシフト
	DB	0Eh		;3402
	ADD	HL,HL		;3403
	DJNZ	03403h		;3404
	POP	BC		;3406 データの先頭セクタ
	ADD	HL,BC		;3407
	EX	DE,HL		;3408
	LD	(HL),E		;3409 HL+13h セクタ総数
	INC	HL		;340A
	LD	(HL),D		;340B
	INC	HL		;340C
	LD	A,(IX+1h)	;340D MEDIA ID
	LD	(HL),A		;3410
	INC	HL		;3411
	LD	A,(IX+10h)	;3412 FAT SIZE
	LD	(HL),A		;3415 HL+16h
	INC	HL		;3416
	XOR	A		;3417
	LD	(HL),A		;3418
	POP	IX		;3419
	POP	HL		;341B
	RET			;341C
;------------------------------------------------------
;ブートセクタの情報を元にPAGE2 DOS2ワーク内のDPBをセット
	PUSh	HL		;341D HL=DPB
	LD	BC,0Ah		;341E
	ADD	HL,BC		;3421
	LD	A,(IX+0Dh)	;3422 IX=BOOT
	DEC	A		;3425
	LD	(HL),A		;3426 DPB+0Ah クラスタマスク
	INC	HL		;3427
	LD	C,00h		;3428
	INC	C		;342A
	RRCA			;342B
	JR	C,0342Ah	;342C
	LD	(HL),C		;342E DPB+0Bh cluster shift
	INC	HL		;342F
	LD	E,(IX+0Eh)	;3430 DPB+0Ch top of FAT
	LD	(HL),E		;3433
	INC	HL		;3434
	LD	D,(IX+0Fh)	;3435
	LD	(HL),D		;3438
	INC	HL		;3439
	PUSh	DE		;343A
	LD	B,(IX+10h)	;343B
	LD	(HL),B		;343E DPB+0Eh number of FAT
	INC	HL		;343F
	LD	E,(IX+11h)	;3440 directory entry 16bit
	LD	D,(IX+12h)	;3443 
	LD	A,E		;3446   
	AND	0Fh		;3447
	LD	(HL),A		;3449 DPB+0Fhには00が入る
	LD	A,04h		;344A DIR SHIFT 固定
	SRL	D		;344C DIR ENTRY/10h
	RR	E		;344E
	DEC	A		;3450
	JR	NZ,0344Ch	;3451
	CP	(HL)		;3453 A=0を判定	
	INC	HL		;3454
	LD	(HL),E		;3455 DPB+10h ディレクトリエントリ数８ビット
	INC	HL		;3456
	JR	NC,0345Ah	;3457
	INC	DE		;3459
	LD	A,(IX+16h)	;345A FAT SIZE
	LD	(HL),A		;345D DPB+11h FAT SIZE
	INC	HL		;345E
	EX	(SP),HL		;345F
	PUSh	DE		;3460
	LD	E,A		;3461
	XOR	A		;3462
	LD	D,A		;3463
	ADD	A,E		;3464 FAT SIZE * 2
	JR	NC,03468h	;3465		;FAT16*済 call FSIZE3(3F24h)	;in bank2/val.mac NEW_UPB
	INC	D		;3467
	DJNZ	03464h		;3468
	LD	E,A		;346A
	ADD	HL,DE		;346B + FAT TOP
	EX	DE,HL		;346C
	POP	HL		;346D
	ADD	HL,DE		;346E
	EX	(SP),HL		;346F
	LD	(HL),E		;3470 DPB+12h DIRの先頭
	INC	HL		;3471
	LD	(HL),D		;3472
	INC	HL		;3473
	POP	DE		;3474
	LD	(HL),E		;3475 DPB+14h データの先頭
	INC	HL		;3476
	LD	(HL),D		;3477
	INC	HL		;3478
	PUSh	HL		;3479
	LD	L,(IX+13h)	;347A calculation of total clustors
	LD	H,(IX+14h)	;347D 
	OR	A		;3480　　　　　　;FAT16*済 jp TALCLS(3066h)	;in bank2/val.mac NEW_UPB
	SBC	HL,DE		;3481
	DEC	C		;3483
	JR	Z,0348Ch	;3484
	SRL	H		;3486
	RR	L		;3488
	JR	03483h		;348A
	INC	HL		;348C
	EX	DE,HL		;348D
	POP	HL		;348E
	LD	(HL),E		;348F DPB+16h クラスタ総数
	INC	HL		;3490
	LD	(HL),D		;3491
	INC	HL		;3492
	PUSh	HL		;3493
	CALL	032DFh		;3494 'VOL_ID'文字列サーチ
	POP	DE		;3497
	DEC	HL		;3498 DPB+18h UNDEL FLAG
	LD	BC,05h		;3499 DPB+19h VOL NO.
	LDIR			;349C
	EX	DE,HL		;349E
	LD	A,(IX+15h)	;349F		;FAT16*済 call DPBSET(3FBBh)	;in bank2/val.mac NEW_UPB
	LD	(HL),A		;34A2 MEDIA ID	;FAT16*済 nop	;in bank2/val.mac NEW_UPB
	POP	HL		;34A3
	PUSh	HL		;34A4
	INC	HL		;34A5
	INC	HL		;34A6
	LD	E,(HL)		;34A7 DE=MEMORY DPB
	INC	HL		;34A8
	LD	D,(HL)		;34A9
	EX	DE,HL		;34AA
	INC	HL		;34AB
	LD	(HL),A		;34AC メモリ上のDPB+1h MEDIA ID
	INC	HL		;34AD
	LD	(HL),00h	;34AE           DPB+2h SECTOR SIZE
	INC	HL		;34B0
	LD	(HL),02h	;34B1
	INC	HL		;34B3
	LD	(HL),0Fh	;34B4           DPB+4h ディレクトリマスク
	INC	HL		;34B6
	LD	(HL),04h	;34B7           DPB+5h ディレクトリシフト
	INC	HL		;34B9
	EX	DE,HL		;34BA
	LD	BC,07h		;34BB
	ADD	HL,BC		;34BE
	LD	BC,05h		;34BF
	LDIR			;34C2
	LD	C,(HL)		;34C4 ディレクトリエントリ数の計算
	INC	HL		;34C5
	LD	A,(HL)		;34C6
	INC	HL		;34C7
	ADD	A,A		;34C8 FAT16; 02h*10h=20h
	ADD	A,A		;34C9
	ADD	A,A		;34CA
	ADD	A,A		;34CB
	OR	C		;34CC 20h OR 00h = 20h(DIR ENTRY)
	LD	(DE),A		;34CD
	INC	DE		;34CE
	PUSh	HL		;34CF
	INC	HL		;34D0
	INC	HL		;34D1
	INC	HL		;34D2
	LD	BC,04h		;34D3 DOS2 WORK の DPB+14h〜17h を
	LDIR			;34D6 メモリ上のDPB+Ch DATAの先頭
	POP	HL		;34D8　　　　　 DPB+Eh クラスタ総数転送
	LD	BC,03h		;34D9           DPB+10h FAT SIZE
	LDIR			;34DC           DPB+11h DIR TOP
	POP	HL		;34DE
	PUSh	HL		;34DF
	PUSh	BC		;34E0
	LD	BC,01Fh		;34E1
	ADD	HL,BC		;34E4
	POP	BC		;34E5
	XOR	A		;34E6		;FAT16*済 call CLST_A(0D78h) ;in bank2/val.mac ZAP_CD
	BIT	7,(HL)		;34E7 DPB+1Fh CURRENT DIRはROOT or SUB?
	JR	NZ,034EEh	;34E9 ROOT
	LD	(HL),A		;34EB DPB+1Eh,1Fhを00,00
	DEC	HL		;34EC
	LD	(HL),A		;34ED
	POP	HL		;34EE
	RET			;34EF
;------------------------------------------------------------------
;DISK ROM ENTRY
	CP	06h		;34F0		;FAT16*無 jp DSKROM(3170h) ;in bank2/val.mac CALL_UNIT
	JR	NC,03539h	;34F2 A=0 - 5 
	PUSh	IY		;34F4
	PUSh	HL		;34F6
	PUSh	HL		;34F7
	EX	(SP),IX		;34F8
	POP	HL		;34FA
	PUSh	HL		;34FB
	EXX			;34FC
	PUSh	HL		;34FD
	PUSh	DE		;34FE
	PUSh	BC		;34FF
	EX	AF,AF'		;3500
	PUSh	AF		;3501
	LD	A,(IX+8h)	;3502
	DEC	A		;3505
	LD	(0F33Fh),A	;3506 physical drive
	LD	A,(IX+6h)	;3509 local drive
	EX	AF,AF'		;350C
	LD	C,A		;350D
	CP	01h		;350E
	LD	A,0FFh		;3510
	JR	Z,03515h	;3512
	INC	A		;3514
	LD	(0BBEAh),A	;3515 READ=00  WRITE=FFh
	LD	HL,0353Eh	;3518
	LD	B,00h		;351B
	ADD	HL,BC		;351D
	ADD	HL,BC		;351E
	LD	A,(HL)		;351F DISK-ROMのアドレス
	INC	HL		;3520
	LD	H,(HL)		;3521
	LD	L,A		;3522
	LD	A,(0F2CDh)	;3523
	EX	AF,AF'		;3526
	CALL	0353Dh		;3527 CALL DISK-ROM
	EX	AF,AF'		;352A
	POP	AF		;352B
	EX	AF,AF'		;352C
	EXX			;352D
	POP	BC		;352E
	POP	DE		;352F
	POP	HL		;3530
	EXX			;3531
	POP	IX		;3532
	POP	HL		;3534
	POP	IY		;3535
	OR	A		;3537
	RET			;3538
	LD	A,0DFh		;3539 エラー
	OR	A		;353B
	RET			;353C
	JP	(HL)		;353D DISK-ROMへ
	
	DW	354Ah		;353E
	DW	354Dh		;3540
	DW	3567h		;3542
	DW	3582h		;3544
	DW	3598h		;3546
	DW	35A3h		;3548
	
;------------------------------------------
;A=0 DSKIO READ
	OR	A		;354A
	JR	0354Eh		;354B
;-----------------------------------------
;A=1 DSKIO WRITE
	SCF			;354D
	EX	AF,AF'		;354E
	LD	HL,04000h	;354F CALL ADDRESS 4010h
	EXX			;3552
	LD	A,C		;3553
	LD	C,(IX+1Dh)	;3554 MEDIA ID	;FAT16*済 call SETNUM(3055h)	;in bank2/val.mac CALL_UNIT
	PUSh	BC		;3557
	CALL	035E2h		;3558
	JR	C,03560h	;355B
	POP	BC		;355D
	XOR	A		;355E
	RET			;355F
	EX	AF,AF'		;3560 ERROR処理
	POP	AF		;3561
	SUB	B		;3562
	LD	B,A		;3563
	EX	AF,AF'		;3564
	JR	035B9h		;3565
;-------------------------------------------
;A=2  DSKCHG
	EX	AF,AF'		;3567
	LD	HL,04003h	;3568 CALL ADDRESS 4013h
	EXX			;356B
	LD	B,00h		;356C
	LD	C,(IX+1Dh)	;356E MEDIA ID
	LD	L,(IX+2h)	;3571 メモリ上のDPBアドレス
	LD	H,(IX+3h)	;3574
	CALL	035E2h		;3577
	JR	C,0357Eh	;357A
	XOR	A		;357C
	RET			;357D
	LD	B,00h		;357E ERROR
	JR	035B9h		;3580
;--------------------------------------------
;A=3  GETDPB
	EX	AF,AF'		;3582
	LD	HL,04006h	;3583 CALL ADDRESS 4016h
	EXX			;3586
	LD	C,(IX+1Dh)	;3587 MEDIA ID
	LD	L,(IX+2h)	;358A メモリ上のDPBアドレス
	LD	H,(IX+3h)	;358D
	CALL	035E2h		;3590
	LD	A,0FFh		;3593
	RET	C		;3595 ERROR A=FFh
	XOR	A		;3596 RIGHT A=00h
	RET			;3597
;----------------------------------------------
;A=4  CHOICE
	EX	AF,AF'		;3598
	LD	HL,04009h	;3599 CALL ADDRESS 4019h
	EXX			;359C
	CALL	035E2h		;359D
	EX	DE,HL		;35A0
	XOR	A		;35A1
	RET			;35A2
;----------------------------------------------
;A=5  DSKFMT
	LD	HL,0400Ch	;35A3 CALL ADDRESS 401Ch
	EXX			;35A6
	PUSh	DE		;35A7
	LD	D,A		;35A8
	LD	A,B		;35A9
	EX	AF,AF'		;35AA
	LD	A,C		;35AB
	POP	BC		;35AC
	CALL	035E2h		;35AD
	JR	C,035B4h	;35B0
	XOR	A		;35B2
	RET			;35B3
	LD	HL,035D8h	;35B4
	JR	035BCh		;35B7
;------------------------------------------
;CALL DISK-ROMのエラー処理
	LD	HL,035CAh	;35B9
	RRCA			;35BC
	CP	(HL)		;35BD
	JR	NC,035C7h	;35BE
	INC	HL		;35C0
	LD	E,A		;35C1
	LD	D,00h		;35C2
	ADD	HL,DE		;35C4
	LD	A,(HL)		;35C5
	RET			;35C6
	LD	A,0FDh		;35C7
	RET			;35C9
	
	DB	0Eh,0F8h,0FCh,0FAh,0F3h	;35CA
	DB	0F9h,0FEh,0FDh,0FDh,0FDh
	DB	0F6h,0FFh,0F7h,0F1h
	
	DB	0Ah,0F8h,0FCh,0FAh,0F3h	;35D8
	DB	0F9h,0FEh,08Bh,0DEh,0FDh
	
	
	CALL	0AB9h		;35E2
	EXX			;35E5
	LD	E,(IX+1h)	;35E6
	LD	D,00h		;35E9
	ADD	HL,DE		;35EB CALL ADDRESS + 10h
	LD	B,(IX+0h)	;35EC DISK-ROM SLOT
	CALL	0F224h		;35EF PAGE2をDTAのセグメントに切り替え
	PUSh	BC		;35F2
	POP	IY		;35F3
	PUSh	HL		;35F5
	POP	IX		;35F6
	EXX			;35F8
	EX	AF,AF'		;35F9
	CALL	0F1DFh		;35FA DISK-ROM　呼び出し
	EI			;35FD
	EX	AF,AF'		;35FE
	LD	A,(0F2CFh)	;35FF PAGE2　戻し
	CALL	0F224h		;3602
	EX	AF,AF'		;3605
	RET			;3606
;-------------------
;全てのドライブでDPB+09hをチェック
	LD	B,08h		;3607 8DRIVE CHECK
	LD	A,B		;3609
	CALL	03622h		;360A GET DPB ADDRESS
	LD	E,(HL)		;360D
	INC	HL		;360E
	LD	D,(HL)		;360F
	LD	A,D		;3610
	OR	E		;3611
	JR	Z,0361Eh	;3612 
	LD	HL,09h		;3614
	ADD	HL,DE		;3617 DPB+09h
	LD	A,(HL)		;3618
	OR	A		;3619
	JR	Z,0361Eh	;361A
	LD	(HL),01h	;361C DPB+09hが00h以外なら01hを入れる
	DJNZ	03609h		;361E
	XOR	A		;3620
	RET			;3621
;-----------------------------------------------
;ドライブ番号に対応するDOS2内部DPBアドレスを得る
	PUSh	DE		;3622
	OR	A		;3623
	JR	NZ,03629h	;3624
	LD	A,(0F23Ch)	;3626 カレントドライブ
	LD	C,0DBh		;3629
	CP	09h		;362B
	JR	C,03630h	;362D
	XOR	A		;362F ドライブが09h以上なら00にする
	LD	HL,0BA1Ah	;3630 ドライブ番号0-8
	LD	E,A		;3633
	LD	D,00h		;3634
	ADD	HL,DE		;3636
	LD	A,(HL)		;3637
	LD	E,A		;3638
	LD	D,00h		;3639
	LD	HL,0BA23h	;363B DPB ADDRESSが入っている
	ADD	HL,DE		;363E
	ADD	HL,DE		;363F
	POP	DE		;3640
	OR	A		;3641
	RET			;3642
;---------------------------------------------------
	PUSh	AF		;3643
	PUSh	HL		;3644
	LD	HL,(0F34Dh)	;3645 SECTOR BUFFER
	DEC	HL		;3648
	LD	A,(HL)		;3649
	INC	A		;364A
	JR	NZ,03669h	;364B
	LD	(HL),00h	;364D
	LD	A,(0F33Fh)	;364F DRIVE NUMBER
	PUSh	DE		;3652 SECTOR NUMBER
	LD	E,A		;3653 GET DPB ADDRESS
	LD	D,00h		;3654
	LD	HL,0BA25h	;3656
	ADD	HL,DE		;3659
	ADD	HL,DE		;365A
	LD	E,(HL)		;365B
	INC	HL		;365C
	LD	D,(HL)		;365D
	LD	HL,09h		;365E
	ADD	HL,DE		;3661 DPB+09h FLAG?
	POP	DE		;3662
	LD	A,(HL)		;3663
	OR	A		;3664
	JR	Z,03669h	;3665
	LD	(HL),01h	;3667 DPB+09hが00h以外なら01hを入れる
	LD	HL,0F2BFh	;3669
	DI			;366C
	LD	A,(HL)		;366D
	EI			;366E
	LD	(HL),00h	;366F
	OR	A		;3671
	JR	Z,0369Fh	;3672
	PUSh	BC		;3674
	PUSh	DE		;3675
	PUSh	IX		;3676
	LD	C,A		;3678
	LD	HL,0BA25h	;3679
	LD	B,08h		;367C
	LD	E,(HL)		;367E
	INC	HL		;367F
	LD	D,(HL)		;3680
	INC	HL		;3681
	LD	A,D		;3682
	OR	E		;3683
	JR	Z,03699h	;3684
	PUSh	DE		;3686
	POP	IX		;3687
	LD	A,(IX+9D)	;3689
	SUB	02h		;368C
	JR	C,03699h	;368E
	SUB	C		;3690
	JR	NC,03694h	;3691
	XOR	A		;3693
	ADD	A,02h		;3694
	LD	(IX+9D)A	;3696
	DJNZ	0367Eh		;3699
	POP	IX		;369B
	POP	DE		;369D
	POP	BC		;369E
	POP	HL		;369F
	POP	AF		;36A0
	RET			;36A1
;--------------------------------------------------------
;エラー処理ルーチン
	OR	A		;36A2
	JR	036A6h		;36A3
	SCF			;36A5
	PUSh	BC		;36A6
	PUSh	DE		;36A7
	PUSh	HL		;36A8
	EXX			;36A9
	PUSh	HL		;36AA
	PUSh	DE		;36AB
	PUSh	BC		;36AC
	EXX			;36AD
	EX	AF,AF'		;36AE
	PUSh	AF		;36AF
	EX	AF,AF'		;36B0
	PUSh	IX		;36B1
	PUSh	AF		;36B3
	LD	C,00h		;36B4
	JR	NC,036BAh	;36B6
	SET	1,C		;36B8
	LD	A,(0BBEAh)	;36BA
	OR	A		;36BD
	JR	Z,036C2h	;36BE
	SET	0,C		;36C0
	LD	A,D		;36C2
	AND	E		;36C3
	INC	A		;36C4
	JR	Z,036C9h	;36C5
	SET	3,C		;36C7
	PUSh	HL		;36C9
	PUSh	BC		;36CA
	LD	BC,08h		;36CB
	ADD	HL,BC		;36CE
	POP	BC		;36CF
	LD	B,(HL)		;36D0
	INC	HL		;36D1
	LD	A,(HL)		;36D2
	OR	A		;36D3
	JR	Z,036D8h	;36D4
	LD	(HL),01h	;36D6
	POP	HL		;36D8
	POP	AF		;36D9 ERROR CODE
	CP	09Fh		;36DA
	JR	Z,0373Ah	;36DC
	CP	0F1h		;36DE
	JR	Z,03724h	;36E0 DOS2が使う特別なエラー
	CP	0F2h		;36E2
	JR	NZ,036E8h	;36E4
	SET	2,C		;36E6
	PUSh	AF		;36E8
	LD	HL,0374Ah	;36E9 ERROR CODE(F8,FC,FA,F3,F9,FE,FD,F6,FF)
	INC	HL		;36EC   SEARCH
	CP	(HL)		;36ED
	INC	HL		;36EE
	JR	Z,036F5h	;36EF FOUND
	BIT	7,(HL)		;36F1
	JR	Z,036ECh	;36F3
	LD	A,(HL)		;36F5
	ADD	A,A		;36F6
	BIT	0,C		;36F7
	JR	Z,036FCh	;36F9
	INC	A		;36FB
	BIT	2,C		;36FC
	JR	Z,03702h	;36FE
	SET	7,A		;3700
	EX	AF,AF'		;3702
	POP	AF		;3703
	LD	H,(IY+9h)	;3704
	PUSh	HL		;3707
	LD	(IY+9h),00h	;3708
	PUSh	AF		;370C
	PUSh	IY		;370D
	LD	HL,(0F300h)	;370F
	CALL	03742h		;3712 ページ０と１をSYSTEM RAMに戻す
	POP	IY		;3715
	POP	BC		;3717
	POP	HL		;3718
	LD	(IY+9D)h	;3719
	DEC	A		;371C
	CP	03h		;371D
	JR	C,03726h	;371F
	XOR	A		;3721
	JR	03726h		;3722
	LD	A,01h		;3724
	POP	IX		;3726
	EX	AF,AF'		;3728
	POP	AF		;3729
	EX	AF,AF'		;372A
	EXX			;372B
	POP	BC		;372C
	POP	DE		;372D
	POP	HL		;372E
	EXX			;372F
	POP	HL		;3730
	OR	A		;3731
	JR	Z,03738h	;3732
	POP	DE		;3734
	POP	BC		;3735
	DEC	A		;3736
	RET			;3737
	
	LD	A,09Dh		;3738 About
	PUSh	AF		;373A
	CALL	02C6Dh		;373B DISK BUFFERを無効にする
	POP	AF		;373E
	LD	HL,(0F302h)	;373F
	PUSh	HL		;3742
	LD	HL,0F1F7h	;3743
	EX	(SP),HL		;3746
	PUSh	HL		;3747
	JP	0F1FAh		;3748
	
	DB	0F8h,0		;374B ERROR CODE
	DB	0FCh,01h
	DB	0FAh,02h
	DB	0F3h,03h
	DB	0F9h,04h
	DB	0FEh,05h
	DB	0FDh,06h
	DB	0FDh,07h
	DB	0FDh,08h
	DB	0F6h,09h
	DB	0FFh,0Ah
	DB	0F7h,0Bh
	DB	0F1h,0Ch
	DB	00h,86h
	
;--------------------------------------------
;#0F(_FOPEN) ファイルのオープン[FCB]
;DE=Pointer of FCB
	LD	(IY+2Fh),04h	;3767
	LD	A,02h		;376B
	LD	C,01h		;376D
	CALL	03A4Fh		;376F
	JR	NZ,037A7h	;3772
	XOR	A		;3774
	PUSh	DE		;3775
	CALL	02284h		;3776
	POP	DE		;3779
	LD	HL,(0BB96h)	;377A
	PUSh	HL		;377D
	LD	A,(0BB98h)	;377E
	OR	A		;3781
	JR	Z,03788h	;3782
	LD	A,(0B9F3h)	;3784
	LD	(HL),A		;3787
	CALL	03D1Eh		;3788
	INC	HL		;378B
	LD	A,(DE)		;378C
	LD	(HL),A		;378D
	INC	HL		;378E
	LD	(HL),00h	;378F
	POP	IX		;3791
	CALL	03CD0h		;3793
	XOR	A		;3796
	CALL	03CA4h		;3797
	CALL	03C6Ah		;379A
	LD	A,(0B9F3h)	;379D
	CALL	02C55h		;37A0
	XOR	A		;37A3
	LD	L,A		;37A4
	LD	H,A		;37A5
	RET			;37A6
	LD	HL,0FFh		;37A7
	RET			;37AA
;#10
	CALL	039B9h		;37AB
	JR	NZ,037A7h	;37AE
	LD	DE,(0BB96h)	;37B0
	CALL	03A31h		;37B4
	CALL	0223Ah		;37B7
	OR	A		;37BA
	JR	NZ,037A7h	;37BB
	LD	A,(IX+19h)	;37BD
	CALL	02C55h		;37C0
	JR	037A3h		;37C3
;#11
;DE=FCB ADDRESS
	LD	HL,0Ch		;37C5
	ADD	HL,DE		;37C8
	LD	A,(HL)		;37C9
	LD	(0BB95h),A	;37CA
	LD	(IY+2Fh),04h	;37CD
	LD	A,(DE)		;37D1 DRIVE
	ADD	A,A		;37D2
	SBC	A,A		;37D3
	AND	010h		;37D4
	LD	C,00h		;37D6
	CALL	03A4Fh		;37D8
	JR	NZ,037A7h	;37DB
	JR	037F8h		;37DD
;#12
	LD	DE,0B9DAh	;37DF
	LD	HL,0B99Ah	;37E2
	LD	BC,040h		;37E5
	LD	A,(HL)		;37E8
	CP	0FFh		;37E9
	LD	A,0D7h		;37EB
	JP	NZ,037A7h	;37ED
	LDIR			;37F0
	CALL	03B13h		;37F2
	JP	NZ,037A7h	;37F5
	PUSh	DE		;37F8
	LD	HL,0B9DAh	;37F9
	LD	DE,0B99Ah	;37FC
	LD	BC,040h		;37FF
	LDIR			;3802
	POP	DE		;3804
	LD	HL,0B975h	;3805
	LD	A,(0B9F3h)	;3808
	LD	(HL),A		;380B
	CALL	03D1Eh		;380C
	LD	A,(0BB95h)	;380F
	LD	(HL),A		;3812
	INC	HL		;3813
	LD	A,(DE)		;3814
	LD	(HL),A		;3815
	INC	HL		;3816
	INC	DE		;3817
	INC	DE		;3818
	LD	(HL),00h	;3819
	INC	HL		;381B
	INC	DE		;381C
	EX	DE,HL		;381D
	LD	BC,012h		;381E
	LDIR			;3821
	LD	IX,0B975h	;3823
	XOR	A		;3827
	CALL	03CA4h		;3828
	CALL	03C6Ah		;382B
	JR	C,037DFh	;382E
	LD	HL,0B975h	;3830
	LD	DE,(0F23Dh)	;3833 DMA
	LD	BC,021h		;3837
	LD	A,01h		;383A
	CALL	02707h		;383C
	JP	037A3h		;383F

;---------------------------------------------------------------
;#14
	CALL	039B9h		;3842
	JR	NZ,03885h	;3845
	LD	IX,(0BB96h)	;3847
	CALL	03CA1h		;384B
	LD	A,(0B9F8h)	;384E
	BIT	7,A		;3851
	JR	Z,0386Ch	;3853
	LD	BC,080h		;3855
	LD	DE,(0F23Dh)	;3858
	LD	IX,0B9DAh	;385C
	XOR	A		;3860
	CALL	0276Bh		;3861
	JR	NZ,03885h	;3864
	LD	IX,(0BB96h)	;3866
	JR	0387Ch		;386A
	CALL	03B6Ah		;386C
	JR	Z,03879h	;386F
	CALL	03BB7h		;3871
	JR	NZ,03885h	;3874
	LD	HL,0B2D4h	;3876
	CALL	03A42h		;3879
	CALL	03C4Ch		;387C
	CALL	03CD0h		;387F
	JP	037A3h		;3882
	LD	HL,01h		;3885
	RET			;3888
;#15
	CALL	039B9h		;3889
	JR	NZ,03885h	;388C
	LD	IX,(0BB96h)	;388E
	CALL	03CA1h		;3892
	CALL	03B97h		;3895
	LD	IX,0B9DAh	;3898
	LD	BC,080h		;389C
	LD	DE,(0F23Dh)	;389F
	XOR	A		;38A3
	CALL	02767h		;38A4
	JR	NZ,03885h	;38A7
	LD	IX,(0BB96h)	;38A9
	CALL	03C4Ch		;38AD
	CALL	03CD0h		;38B0
	LD	A,(IX+32D)	;38B3
	LD	HL,(0BB96h)	;38B6
	LD	BC,0Fh		;38B9
	ADD	HL,BC		;38BC
	CP	(HL)		;38BD
	JR	C,038C1h	;38BE
	LD	(HL),A		;38C0
	JP	037A3h		;38C1
	


	
;-----------------------------------------------------------------

;#16(_FMAKE) ファイルの作成[FCB]
;DE=Pointer of FCB
	LD	HL,0Ch		;38C4
	ADD	HL,DE		;38C7
	LD	A,(HL)		;38C8
	OR	A		;38C9
	JR	Z,038D3h	;38CA
	CALL	03767h		;38CC
	OR	A		;38CF
	JP	Z,037A3h	;38D0
	LD	(IY+2Fh),00h	;38D3
	XOR	A		;38D7
	LD	C,A		;38D8
	JP	0376Fh		;38D9

;#13(_FDEL) ファイルの削除[FCB]
;DE=Pointer of FCB
	LD	A,0FFh		;38DC
	LD	(0BB90h),A	;38DE
	LD	BC,0FFh		;38E1
	PUSh	BC		;38E4
	LD	(IY+2Fh),04h	;38E5
	XOR	A		;38E9
	LD	C,A		;38EA
	CALL	03A4Fh		;38EB
	JR	038F7h		;38EE
	POP	BC		;38F0
	LD	C,00h		;38F1
	PUSh	BC		;38F3
	CALL	03B13h		;38F4
	JR	NZ,0393Ch	;38F7
	BIT	0,(IX+0Eh)	;38F9
	JR	NZ,038F4h	;38FD
	LD	A,01h		;38FF
	CALL	02346h		;3901
	OR	A		;3904
	JR	Z,038F0h	;3905
	JR	0393Ch		;3907
;#17
	LD	BC,0FFh		;3909
	PUSh	BC		;390C
	PUSh	DE		;390D
	LD	IX,0B9DAh	;390E
	LD	(IX+1Fh),00h	;3912
	LD	HL,011h		;3916
	ADD	HL,DE		;3919
	LD	DE,0B975h	;391A
	EX	DE,HL		;391D
	LD	A,(DE)		;391E
	CALL	0173Ah		;391F
	POP	DE		;3922
	XOR	A		;3923
	LD	C,A		;3924
	CALL	03A4Fh		;3925
	JR	03931h		;3928
	POP	BC		;392A
	LD	C,00h		;392B
	PUSh	BC		;392D
	CALL	03B13h		;392E
	JR	NZ,0393Ch	;3931
	LD	BC,0B975h	;3933
	CALL	023ACh		;3936
	OR	A		;3939
	JR	Z,0392Ah	;393A
	LD	B,A		;393C
	LD	A,(0B9F3h)	;393D
	CALL	02C55h		;3940
	POP	HL		;3943
	LD	A,L		;3944
	OR	A		;3945
	RET	Z		;3946
	LD	A,B		;3947
	RET			;3948
;#21(_RNDRND) ランダムな読み出し[FCB]
	LD	A,01h		;3949
	CALL	03B2Bh		;394B
	JR	NZ,03973h	;394E
	LD	A,C		;3950
	NEG			;3951
	AND	07Fh		;3953
	LD	C,A		;3955
	LD	A,00h		;3956
	CALL	NZ,03C21h	;3958
	JR	03966h		;395B
	
;#22(_WRRND) ランダムな書き込み[FCB]
	XOR	A		;395D
	LD	HL,023Eh	;395E
	CALL	03B2Bh		;3961
	JR	NZ,03973h	;3964
	LD	IX,(0BB96h)	;3966
	CALL	03C6Ah		;396A
	CALL	03CD0h		;396D
	JP	037A3h		;3970
	LD	HL,01h		;3973
	RET			;3976

;#23(_FSIZE) ファイルサイズの獲得[FCB]
	LD	(IY+2Fh),04h	;3977
	LD	A,02h		;397B
	LD	C,00h		;397D
	CALL	03A4Fh		;397F
	JP	NZ,037A7h	;3982
	LD	C,(IX+21D)	;3985
	LD	B,(IX+16h)	;3988
	LD	E,(IX+17h)	;398B
	LD	D,(IX+18h)	;398E
	XOR	A		;3991
	LD	H,A		;3992
	SUB	C		;3993
	AND	07Fh		;3994
	LD	L,A		;3996
	ADD	HL,BC		;3997
	JR	NC,0399Bh	;3998
	INC	DE		;399A
	ADD	HL,HL		;399B
	LD	A,H		;399C
	EX	DE,HL		;399D
	ADC	HL,HL		;399E
	LD	IX,(0BB96h)	;39A0
	LD	(IX+33D)A	;39A4
	LD	(IX+34D)L	;39A7
	LD	(IX+35D)h	;39AA
	JP	037A3h		;39AD
	
;#24(_SETRND) ランダムレコードのセット[FCB]
	PUSh	DE		;39B0
	POP	IX		;39B1
	CALL	03CA1h		;39B3
	JP	037A3h		;39B6
	
	EX	DE,HL		;39B9
	LD	(0BB96h),HL	;39BA ページ３に転送したFCBアドレス
	LD	IX,0B9DAh	;39BD
	LD	(IX+0D),0FFh	;39C1
	LD	A,(HL)		;39C5
	AND	0Fh		;39C6
	LD	(IX+19h)A	;39C8
	LD	DE,0B9EFh	;39CB 
	LD	BC,010h		;39CE
	ADD	HL,BC		;39D1
	LD	BC,04h		;39D2
	LDIR			;39D5
	LD	DE,0B9F4h	;39D7
	LD	BC,04h		;39DA
	LDIR			;39DD
	LD	DE,0B9FFh	;39DF
	LD	BC,08h		;39E2
	LDIR			;39E5
	LD	A,(IX+2Ah)	;39E7		;FAT16*済 jp CLUST(0D7Bh)	;in bank2/cpm.mac GET_FAB (patched other point)
	LD	B,00h		;39EA
	BIT	6,A		;39EC
	JR	Z,039F2h	;39EE
	LD	B,01h		;39F0
	LD	(IX+0Eh)B	;39F2
	LD	B,00h		;39F5
	BIT	5,A		;39F7
	JR	Z,039FDh	;39F9
	LD	B,0A4h		;39FB
	BIT	4,A		;39FD
	JR	Z,03A03h	;39FF
	SET	6,B		;3A01
	LD	(IX+1Eh)B	;3A03
	LD	B,00h		;3A06
	BIT	7,A		;3A08
	JR	Z,03A0Eh	;3A0A
	LD	B,080h		;3A0C
	LD	(IX+31h)B	;3A0E
	AND	0Fh		;3A11
	LD	(IX+2Ah)A	;3A13
	XOR	A		;3A16
	BIT	7,(IX+1Eh)	;3A17
	RET	Z		;3A1B
	LD	L,(IX+1Ah)	;3A1C
	LD	H,(IX+1Bh)	;3A1F
	LD	E,(HL)		;3A22
	INC	HL		;3A23
	LD	D,(HL)		;3A24
	LD	L,(IX+1Ch)	;3A25
	LD	H,(IX+1Dh)	;3A28
	SBC	HL,DE		;3A2B
	RET	Z		;3A2D
	LD	A,0B7h		;3A2E
	RET			;3A30
	LD	IX,0B9DAh	;3A31
	LD	HL,0B9DBh	;3A35
	INC	DE		;3A38
	LD	A,(DE)		;3A39
	LD	(IX+1Fh),02h	;3A3A
	CALL	0173Ah		;3A3E
	RET			;3A41
	
	LD	DE,(0F23Dh)	;3A42 #14
	LD	BC,080h		;3A46
	LD	A,01h		;3A49
	CALL	02707h		;3A4B
	RET			;3A4E
	
	PUSh	AF		;3A4F
	XOR	A		;3A50
	LD	(0BB98h),A	;3A51
	POP	AF		;3A54
	LD	B,A		;3A55
	PUSh	BC		;3A56
	LD	(0BB96h),DE	;3A57
	LD	IX,0B9DAh	;3A5B
	LD	(IX+1Fh)A	;3A5F
	PUSh	AF		;3A62
	PUSh	DE		;3A63
	INC	DE		;3A64
	LD	HL,0B8F4h	;3A65
	LD	A,(DE)		;3A68
	CALL	0173Ah		;3A69
	POP	DE		;3A6C
	POP	AF		;3A6D
	LD	B,A		;3A6E
	LD	A,(DE)		;3A6F
	AND	0Fh		;3A70
	LD	DE,0B8F4h	;3A72
	LD	C,08h		;3A75
	CALL	012C3h		;3A77
	JR	NZ,03AA6h	;3A7A
	OR	C		;3A7C
	LD	A,0D9h		;3A7D
	JR	NZ,03AA6h	;3A7F
	PUSh	HL		;3A81
	LD	HL,0B926h	;3A82
	LD	DE,0B9FAh	;3A85
	LD	BC,0Bh		;3A88
	PUSh	DE		;3A8B
	LDIR			;3A8C
	POP	DE		;3A8E
	POP	HL		;3A8F
	CALL	01A49h		;3A90
	OR	A		;3A93
	JR	NZ,03AA6h	;3A94
	PUSh	DE		;3A96
	PUSh	HL		;3A97
	CALL	0198Fh		;3A98
	CALL	01A3Bh		;3A9B
	EX	DE,HL		;3A9E		;FAT16*済 call STOR_7(33EDh)	;in bank2/cpm.mac S_F_F (patched kvar.mac, add DE_EX_SECTOR workarea)
	LDIR			;3A9F
	POP	HL		;3AA1
	POP	DE		;3AA2
	POP	BC		;3AA3
	XOR	A		;3AA4
	RET			;3AA5
	POP	BC		;3AA6
	BIT	0,C		;3AA7
	JR	NZ,03AB3h	;3AA9
	PUSh	AF		;3AAB
	XOR	A		;3AAC
	LD	(0BB98h),A	;3AAD
	POP	AF		;3AB0
	OR	A		;3AB1
	RET			;3AB2
	LD	(0B400h),A	;3AB3
	PUSh	BC		;3AB6
	LD	HL,03B0Ch	;3AB7
	LD	DE,0B2D4h	;3ABA
	LD	A,0FFh		;3ABD
	LD	(0BB90h),A	;3ABF
	LD	B,0FFh		;3AC2
	LD	A,01h		;3AC4
	CALL	0EDFh		;3AC6
	OR	A		;3AC9
	POP	BC		;3ACA
	RET	NZ		;3ACB
	PUSh	BC		;3ACC
	LD	C,04h		;3ACD
	LD	DE,0B2D4h	;3ACF
	LD	IX,0B9DAh	;3AD2
	XOR	A		;3AD6
	CALL	012C3h		;3AD7
	POP	DE		;3ADA
	RET	NZ		;3ADB
	LD	A,B		;3ADC
	AND	05h		;3ADD
	JR	Z,03B07h	;3ADF
	LD	A,0FFh		;3AE1
	LD	(0BB98h),A	;3AE3
	PUSh	DE		;3AE6
	LD	HL,(0BB9Eh)	;3AE7
	LD	A,B		;3AEA
	AND	018h		;3AEB
	JR	Z,03AF2h	;3AED
	LD	(HL),05Ch	;3AEF
	INC	HL		;3AF1
	LD	DE,0B8F4h	;3AF2
	LD	A,(DE)		;3AF5
	LD	(HL),A		;3AF6
	INC	HL		;3AF7
	INC	DE		;3AF8
	OR	A		;3AF9
	JR	NZ,03AF5h	;3AFA
	POP	BC		;3AFC
	XOR	A		;3AFD
	LD	C,00h		;3AFE
	PUSh	BC		;3B00
	LD	DE,0B2D4h	;3B01
	JP	03A75h		;3B04
	LD	A,(0B400h)	;3B07
	OR	A		;3B0A
	RET			;3B0B
	LD	B,C		;3B0C
	LD	D,B		;3B0D
	LD	D,B		;3B0E
	LD	B,L		;3B0F
	LD	C,(HL)		;3B10
	LD	B,H		;3B11
	NOP			;3B12
	LD	IX,0B9DAh	;3B13
	LD	(IY+2Fh),04h	;3B17
	CALL	019F8h		;3B1B
	RET	NZ		;3B1E
	LD	DE,0B9FAh	;3B1F
	CALL	01A87h		;3B22
	LD	C,00h		;3B25
	PUSh	BC		;3B27
	JP	03A93h		;3B28
	
	EX	AF,AF'		;3B2B #21 #22
	CALL	039B9h		;3B2C
	RET	NZ		;3B2F
	LD	IX,(0BB96h)	;3B30
	LD	A,(IX+21h)	;3B34 FCB
	LD	C,(IX+22h)	;3B37
	LD	B,(IX+23h)	;3B3A
	PUSh	AF		;3B3D
	PUSh	BC		;3B3E
	CALL	03CBDh		;3B3F
	CALL	03B97h		;3B42
	POP	HL		;3B45
	POP	AF		;3B46
	LD	B,A		;3B47
	ADD	A,A		;3B48
	ADC	HL,HL		;3B49
	LD	A,L		;3B4B
	LD	(IX+0Ch)A	;3B4C
	LD	A,H		;3B4F
	LD	(IX+0Eh)A	;3B50
	LD	A,B		;3B53
	AND	07Fh		;3B54
	LD	(IX+32D)A	;3B56
	XOR	A		;3B59
	EX	AF,AF'		;3B5A
	LD	BC,080h		;3B5B
	LD	IX,0B9DAh	;3B5E
	LD	DE,(0F23Dh)	;3B62
	CALL	0276Fh		;3B66
	RET			;3B69
	
	CALL	03BA1h		;3B6A
	RET	NZ		;3B6D
	LD	A,(0BB92h)	;3B6E
	LD	B,A		;3B71
	LD	DE,(0BB93h)	;3B72
	LD	A,(IX+33D)	;3B76
	LD	L,(IX+34D)	;3B79
	LD	H,(IX+35D)	;3B7C
	SUB	B		;3B7F
	SBC	HL,DE		;3B80
	RET	NZ		;3B82
	LD	B,A		;3B83
	LD	A,(0BB91h)	;3B84
	SUB	01h		;3B87
	RET	C		;3B89
	CP	B		;3B8A
	RET	C		;3B8B
	XOR	A		;3B8C
	SRL	B		;3B8D
	RRA			;3B8F
	LD	C,A		;3B90
	LD	HL,0B2D4h	;3B91
	ADD	HL,BC		;3B94
	XOR	A		;3B95
	RET			;3B96
	CALL	03BA1h		;3B97
	RET	NZ		;3B9A
	LD	A,0FFh		;3B9B
	LD	(0BB90h),A	;3B9D
	RET			;3BA0
	LD	A,(IX+0D)	;3BA1
	LD	B,A		;3BA4
	LD	A,(0BB90h)	;3BA5
	CP	B		;3BA8
	RET	NZ		;3BA9
	LD	L,(IX+1Ah)	;3BAA
	LD	H,(IX+1Bh)	;3BAD
	LD	DE,(0BB8Eh)	;3BB0
	SBC	HL,DE		;3BB4
	RET			;3BB6
	LD	A,0FFh		;3BB7
	LD	(0BB90h),A	;3BB9
	LD	A,(IX+33D)	;3BBC
	AND	03h		;3BBF
	LD	B,A		;3BC1
	LD	A,08h		;3BC2
	SUB	B		;3BC4
	LD	B,A		;3BC5
	XOR	A		;3BC6
	SRL	B		;3BC7
	RR	A		;3BC9
	LD	C,A		;3BCB
	PUSh	IX		;3BCC
	LD	IX,0B9DAh	;3BCE
	LD	DE,0B2D4h	;3BD2
	LD	A,0FFh		;3BD5
	CALL	0276Bh		;3BD7
	POP	IX		;3BDA
	JR	Z,03BE2h	;3BDC
	CP	0C7h		;3BDE
	JR	NZ,03C1Dh	;3BE0
	LD	A,B		;3BE2
	OR	C		;3BE3
	JR	Z,03C1Dh	;3BE4
	LD	HL,07Fh		;3BE6
	ADD	HL,BC		;3BE9
	ADD	HL,HL		;3BEA
	LD	A,H		;3BEB
	LD	(0BB91h),A	;3BEC
	XOR	A		;3BEF
	LD	B,A		;3BF0
	SUB	C		;3BF1
	AND	07Fh		;3BF2
	LD	C,A		;3BF4
	LD	A,0FFh		;3BF5
	CALL	NZ,03C21h	;3BF7
	PUSh	IX		;3BFA
	POP	HL		;3BFC
	LD	BC,021h		;3BFD
	ADD	HL,BC		;3C00
	LD	DE,0BB92h	;3C01
	LD	BC,03h		;3C04
	LDIR			;3C07
	LD	A,(IX+1Ah)	;3C09
	LD	(0BB8Eh),A	;3C0C
	LD	A,(IX+1Bh)	;3C0F
	LD	(0BB8Fh),A	;3C12
	LD	A,(IX+0D)	;3C15
	LD	(0BB90h),A	;3C18
	XOR	A		;3C1B
	RET			;3C1C
	XOR	A		;3C1D
	LD	B,A		;3C1E
	INC	A		;3C1F
	RET			;3C20
	PUSh	AF		;3C21
	PUSh	DE		;3C22
	AND	04h		;3C23
	CALL	02745h		;3C25
	SET	7,D		;3C28
	CALL	0F224h		;3C2A
	XOR	A		;3C2D
	LD	(DE),A		;3C2E
	INC	DE		;3C2F
	DEC	BC		;3C30
	LD	A,B		;3C31
	OR	C		;3C32
	JR	Z,03C44h	;3C33
	BIT	6,D		;3C35
	JR	Z,03C2Dh	;3C37
	POP	AF		;3C39
	AND	0C0h		;3C3A
	ADD	A,040h		;3C3C
	LD	D,A		;3C3E
	LD	E,00h		;3C3F
	POP	AF		;3C41
	JR	03C21h		;3C42
	POP	AF		;3C44
	POP	AF		;3C45
	LD	A,(0F2CFh)	;3C46
	JP	0F224h		;3C49
	LD	A,(IX+0Ch)	;3C4C
	LD	L,A		;3C4F
	LD	A,(IX+0Eh)	;3C50
	LD	H,A		;3C53
	LD	A,(IX+32D)	;3C54
	INC	A		;3C57
	JP	P,03C5Eh	;3C58
	INC	HL		;3C5B
	LD	A,00h		;3C5C
	LD	(IX+32D)A	;3C5E
	LD	A,L		;3C61
	LD	(IX+0Ch)A	;3C62
	LD	A,H		;3C65
	LD	(IX+0Eh)A	;3C66
	RET	P		;3C69
	LD	HL,(0B9EFh)	;3C6A
	XOR	A		;3C6D
	LD	B,A		;3C6E
	SUB	L		;3C6F
	AND	07Fh		;3C70
	LD	C,A		;3C72
	ADD	HL,BC		;3C73
	LD	BC,(0B9F1h)	;3C74
	JR	NC,03C7Bh	;3C78
	INC	BC		;3C7A
	LD	A,(0BA08h)	;3C7B
	AND	0C0h		;3C7E
	LD	D,A		;3C80
	XOR	A		;3C81
	LD	E,A		;3C82
	SBC	HL,DE		;3C83
	PUSh	BC		;3C85
	EX	(SP),HL		;3C86
	LD	BC,(0BA09h)	;3C87
	SBC	HL,BC		;3C8B
	POP	HL		;3C8D
	LD	B,A		;3C8E
	JR	C,03C9Ch	;3C8F
	LD	B,080h		;3C91
	JR	NZ,03C9Ch	;3C93
	LD	A,H		;3C95
	AND	0C0h		;3C96
	JR	NZ,03C9Ch	;3C98
	ADD	HL,HL		;3C9A
	LD	B,H		;3C9B
	LD	A,B		;3C9C
	LD	(IX+0Fh)A	;3C9D
	RET			;3CA0
	LD	A,(IX+32D)	;3CA1
	PUSh	AF		;3CA4
	LD	A,(IX+0Eh)	;3CA5
	LD	B,A		;3CA8
	LD	A,(IX+0Ch)	;3CA9
	LD	C,A		;3CAC
	POP	AF		;3CAD
	ADD	A,A		;3CAE
	SRL	B		;3CAF
	RR	C		;3CB1
	RRA			;3CB3
	LD	(IX+33D)A	;3CB4
	LD	(IX+34D)C	;3CB7
	LD	(IX+35D)B	;3CBA
	LD	HL,0BA07h	;3CBD
	LD	(HL),00h	;3CC0
	SRL	B		;3CC2
	RR	C		;3CC4
	RRA			;3CC6
	RR	(HL)		;3CC7
	INC	HL		;3CC9
	LD	(HL),A		;3CCA
	INC	HL		;3CCB
	LD	(HL),C		;3CCC
	INC	HL		;3CCD
	LD	(HL),B		;3CCE
	RET			;3CCF
	PUSh	IX		;3CD0
	POP	HL		;3CD2
	LD	BC,010h		;3CD3
	ADD	HL,BC		;3CD6
	EX	DE,HL		;3CD7
	LD	HL,0B9EFh	;3CD8
	LD	BC,04h		;3CDB
	LDIR			;3CDE
	LD	HL,0B9F4h	;3CE0
	LD	BC,04h		;3CE3
	LDIR			;3CE6
	LD	HL,0B9FFh	;3CE8
	LD	BC,08h		;3CEB
	LDIR			;3CEE
	LD	A,(IX+1Dh)	;3CF0		;FAT16*済 jp CLUST2(0D88h)	;in bank2/cpm.mac SAVE_FAB
	AND	0Fh		;3CF3
	LD	B,A		;3CF5
	LD	A,(0B9E8h)	;3CF6
	BIT	0,A		;3CF9
	JR	Z,03CFFh	;3CFB
	SET	6,B		;3CFD
	LD	A,(0B9F8h)	;3CFF
	BIT	7,A		;3D02
	JR	Z,03D08h	;3D04
	SET	5,B		;3D06
	LD	A,(0B9F8h)	;3D08
	BIT	6,A		;3D0B
	JR	Z,03D11h	;3D0D
	SET	4,B		;3D0F
	LD	A,(0BA0Bh)	;3D11
	BIT	7,A		;3D14
	JR	Z,03D1Ah	;3D16
	SET	7,B		;3D18
	LD	(IX+1Dh)B	;3D1A
	RET			;3D1D
	INC	HL		;3D1E
	LD	A,(DE)		;3D1F
	CP	05h		;3D20
	JR	NZ,03D26h	;3D22
	LD	A,0E5h		;3D24
	LD	(HL),A		;3D26
	INC	HL		;3D27
	INC	DE		;3D28
	LD	BC,0Ah		;3D29
	EX	DE,HL		;3D2C
	LDIR			;3D2D
	EX	DE,HL		;3D2F
	RET			;3D30
	
;#27(_RDBLK) ランダムなブロックの読み出し
	LD	A,01h		;3D31
	JR	03D36h		;3D33
	XOR	A		;3D35

;#26(_WRBLK) ランダムなブロックの書き込み
	EX	AF,AF'		;3D36
	LD	A,0C9h		;3D37
	LD	(0B976h),A	;3D39
	PUSh	HL		;3D3C
	CALL	039B9h		;3D3D
	JP	NZ,03E09h	;3D40
	LD	IX,(0BB96h)	;3D43
	CALL	03B97h		;3D47
	LD	C,(IX+0Eh)	;3D4A
	LD	B,(IX+0Fh)	;3D4D
	LD	HL,03Fh		;3D50
	XOR	A		;3D53
	SBC	HL,BC		;3D54
	LD	E,(IX+23h)	;3D56
	LD	D,(IX+24h)	;3D59
	JR	NC,03D5Fh	;3D5C
	LD	D,A		;3D5E
	CALL	03E30h		;3D5F
	LD	A,H		;3D62
	OR	L		;3D63
	JP	NZ,03E0Ch	;3D64
	PUSh	DE		;3D67
	LD	E,(IX+33D)	;3D68
	LD	D,(IX+34D)	;3D6B
	CALL	03E30h		;3D6E
	POP	BC		;3D71
	ADD	HL,BC		;3D72
	JP	C,03E0Ch	;3D73
	LD	(0BA07h),DE	;3D76
	LD	(0BA09h),HL	;3D7A
	POP	DE		;3D7D
	PUSh	DE		;3D7E
	LD	C,(IX+0Eh)	;3D7F
	LD	B,(IX+0Fh)	;3D82
	CALL	03E30h		;3D85
	LD	A,H		;3D88
	OR	L		;3D89
	JP	NZ,03E0Ch	;3D8A
	LD	C,E		;3D8D
	LD	B,D		;3D8E
	PUSh	BC		;3D8F
	EX	AF,AF'		;3D90
	PUSh	AF		;3D91
	LD	IX,0B9DAh	;3D92
	LD	DE,(0F23Dh)	;3D96
	BIT	0,A		;3D9A
	JR	NZ,03DA6h	;3D9C
	LD	A,B		;3D9E
	OR	C		;3D9F
	LD	A,00h		;3DA0
	JR	NZ,03DA6h	;3DA2
	SET	4,A		;3DA4
	CALL	0276Fh		;3DA6
	LD	(0B976h),A	;3DA9
	LD	IX,(0BB96h)	;3DAC
	POP	AF		;3DB0
	EX	AF,AF'		;3DB1
	XOR	A		;3DB2
	POP	HL		;3DB3
	SBC	HL,BC		;3DB4
	JR	Z,03DE5h	;3DB6
	LD	(0B977h),DE	;3DB8
	LD	E,(IX+0Eh)	;3DBC
	LD	D,(IX+0Fh)	;3DBF
	CALL	03E1Ah		;3DC2
	LD	A,H		;3DC5
	OR	L		;3DC6
	PUSh	BC		;3DC7
	JR	Z,03DDCh	;3DC8
	POP	BC		;3DCA
	INC	BC		;3DCB
	PUSh	BC		;3DCC
	EX	DE,HL		;3DCD
	SBC	HL,DE		;3DCE
	LD	B,H		;3DD0
	LD	C,L		;3DD1
	LD	DE,(0B977h)	;3DD2
	EX	AF,AF'		;3DD6
	BIT	0,A		;3DD7
	CALL	NZ,03C21h	;3DD9
	POP	BC		;3DDC
	POP	HL		;3DDD
	PUSh	BC		;3DDE
	XOR	A		;3DDF
	SBC	HL,BC		;3DE0
	JR	Z,03DE5h	;3DE2
	INC	A		;3DE4
	EX	AF,AF'		;3DE5
	CALL	03CD0h		;3DE6
	POP	DE		;3DE9
	LD	L,(IX+33D)	;3DEA
	LD	H,(IX+34D)	;3DED
	ADD	HL,DE		;3DF0
	LD	(IX+33D)L	;3DF1
	LD	(IX+34D)h	;3DF4
	JR	NC,03E06h	;3DF7
	LD	L,(IX+35D)	;3DF9
	LD	H,(IX+36D)	;3DFC
	INC	HL		;3DFF
	LD	(IX+35D)L	;3E00
	LD	(IX+36D)h	;3E03
	EX	AF,AF'		;3E06
	JR	03E11h		;3E07
	LD	(0B976h),A	;3E09
	POP	HL		;3E0C
	XOR	A		;3E0D
	LD	D,A		;3E0E
	LD	E,A		;3E0F
	INC	A		;3E10
	LD	L,A		;3E11
	LD	H,00h		;3E12
	OR	A		;3E14
	RET	Z		;3E15
	LD	A,(0B976h)	;3E16
	RET			;3E19
	XOR	A		;3E1A
	LD	H,A		;3E1B
	LD	L,A		;3E1C
	LD	A,010h		;3E1D
	CCF			;3E1F
	RL	C		;3E20
	RL	B		;3E22
	DEC	A		;3E24
	RET	M		;3E25
	ADC	HL,HL		;3E26
	SBC	HL,DE		;3E28
	JR	NC,03E1Fh	;3E2A
	ADD	HL,DE		;3E2C
	OR	A		;3E2D
	JR	03E20h		;3E2E
	PUSh	BC		;3E30
	LD	A,B		;3E31
	LD	HL,00h		;3E32
	LD	B,010h		;3E35
	ADD	HL,HL		;3E37
	RL	C		;3E38
	RLA			;3E3A
	JR	NC,03E44h	;3E3B
	ADD	HL,DE		;3E3D
	JR	NC,03E44h	;3E3E
	INC	C		;3E40
	JR	NZ,03E44h	;3E41
	INC	A		;3E43
	DJNZ	03E37h		;3E44
	EX	DE,HL		;3E46
	LD	L,C		;3E47
	LD	H,A		;3E48
	POP	BC		;3E49
	RET			;3E4A
	
	
	LD	(HL),0C0h	;3E4B
	LD	SP,0F51Fh	;3E4D
	LD	DE,0C09Fh	;3E50
	LD	C,0Fh		;3E53
	CALL	0F37Dh		;3E55
	INC	A		;3E58
	JP	Z,0C063h	;3E59
	LD	DE,0100h	;3E5C
	LD	C,01Ah		;3E5F
	CALL	0F37Dh		;3E61
	LD	HL,01h		;3E64
	LD	(0C0ADh),HL	;3E67
	LD	HL,03F00h	;3E6A
	LD	DE,0C09Fh	;3E6D
	LD	C,027h		;3E70
	CALL	0F37Dh		;3E72
	JP	0100h		;3E75
	LD	E,B		;3E78
	RET	NZ		;3E79
	CALL	00h		;3E7A
	LD	A,C		;3E7D
	AND	0FEh		;3E7E
	CP	02h		;3E80
	JP	NZ,0C06Ah	;3E82
	LD	A,(0C0C4h)	;3E85
	AND	A		;3E88
	JP	Z,04022h	;3E89
	LD	DE,0C079h	;3E8C
	LD	C,09h		;3E8F
	CALL	0F37Dh		;3E91
	LD	C,07h		;3E94
	CALL	0F37Dh		;3E96
	JR	03E4Dh		;3E99
	LD	B,D		;3E9B
	LD	L,A		;3E9C
	LD	L,A		;3E9D
	LD	(HL),H		;3E9E
	JR	NZ,03F06h	;3E9F
	LD	(HL),D		;3EA1
	LD	(HL),D		;3EA2
	LD	L,A		;3EA3
	LD	(HL),D		;3EA4
	DEC	C		;3EA5
	LD	A,(BC)		;3EA6
	LD	D,B		;3EA7
	LD	(HL),D		;3EA8
	LD	H,L		;3EA9
	LD	(HL),E		;3EAA
	LD	(HL),E		;3EAB
	JR	NZ,03F0Fh	;3EAC
	LD	L,(HL)		;3EAE
	LD	A,C		;3EAF
	JR	NZ,03F1Dh	;3EB0
	LD	H,L		;3EB2
	LD	A,C		;3EB3
	JR	NZ,03F1Ch	;3EB4
	LD	L,A		;3EB6
	LD	(HL),D		;3EB7
	JR	NZ,03F2Ch	;3EB8
	LD	H,L		;3EBA
	LD	(HL),H		;3EBB
	LD	(HL),D		;3EBC
	LD	A,C		;3EBD
	DEC	C		;3EBE
	LD	A,(BC)		;3EBF
	INC	h		;3EC0
	NOP			;3EC1
	LD	C,L		;3EC2
	LD	D,E		;3EC3
	LD	E,B		;3EC4
	LD	B,H		;3EC5
	LD	C,A		;3EC6
	LD	D,E		;3EC7
	JR	NZ,03EEAh	;3EC8
	LD	D,E		;3ECA
	LD	E,C		;3ECB
	EI			;3ECC
	SCF			;3ECD
	SBC	A,A		;3ECE
	RET			;3ECF
	PUSh	AF		;3ED0
	ADD	A,A		;3ED1
	LD	(06000h),A	;3ED2
	INC	A		;3ED5
	LD	(06800h),A	;3ED6
	POP	AF		;3ED9
	RET			;3EDA
	JP	04049h		;3EDB
	RET			;3EDE
	RET			;3EDF
	DB	'MEGASCSI ver2.15 by K.Tsujikawa.'	;3EE0
	


;*************************************************************************
;クラスタ→セクタ番号の変換
;
;Set:    DE=cluster number
;Return: DE=sector number bit0-15
;	 BIT16(3FF6h) = bit16-23

				;2DEC	jp 3F00h	
3F00h:
GETSEC:	LD	BC,0009h		
	ADD	HL,BC		;DPB+14h データ領域の先頭
	LD	C,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,C
	ADD	HL,DE
	JR	NC,Z0024;
	INC	A
Z0024:	EX	DE,HL		;BDE=sector number
	LD	(3FF6h),A	;save bit16-23 
	POP	BC
	POP	HL
	RET
;----------------------------------------
				;2D51	call 3F13
3F13h:	;*済
FSIZE1:	JR	NC,FSIZ_1
	INC	D
FSIZ_1:	INC	(HL)	
	DEC	(HL)
	RET	NZ
	INC	D
	RET
	
				;2D83	call 3F1B
3F1Bh:	
FSIZE2:	LD	A,(IX+0FCh)
	OR	A
	JR	NZ,FSIZ_2
	INC	D
FSIZ_2:	ADD	A,E
	RET
	
				;346F	call 3F24
3F24h:	
FSIZE3:
	JR	NC,FSIZ_3
	INC	D
FSIZ_3:	INC	E
	DEC	E
	RET	NZ
	INC	D
	RET
	

;------------------------------------
#1Bh PATCH
空きクラスタを数える
				;0C04	jp  3F2C
3F2Ch:	
ALLOC:
	LD	DE,0002h
	CALL	0E09
	JP	NZ,0C07h		;FAT12 drive
	LD	A,(3FF5h)
	OR	A
	JP	Z,0C07h			;バッファを使わない
	
BUF_RD:					;バッファにFATを読み込み、
					;空きクラスタを数える
	DI
	LD	A,(IX+06h)		;Local drive 
	LD	(3FA4h),A
	LD	A,(IX+0)		;diskromのスロット番号
	LD	(3FB4h),A

	LD	L,(IX+0Ch)		;FAT TOP
	LD	H,(IX+0Dh)
	LD	(3F9Fh),HL
	POP	HL			;クラスタ総数
	PUSH	IY
	PUSH	IX			;DPB address
	PUSH	HL			;クラスタ総数
	LD	BC,0
	LD	A,0C9h
	LD	(0038h),A
	LD	A,(3FF5h)		;バッファのセグメント番号
	OUT	(0FEh),A		;PAGE2
	
FREE_0:	CALL	3F99h			;バッファにFATのセクタを読み込む
	PUSH	HL			;調べるクラスタの番号
	ADD	HL,HL
	LD	A,H			;FAT address
	AND	01h
	LD	H,A
	SET	7,H			;address 8000h
	POP	DE			;クラスタ番号
FREE_1:	LD	A,(HL)
	INC	HL
	OR	(HL)			;'00,00' 
	INC	HL
	JR	NZ,FREE_2
	INC	BC			;空きクラスタを数える
FREE_2:	
	EX	(SP),HL
	SBC	HL,DE			;クラスタ総数　−　調べたクラスタの番号
	ADD	HL,DE
	EX	(SP),HL
	INC	DE
	JR	Z,FREE_3		;クラスタ総数に達した
	BIT	6,H			;C000h?　バッファの終わり?
	JR	Z,FREE_1		;次のクラスタを調べる
	JR	FREE_0			;バッファの終わり→次のFATセクタを読み込む
	
FREE_3:	
	LD	A,(0F2CFh)		;PAGE2 戻す
	OUT	(0FEh),A
	LD	A,0C3h
	LD	(0038h),A		;割り込みを戻す
	
	POP	HL
	POP	IX
	POP	IY
	PUSH	HL			;クラスタ総数
	JP	0C1Bh
	
3F99h:					;バッファにFATのセクタを読み込む
BUFRD:	
	PUSH	BC			;Counter
	PUSH	DE			;調べるクラスタの番号
	LD	E,D
	LD	D,0
FATTOP:	LD	HL,0001h		;FAT TOP
	ADD	HL,DE
	EX	DE,HL
BUF_DR:	LD	A,0			;Drive
	LD	B,20h			;20hセクタ読み込み
	LD	C,0
	LD	HL,8000h
	OR	A
DISKIO:	LD	IX,4010h
DSKSLT:	LD	IY,0
	CALL	001Ch
	POP	HL
	POP	BC
	RET

;--------------------------------------
;FAT12,16の判別
;FAT16はデータセグメントのドライブ情報　MEDIA ID bit7=0にする

				;34A9	call 3FBB
				;34AC	nop
3FBBh:	
DPBSET:	;*済
	LD	A,(IX+15h)		
	LD	(HL),A
@DPBST:	PUSH	HL
	PUSH	IX
	POP	HL
	LD	BC,0200h
DPB_1:	LD	A,46h		;'F'
	CPIR
	JR	Z,DPB_2
	OR	A
	JR	DPB_3
	
DPB_2:	PUSH	HL
	PUSH	BC
	LD	B,04h
	LD	DE,MOJI		;'AT16'
DPB_4:	LD	A,(DE)
	XOR	(HL)
	JR	NZ,DPB_5
	INC	HL
	INC	DE
	DJNZ	DPB_4
	SCF
DPB_5:	POP	BC
	POP	HL
	JR	NC,DPB_1

DPB_3:	POP	HL
	LD	A,(HL)
	RET	NC
	JP	3416h

3FE9h:
	LD	(IX+06h),A
	LD	(IX+1Eh),0FFh
	RET

MOJI:	DB	'AT16'
;-------------------------------------
;3FF5:
BUFSEG:	DB	0		;ファンクション1Bhで空きクラスタを数えるときに
				;使うマッパセグメント番号
;3FF6:
BIT16:	DB	0		;bit16-23 for caluclation of sector
;3FF7:
DSKEX:	DB	0		;bit16-23 for Disk buffer
;3FF8:
SDIR_1:	DB	0		;BBE2h   ディレクトリのセクタ番号 bit16-23
;3FF9:
SDIR_2:	DB	0		;BBD2h+4       ↑のコピー
;3FFA:
SDIR_3:	DB	0		;BBC6h+4 　　　↑のコピー
;3FFB:
;FDIR16:	DB	0		;FIB,FCB bit16-23  [ver0.12]
;3FFC:
RW_16:	DB	0		;bit16-23 for DISKIO



	

;-------------------------------------------------
;PATCH4  33A8h -

33A8h:	;*済			;1BF7h  call 33A8h
STOR_1:	PUSH	AF
	LD	A,(SDIR_1)	;BBE2h-3h (3FF8h)
	LD	(SDIR_2),A	;BBD6h-7h (3FF9h)
	POP	AF
	LD	DE,0BBD2h
	RET

33B4h:	;*済			;1C0Fh  call 33B4h
STOR_2:	PUSH	AF
	LD	A,(SDIR_2)	;(3FF9h)
	LD	(SDIR_1),A	;(3FF8h)
	POP	AF
	LD	HL,0BBD2h
	RET

33C0h:	;*済			;22A6h  call 33C0h
STOR_3:	LD	(IX+23h),B	;bit7-15 of sector
	LD	A,(SDIR_1)	;(3FF8h)
	LD	(IX+33h),A	;File handle
	RET
	
33CAh:	;*済			;232Ch  call 33CAh
STOR_4:	OR	A
	SBC	HL,DE
	RET	NZ
	LD	A,(SDIR_1)	;(3FF8h)
	SUB	(IX+33h)
	RET

33D5h:	;*済			;2454h  call 33D5h
STOR_5:	PUSH	AF
	LD	A,(SDIR_1)	;(3FF8h)
	LD	(SDIR_3),A	;(3FFAh)
	POP	AF
	LD	HL,0BBDEh
	RET
	
33E1h:	;*済			;2494h  call 33E1h
STOR_6:	PUSH	AF
	LD	A,(SDIR_3)	;(3FFAh)
	LD	(SDIR_1),A	;(3FF8h)
	POP	AF
	LD	HL,0BBC6h
	RET

33EDh:	;*済			;3AA8h  call 33EDh
				;1995h
STOR_7:	PUSH	AF
	LD	A,(SDIR_1)	;(3FF8h)
	ld	(ix+38h),a	;[ver0.12]
	POP	AF
	EX	DE,HL
	LDIR
	RET
	
33F9h:	;*済			;1A15h  call 33F9h
STOR_8:	PUSH	AF
	ld	a,(ix+38h)	;[ver0.12]
	LD	(SDIR_1),A	;(3FF8h)
	POP	AF
	LD	C,(IX+19h)
	RET

3405h:				;0CC6h  call 3405h
ALLSEC:	;*済
	EX	DE,HL
	DEC	HL
	DEC	HL
	OR	A
	RET	Z		;FAT12
	LD	(HL),0
	DEC	HL
	LD	(HL),0
	LD	BC,0011h
	ADD	HL,BC
	LD	(HL),A
	DEC	HL
	RET

3416h:	;*他			;3FE6h jp 3416h
	PUSH	HL
	DEC	HL
	DEC	HL
	DEC	HL
	DEC	HL
	RES	7,(HL)		;wrong versionが出ないように
	POP	HL
	RES	7,(HL)
	RET

;---------------------------------
3338h				;32F7h  jr  nz,GETVOL
GETVOL:	;*済
	PUSH	IX
	POP	HL
	LD	DE,000Ah
	ADD	HL,DE
	LD	A,(HL)		;UNDEL FLG (DOS1,FAT16)
	CP	01h
	JR	Z,PAT_47
	XOR	A
PAT_47:	LD	HL,0
	LD	(HL),A
	INC	HL
	XOR	A
	DEC	A
	RET

334Dh:				;2F29h  call 334Dh
CHKVOL:
	PUSH	AF
	LD	A,(IX+19h)	;check VOL
	CP	0FFh
	LD	DE,002Eh
	JR	NZ,VOL_1
	LD	DE,0012h
VOL_1:	POP	AF
	RET
	

	END
	
	