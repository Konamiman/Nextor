	.z80
	title	MSX-DOS 2 ROM   Copyright (1988)  ASCII corporation.
	subttl	ROM Header for MSX-DOS 2.0 ROM
;-----------------------------------------------------------------------------
;
	.xlist
;
FALSE   equ     0
TRUE    equ     NOT FALSE
;
warn    macro   text
	 if1
	  .printx % text
	 endif
	endm
;
pr_dec  macro   msg1,value,msg2
	 warn    <msg1 value msg2>
	endm
;
finish  macro   name
	 if1
	  pr_dec  <Size of module "&name" is>,%($-start),<bytes>
	 endif
	endm
;
start:
;
	.list
;
ifndef KANJI
KANJI	equ	TRUE
endif
;
; This  is the ROM header for the MSX-DOS ROM.  It must always be linked first
; in the ROM so it appears at 4000h.
;
;-----------------------------------------------------------------------------
;
ROMST::		defb	"AB"		;Indicates valid ROM
if 1
		defw	@INIT		;Banked ROM initialization entry point
else
		defw	INIT##		;Initialization entry point
endif
if KANJI
		defw	@STTMNT		;BASIC statement handler with Kanji
else
		defw	STATEMENT##	;BASIC statement handler entry point
endif
		defw	0		;No extension device
		defw	0		;No BASIC program text
		defw	0		;Reserved
		defw	0		;Reserved
		defw	0		;Reserved
;
;
DRVENT::				; DISK DRIVER ENTRY POINTS
;
DKRWENT::	jp	DSKIO##		;Sector read/write
DKCHGENT::	jp	DSKCHG##	;Disk change detection
GTDPBENT::	jp	GETDPB##	;Get disk parameter block
CHOIENT::	jp	CHOICE##	;Get format choice string
DKFMTENT::	jp	DSKFMT##	;Format a disk
MTOFFENT::	jp	MTOFF##		;Turn motor off
;
;
BASENT::	jp	BASIC##		;Entry point for "BASIC" command
					; from MSX-DOS CLI.
;
FORENT::	scf			;Entry point for "FORMAT" command
		jp	$FORMAT##	; from MSX-DOS CLI.
;
		jp	$MTOFF##	;Entry point to switch motor off
		nop			; on all drives.
;
GETSLOT::	jp	GSLOT1##	;GETSLOT routine, used by disk
					; drivers and XFER.
;
		ld	hl,(DOSHIM##)	;Version 1 compatible $INIT entry
		ret			; and should not move.
;
		jp	BIOS_STAT##	;Version 1 compatible $STAT entry
		nop
;
$DOSVER::	defw	_$DOSVER##	;DOS version string.
		defw	0
;
;
; --------  UP TO HERE ARE REFERENCED FROM OUTSIDE OF ROM  --------
;
@STTMNT:	call	KNJSTT##
		ret	nc
		jp	STATEMENT##
;
@EXTBIO::	ld	ix,@MAPBIO##
		call	call0
		jp	FCALSAV##
;
@TIME_IRQ::	ld	ix,@TIMINT##	;Do things necessary
;
call0:		ex	af,af'
		ld	a,(BNK_ID##)	;Save current bank
		push	af
		call	JMPBNK0		;Switch to bank #0
		ex	af,af'
		pop	af		;Restore old bank
		call	CHGBNK##
		ex	af,af'
		ret
;
CALBNK::	call	JMPBNK
		ex	af,af'
		xor	a
		call	CHGBNK##	;Always re-select bank #0
		ex	af,af'
		ret
;
@INIT:		ld	ix,INIT##	;Jump to the INIT routine in bank-0
JMPBNK0::	xor	a
JMPBNK:		call	CHGBNK##	;Select desired bank
		ex	af,af'		;Restore AF
		jp	(ix)		;Go do the function
;
		defs	ROMST+78h-$,0FFh
;
;-----------------------------------------------------------------------------
;
		jp	BIOS_IN##	;Version 1 compatible $IN entry
;
		defs	ROMST+80h-$,0FFh
;
RAMENT::				; RAM DISK DRIVER ENTRY POINTS
;
		jp	R_DSKIO##	;Sector read/write
		jp	R_DSKCHG##	;Disk change detection
		jp	R_GETDPB##	;Get disk parameter block
		jp	R_CHOICE##	;Get format choice string
		jp	R_DSKFMT##	;Format a disk
;
;
		defs	ROMST+8Fh-$,0FFh
		jp	BIOS_OUT##	;Version 1 compatible $OUT entry
;
;
;-----------------------------------------------------------------------------
;
	finish	<DOSHEAD>
	end
;
